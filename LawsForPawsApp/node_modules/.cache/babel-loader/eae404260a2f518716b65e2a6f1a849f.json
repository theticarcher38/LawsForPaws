{"ast":null,"code":"import { G as GESTURE_CONTROLLER } from './gesture-controller-31cb6bb9.js';\nexport { G as GESTURE_CONTROLLER } from './gesture-controller-31cb6bb9.js';\n\nconst addEventListener = (el, eventName, callback, opts) => {\n  // use event listener options when supported\n  // otherwise it's just a boolean for the \"capture\" arg\n  const listenerOpts = supportsPassive(el) ? {\n    'capture': !!opts.capture,\n    'passive': !!opts.passive\n  } : !!opts.capture;\n  let add;\n  let remove;\n\n  if (el['__zone_symbol__addEventListener']) {\n    add = '__zone_symbol__addEventListener';\n    remove = '__zone_symbol__removeEventListener';\n  } else {\n    add = 'addEventListener';\n    remove = 'removeEventListener';\n  }\n\n  el[add](eventName, callback, listenerOpts);\n  return () => {\n    el[remove](eventName, callback, listenerOpts);\n  };\n};\n\nconst supportsPassive = node => {\n  if (_sPassive === undefined) {\n    try {\n      const opts = Object.defineProperty({}, 'passive', {\n        get: () => {\n          _sPassive = true;\n        }\n      });\n      node.addEventListener('optsTest', () => {\n        return;\n      }, opts);\n    } catch (e) {\n      _sPassive = false;\n    }\n  }\n\n  return !!_sPassive;\n};\n\nlet _sPassive;\n\nconst MOUSE_WAIT = 2000;\n\nconst createPointerEvents = (el, pointerDown, pointerMove, pointerUp, options) => {\n  let rmTouchStart;\n  let rmTouchMove;\n  let rmTouchEnd;\n  let rmTouchCancel;\n  let rmMouseStart;\n  let rmMouseMove;\n  let rmMouseUp;\n  let lastTouchEvent = 0;\n\n  const handleTouchStart = ev => {\n    lastTouchEvent = Date.now() + MOUSE_WAIT;\n\n    if (!pointerDown(ev)) {\n      return;\n    }\n\n    if (!rmTouchMove && pointerMove) {\n      rmTouchMove = addEventListener(el, 'touchmove', pointerMove, options);\n    }\n\n    if (!rmTouchEnd) {\n      rmTouchEnd = addEventListener(el, 'touchend', handleTouchEnd, options);\n    }\n\n    if (!rmTouchCancel) {\n      rmTouchCancel = addEventListener(el, 'touchcancel', handleTouchEnd, options);\n    }\n  };\n\n  const handleMouseDown = ev => {\n    if (lastTouchEvent > Date.now()) {\n      return;\n    }\n\n    if (!pointerDown(ev)) {\n      return;\n    }\n\n    if (!rmMouseMove && pointerMove) {\n      rmMouseMove = addEventListener(getDocument(el), 'mousemove', pointerMove, options);\n    }\n\n    if (!rmMouseUp) {\n      rmMouseUp = addEventListener(getDocument(el), 'mouseup', handleMouseUp, options);\n    }\n  };\n\n  const handleTouchEnd = ev => {\n    stopTouch();\n\n    if (pointerUp) {\n      pointerUp(ev);\n    }\n  };\n\n  const handleMouseUp = ev => {\n    stopMouse();\n\n    if (pointerUp) {\n      pointerUp(ev);\n    }\n  };\n\n  const stopTouch = () => {\n    if (rmTouchMove) {\n      rmTouchMove();\n    }\n\n    if (rmTouchEnd) {\n      rmTouchEnd();\n    }\n\n    if (rmTouchCancel) {\n      rmTouchCancel();\n    }\n\n    rmTouchMove = rmTouchEnd = rmTouchCancel = undefined;\n  };\n\n  const stopMouse = () => {\n    if (rmMouseMove) {\n      rmMouseMove();\n    }\n\n    if (rmMouseUp) {\n      rmMouseUp();\n    }\n\n    rmMouseMove = rmMouseUp = undefined;\n  };\n\n  const stop = () => {\n    stopTouch();\n    stopMouse();\n  };\n\n  const enable = (isEnabled = true) => {\n    if (!isEnabled) {\n      if (rmTouchStart) {\n        rmTouchStart();\n      }\n\n      if (rmMouseStart) {\n        rmMouseStart();\n      }\n\n      rmTouchStart = rmMouseStart = undefined;\n      stop();\n    } else {\n      if (!rmTouchStart) {\n        rmTouchStart = addEventListener(el, 'touchstart', handleTouchStart, options);\n      }\n\n      if (!rmMouseStart) {\n        rmMouseStart = addEventListener(el, 'mousedown', handleMouseDown, options);\n      }\n    }\n  };\n\n  const destroy = () => {\n    enable(false);\n    pointerUp = pointerMove = pointerDown = undefined;\n  };\n\n  return {\n    enable,\n    stop,\n    destroy\n  };\n};\n\nconst getDocument = node => {\n  return node instanceof Document ? node : node.ownerDocument;\n};\n\nconst createPanRecognizer = (direction, thresh, maxAngle) => {\n  const radians = maxAngle * (Math.PI / 180);\n  const isDirX = direction === 'x';\n  const maxCosine = Math.cos(radians);\n  const threshold = thresh * thresh;\n  let startX = 0;\n  let startY = 0;\n  let dirty = false;\n  let isPan = 0;\n  return {\n    start(x, y) {\n      startX = x;\n      startY = y;\n      isPan = 0;\n      dirty = true;\n    },\n\n    detect(x, y) {\n      if (!dirty) {\n        return false;\n      }\n\n      const deltaX = x - startX;\n      const deltaY = y - startY;\n      const distance = deltaX * deltaX + deltaY * deltaY;\n\n      if (distance < threshold) {\n        return false;\n      }\n\n      const hypotenuse = Math.sqrt(distance);\n      const cosine = (isDirX ? deltaX : deltaY) / hypotenuse;\n\n      if (cosine > maxCosine) {\n        isPan = 1;\n      } else if (cosine < -maxCosine) {\n        isPan = -1;\n      } else {\n        isPan = 0;\n      }\n\n      dirty = false;\n      return true;\n    },\n\n    isGesture() {\n      return isPan !== 0;\n    },\n\n    getDirection() {\n      return isPan;\n    }\n\n  };\n};\n\nconst createGesture = config => {\n  let hasCapturedPan = false;\n  let hasStartedPan = false;\n  let hasFiredStart = true;\n  let isMoveQueued = false;\n  const finalConfig = Object.assign({\n    disableScroll: false,\n    direction: 'x',\n    gesturePriority: 0,\n    passive: true,\n    maxAngle: 40,\n    threshold: 10\n  }, config);\n  const canStart = finalConfig.canStart;\n  const onWillStart = finalConfig.onWillStart;\n  const onStart = finalConfig.onStart;\n  const onEnd = finalConfig.onEnd;\n  const notCaptured = finalConfig.notCaptured;\n  const onMove = finalConfig.onMove;\n  const threshold = finalConfig.threshold;\n  const passive = finalConfig.passive;\n  const blurOnStart = finalConfig.blurOnStart;\n  const detail = {\n    type: 'pan',\n    startX: 0,\n    startY: 0,\n    startTime: 0,\n    currentX: 0,\n    currentY: 0,\n    velocityX: 0,\n    velocityY: 0,\n    deltaX: 0,\n    deltaY: 0,\n    currentTime: 0,\n    event: undefined,\n    data: undefined\n  };\n  const pan = createPanRecognizer(finalConfig.direction, finalConfig.threshold, finalConfig.maxAngle);\n  const gesture = GESTURE_CONTROLLER.createGesture({\n    name: config.gestureName,\n    priority: config.gesturePriority,\n    disableScroll: config.disableScroll\n  });\n\n  const pointerDown = ev => {\n    const timeStamp = now(ev);\n\n    if (hasStartedPan || !hasFiredStart) {\n      return false;\n    }\n\n    updateDetail(ev, detail);\n    detail.startX = detail.currentX;\n    detail.startY = detail.currentY;\n    detail.startTime = detail.currentTime = timeStamp;\n    detail.velocityX = detail.velocityY = detail.deltaX = detail.deltaY = 0;\n    detail.event = ev; // Check if gesture can start\n\n    if (canStart && canStart(detail) === false) {\n      return false;\n    } // Release fallback\n\n\n    gesture.release(); // Start gesture\n\n    if (!gesture.start()) {\n      return false;\n    }\n\n    hasStartedPan = true;\n\n    if (threshold === 0) {\n      return tryToCapturePan();\n    }\n\n    pan.start(detail.startX, detail.startY);\n    return true;\n  };\n\n  const pointerMove = ev => {\n    // fast path, if gesture is currently captured\n    // do minimum job to get user-land even dispatched\n    if (hasCapturedPan) {\n      if (!isMoveQueued && hasFiredStart) {\n        isMoveQueued = true;\n        calcGestureData(detail, ev);\n        requestAnimationFrame(fireOnMove);\n      }\n\n      return;\n    } // gesture is currently being detected\n\n\n    calcGestureData(detail, ev);\n\n    if (pan.detect(detail.currentX, detail.currentY)) {\n      if (!pan.isGesture() || !tryToCapturePan()) {\n        abortGesture();\n      }\n    }\n  };\n\n  const fireOnMove = () => {\n    // Since fireOnMove is called inside a RAF, onEnd() might be called,\n    // we must double check hasCapturedPan\n    if (!hasCapturedPan) {\n      return;\n    }\n\n    isMoveQueued = false;\n\n    if (onMove) {\n      onMove(detail);\n    }\n  };\n\n  const tryToCapturePan = () => {\n    if (gesture && !gesture.capture()) {\n      return false;\n    }\n\n    hasCapturedPan = true;\n    hasFiredStart = false; // reset start position since the real user-land event starts here\n    // If the pan detector threshold is big, not resetting the start position\n    // will cause a jump in the animation equal to the detector threshold.\n    // the array of positions used to calculate the gesture velocity does not\n    // need to be cleaned, more points in the positions array always results in a\n    // more accurate value of the velocity.\n\n    detail.startX = detail.currentX;\n    detail.startY = detail.currentY;\n    detail.startTime = detail.currentTime;\n\n    if (onWillStart) {\n      onWillStart(detail).then(fireOnStart);\n    } else {\n      fireOnStart();\n    }\n\n    return true;\n  };\n\n  const blurActiveElement = () => {\n    /* tslint:disable-next-line */\n    if (typeof document !== 'undefined') {\n      const activeElement = document.activeElement;\n\n      if (activeElement !== null && activeElement.blur) {\n        activeElement.blur();\n      }\n    }\n  };\n\n  const fireOnStart = () => {\n    if (blurOnStart) {\n      blurActiveElement();\n    }\n\n    if (onStart) {\n      onStart(detail);\n    }\n\n    hasFiredStart = true;\n  };\n\n  const reset = () => {\n    hasCapturedPan = false;\n    hasStartedPan = false;\n    isMoveQueued = false;\n    hasFiredStart = true;\n    gesture.release();\n  }; // END *************************\n\n\n  const pointerUp = ev => {\n    const tmpHasCaptured = hasCapturedPan;\n    const tmpHasFiredStart = hasFiredStart;\n    reset();\n\n    if (!tmpHasFiredStart) {\n      return;\n    }\n\n    calcGestureData(detail, ev); // Try to capture press\n\n    if (tmpHasCaptured) {\n      if (onEnd) {\n        onEnd(detail);\n      }\n\n      return;\n    } // Not captured any event\n\n\n    if (notCaptured) {\n      notCaptured(detail);\n    }\n  };\n\n  const pointerEvents = createPointerEvents(finalConfig.el, pointerDown, pointerMove, pointerUp, {\n    capture: false,\n    passive\n  });\n\n  const abortGesture = () => {\n    reset();\n    pointerEvents.stop();\n\n    if (notCaptured) {\n      notCaptured(detail);\n    }\n  };\n\n  return {\n    enable(enable = true) {\n      if (!enable) {\n        if (hasCapturedPan) {\n          pointerUp(undefined);\n        }\n\n        reset();\n      }\n\n      pointerEvents.enable(enable);\n    },\n\n    destroy() {\n      gesture.destroy();\n      pointerEvents.destroy();\n    }\n\n  };\n};\n\nconst calcGestureData = (detail, ev) => {\n  if (!ev) {\n    return;\n  }\n\n  const prevX = detail.currentX;\n  const prevY = detail.currentY;\n  const prevT = detail.currentTime;\n  updateDetail(ev, detail);\n  const currentX = detail.currentX;\n  const currentY = detail.currentY;\n  const timestamp = detail.currentTime = now(ev);\n  const timeDelta = timestamp - prevT;\n\n  if (timeDelta > 0 && timeDelta < 100) {\n    const velocityX = (currentX - prevX) / timeDelta;\n    const velocityY = (currentY - prevY) / timeDelta;\n    detail.velocityX = velocityX * 0.7 + detail.velocityX * 0.3;\n    detail.velocityY = velocityY * 0.7 + detail.velocityY * 0.3;\n  }\n\n  detail.deltaX = currentX - detail.startX;\n  detail.deltaY = currentY - detail.startY;\n  detail.event = ev;\n};\n\nconst updateDetail = (ev, detail) => {\n  // get X coordinates for either a mouse click\n  // or a touch depending on the given event\n  let x = 0;\n  let y = 0;\n\n  if (ev) {\n    const changedTouches = ev.changedTouches;\n\n    if (changedTouches && changedTouches.length > 0) {\n      const touch = changedTouches[0];\n      x = touch.clientX;\n      y = touch.clientY;\n    } else if (ev.pageX !== undefined) {\n      x = ev.pageX;\n      y = ev.pageY;\n    }\n  }\n\n  detail.currentX = x;\n  detail.currentY = y;\n};\n\nconst now = ev => {\n  return ev.timeStamp || Date.now();\n};\n\nexport { createGesture };","map":{"version":3,"sources":["/workspace/LawsForPaws/LawsForPawsApp/node_modules/@ionic/core/dist/esm/index-f49d994d.js"],"names":["G","GESTURE_CONTROLLER","addEventListener","el","eventName","callback","opts","listenerOpts","supportsPassive","capture","passive","add","remove","node","_sPassive","undefined","Object","defineProperty","get","e","MOUSE_WAIT","createPointerEvents","pointerDown","pointerMove","pointerUp","options","rmTouchStart","rmTouchMove","rmTouchEnd","rmTouchCancel","rmMouseStart","rmMouseMove","rmMouseUp","lastTouchEvent","handleTouchStart","ev","Date","now","handleTouchEnd","handleMouseDown","getDocument","handleMouseUp","stopTouch","stopMouse","stop","enable","isEnabled","destroy","Document","ownerDocument","createPanRecognizer","direction","thresh","maxAngle","radians","Math","PI","isDirX","maxCosine","cos","threshold","startX","startY","dirty","isPan","start","x","y","detect","deltaX","deltaY","distance","hypotenuse","sqrt","cosine","isGesture","getDirection","createGesture","config","hasCapturedPan","hasStartedPan","hasFiredStart","isMoveQueued","finalConfig","assign","disableScroll","gesturePriority","canStart","onWillStart","onStart","onEnd","notCaptured","onMove","blurOnStart","detail","type","startTime","currentX","currentY","velocityX","velocityY","currentTime","event","data","pan","gesture","name","gestureName","priority","timeStamp","updateDetail","release","tryToCapturePan","calcGestureData","requestAnimationFrame","fireOnMove","abortGesture","then","fireOnStart","blurActiveElement","document","activeElement","blur","reset","tmpHasCaptured","tmpHasFiredStart","pointerEvents","prevX","prevY","prevT","timestamp","timeDelta","changedTouches","length","touch","clientX","clientY","pageX","pageY"],"mappings":"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","sourcesContent":["import { G as GESTURE_CONTROLLER } from './gesture-controller-31cb6bb9.js';\nexport { G as GESTURE_CONTROLLER } from './gesture-controller-31cb6bb9.js';\n\nconst addEventListener = (el, eventName, callback, opts) => {\n  // use event listener options when supported\n  // otherwise it's just a boolean for the \"capture\" arg\n  const listenerOpts = supportsPassive(el) ? {\n    'capture': !!opts.capture,\n    'passive': !!opts.passive,\n  } : !!opts.capture;\n  let add;\n  let remove;\n  if (el['__zone_symbol__addEventListener']) {\n    add = '__zone_symbol__addEventListener';\n    remove = '__zone_symbol__removeEventListener';\n  }\n  else {\n    add = 'addEventListener';\n    remove = 'removeEventListener';\n  }\n  el[add](eventName, callback, listenerOpts);\n  return () => {\n    el[remove](eventName, callback, listenerOpts);\n  };\n};\nconst supportsPassive = (node) => {\n  if (_sPassive === undefined) {\n    try {\n      const opts = Object.defineProperty({}, 'passive', {\n        get: () => {\n          _sPassive = true;\n        }\n      });\n      node.addEventListener('optsTest', () => { return; }, opts);\n    }\n    catch (e) {\n      _sPassive = false;\n    }\n  }\n  return !!_sPassive;\n};\nlet _sPassive;\n\nconst MOUSE_WAIT = 2000;\nconst createPointerEvents = (el, pointerDown, pointerMove, pointerUp, options) => {\n  let rmTouchStart;\n  let rmTouchMove;\n  let rmTouchEnd;\n  let rmTouchCancel;\n  let rmMouseStart;\n  let rmMouseMove;\n  let rmMouseUp;\n  let lastTouchEvent = 0;\n  const handleTouchStart = (ev) => {\n    lastTouchEvent = Date.now() + MOUSE_WAIT;\n    if (!pointerDown(ev)) {\n      return;\n    }\n    if (!rmTouchMove && pointerMove) {\n      rmTouchMove = addEventListener(el, 'touchmove', pointerMove, options);\n    }\n    if (!rmTouchEnd) {\n      rmTouchEnd = addEventListener(el, 'touchend', handleTouchEnd, options);\n    }\n    if (!rmTouchCancel) {\n      rmTouchCancel = addEventListener(el, 'touchcancel', handleTouchEnd, options);\n    }\n  };\n  const handleMouseDown = (ev) => {\n    if (lastTouchEvent > Date.now()) {\n      return;\n    }\n    if (!pointerDown(ev)) {\n      return;\n    }\n    if (!rmMouseMove && pointerMove) {\n      rmMouseMove = addEventListener(getDocument(el), 'mousemove', pointerMove, options);\n    }\n    if (!rmMouseUp) {\n      rmMouseUp = addEventListener(getDocument(el), 'mouseup', handleMouseUp, options);\n    }\n  };\n  const handleTouchEnd = (ev) => {\n    stopTouch();\n    if (pointerUp) {\n      pointerUp(ev);\n    }\n  };\n  const handleMouseUp = (ev) => {\n    stopMouse();\n    if (pointerUp) {\n      pointerUp(ev);\n    }\n  };\n  const stopTouch = () => {\n    if (rmTouchMove) {\n      rmTouchMove();\n    }\n    if (rmTouchEnd) {\n      rmTouchEnd();\n    }\n    if (rmTouchCancel) {\n      rmTouchCancel();\n    }\n    rmTouchMove = rmTouchEnd = rmTouchCancel = undefined;\n  };\n  const stopMouse = () => {\n    if (rmMouseMove) {\n      rmMouseMove();\n    }\n    if (rmMouseUp) {\n      rmMouseUp();\n    }\n    rmMouseMove = rmMouseUp = undefined;\n  };\n  const stop = () => {\n    stopTouch();\n    stopMouse();\n  };\n  const enable = (isEnabled = true) => {\n    if (!isEnabled) {\n      if (rmTouchStart) {\n        rmTouchStart();\n      }\n      if (rmMouseStart) {\n        rmMouseStart();\n      }\n      rmTouchStart = rmMouseStart = undefined;\n      stop();\n    }\n    else {\n      if (!rmTouchStart) {\n        rmTouchStart = addEventListener(el, 'touchstart', handleTouchStart, options);\n      }\n      if (!rmMouseStart) {\n        rmMouseStart = addEventListener(el, 'mousedown', handleMouseDown, options);\n      }\n    }\n  };\n  const destroy = () => {\n    enable(false);\n    pointerUp = pointerMove = pointerDown = undefined;\n  };\n  return {\n    enable,\n    stop,\n    destroy\n  };\n};\nconst getDocument = (node) => {\n  return node instanceof Document ? node : node.ownerDocument;\n};\n\nconst createPanRecognizer = (direction, thresh, maxAngle) => {\n  const radians = maxAngle * (Math.PI / 180);\n  const isDirX = direction === 'x';\n  const maxCosine = Math.cos(radians);\n  const threshold = thresh * thresh;\n  let startX = 0;\n  let startY = 0;\n  let dirty = false;\n  let isPan = 0;\n  return {\n    start(x, y) {\n      startX = x;\n      startY = y;\n      isPan = 0;\n      dirty = true;\n    },\n    detect(x, y) {\n      if (!dirty) {\n        return false;\n      }\n      const deltaX = (x - startX);\n      const deltaY = (y - startY);\n      const distance = deltaX * deltaX + deltaY * deltaY;\n      if (distance < threshold) {\n        return false;\n      }\n      const hypotenuse = Math.sqrt(distance);\n      const cosine = (isDirX ? deltaX : deltaY) / hypotenuse;\n      if (cosine > maxCosine) {\n        isPan = 1;\n      }\n      else if (cosine < -maxCosine) {\n        isPan = -1;\n      }\n      else {\n        isPan = 0;\n      }\n      dirty = false;\n      return true;\n    },\n    isGesture() {\n      return isPan !== 0;\n    },\n    getDirection() {\n      return isPan;\n    }\n  };\n};\n\nconst createGesture = (config) => {\n  let hasCapturedPan = false;\n  let hasStartedPan = false;\n  let hasFiredStart = true;\n  let isMoveQueued = false;\n  const finalConfig = Object.assign({ disableScroll: false, direction: 'x', gesturePriority: 0, passive: true, maxAngle: 40, threshold: 10 }, config);\n  const canStart = finalConfig.canStart;\n  const onWillStart = finalConfig.onWillStart;\n  const onStart = finalConfig.onStart;\n  const onEnd = finalConfig.onEnd;\n  const notCaptured = finalConfig.notCaptured;\n  const onMove = finalConfig.onMove;\n  const threshold = finalConfig.threshold;\n  const passive = finalConfig.passive;\n  const blurOnStart = finalConfig.blurOnStart;\n  const detail = {\n    type: 'pan',\n    startX: 0,\n    startY: 0,\n    startTime: 0,\n    currentX: 0,\n    currentY: 0,\n    velocityX: 0,\n    velocityY: 0,\n    deltaX: 0,\n    deltaY: 0,\n    currentTime: 0,\n    event: undefined,\n    data: undefined\n  };\n  const pan = createPanRecognizer(finalConfig.direction, finalConfig.threshold, finalConfig.maxAngle);\n  const gesture = GESTURE_CONTROLLER.createGesture({\n    name: config.gestureName,\n    priority: config.gesturePriority,\n    disableScroll: config.disableScroll\n  });\n  const pointerDown = (ev) => {\n    const timeStamp = now(ev);\n    if (hasStartedPan || !hasFiredStart) {\n      return false;\n    }\n    updateDetail(ev, detail);\n    detail.startX = detail.currentX;\n    detail.startY = detail.currentY;\n    detail.startTime = detail.currentTime = timeStamp;\n    detail.velocityX = detail.velocityY = detail.deltaX = detail.deltaY = 0;\n    detail.event = ev;\n    // Check if gesture can start\n    if (canStart && canStart(detail) === false) {\n      return false;\n    }\n    // Release fallback\n    gesture.release();\n    // Start gesture\n    if (!gesture.start()) {\n      return false;\n    }\n    hasStartedPan = true;\n    if (threshold === 0) {\n      return tryToCapturePan();\n    }\n    pan.start(detail.startX, detail.startY);\n    return true;\n  };\n  const pointerMove = (ev) => {\n    // fast path, if gesture is currently captured\n    // do minimum job to get user-land even dispatched\n    if (hasCapturedPan) {\n      if (!isMoveQueued && hasFiredStart) {\n        isMoveQueued = true;\n        calcGestureData(detail, ev);\n        requestAnimationFrame(fireOnMove);\n      }\n      return;\n    }\n    // gesture is currently being detected\n    calcGestureData(detail, ev);\n    if (pan.detect(detail.currentX, detail.currentY)) {\n      if (!pan.isGesture() || !tryToCapturePan()) {\n        abortGesture();\n      }\n    }\n  };\n  const fireOnMove = () => {\n    // Since fireOnMove is called inside a RAF, onEnd() might be called,\n    // we must double check hasCapturedPan\n    if (!hasCapturedPan) {\n      return;\n    }\n    isMoveQueued = false;\n    if (onMove) {\n      onMove(detail);\n    }\n  };\n  const tryToCapturePan = () => {\n    if (gesture && !gesture.capture()) {\n      return false;\n    }\n    hasCapturedPan = true;\n    hasFiredStart = false;\n    // reset start position since the real user-land event starts here\n    // If the pan detector threshold is big, not resetting the start position\n    // will cause a jump in the animation equal to the detector threshold.\n    // the array of positions used to calculate the gesture velocity does not\n    // need to be cleaned, more points in the positions array always results in a\n    // more accurate value of the velocity.\n    detail.startX = detail.currentX;\n    detail.startY = detail.currentY;\n    detail.startTime = detail.currentTime;\n    if (onWillStart) {\n      onWillStart(detail).then(fireOnStart);\n    }\n    else {\n      fireOnStart();\n    }\n    return true;\n  };\n  const blurActiveElement = () => {\n    /* tslint:disable-next-line */\n    if (typeof document !== 'undefined') {\n      const activeElement = document.activeElement;\n      if (activeElement !== null && activeElement.blur) {\n        activeElement.blur();\n      }\n    }\n  };\n  const fireOnStart = () => {\n    if (blurOnStart) {\n      blurActiveElement();\n    }\n    if (onStart) {\n      onStart(detail);\n    }\n    hasFiredStart = true;\n  };\n  const reset = () => {\n    hasCapturedPan = false;\n    hasStartedPan = false;\n    isMoveQueued = false;\n    hasFiredStart = true;\n    gesture.release();\n  };\n  // END *************************\n  const pointerUp = (ev) => {\n    const tmpHasCaptured = hasCapturedPan;\n    const tmpHasFiredStart = hasFiredStart;\n    reset();\n    if (!tmpHasFiredStart) {\n      return;\n    }\n    calcGestureData(detail, ev);\n    // Try to capture press\n    if (tmpHasCaptured) {\n      if (onEnd) {\n        onEnd(detail);\n      }\n      return;\n    }\n    // Not captured any event\n    if (notCaptured) {\n      notCaptured(detail);\n    }\n  };\n  const pointerEvents = createPointerEvents(finalConfig.el, pointerDown, pointerMove, pointerUp, {\n    capture: false,\n    passive\n  });\n  const abortGesture = () => {\n    reset();\n    pointerEvents.stop();\n    if (notCaptured) {\n      notCaptured(detail);\n    }\n  };\n  return {\n    enable(enable = true) {\n      if (!enable) {\n        if (hasCapturedPan) {\n          pointerUp(undefined);\n        }\n        reset();\n      }\n      pointerEvents.enable(enable);\n    },\n    destroy() {\n      gesture.destroy();\n      pointerEvents.destroy();\n    }\n  };\n};\nconst calcGestureData = (detail, ev) => {\n  if (!ev) {\n    return;\n  }\n  const prevX = detail.currentX;\n  const prevY = detail.currentY;\n  const prevT = detail.currentTime;\n  updateDetail(ev, detail);\n  const currentX = detail.currentX;\n  const currentY = detail.currentY;\n  const timestamp = detail.currentTime = now(ev);\n  const timeDelta = timestamp - prevT;\n  if (timeDelta > 0 && timeDelta < 100) {\n    const velocityX = (currentX - prevX) / timeDelta;\n    const velocityY = (currentY - prevY) / timeDelta;\n    detail.velocityX = velocityX * 0.7 + detail.velocityX * 0.3;\n    detail.velocityY = velocityY * 0.7 + detail.velocityY * 0.3;\n  }\n  detail.deltaX = currentX - detail.startX;\n  detail.deltaY = currentY - detail.startY;\n  detail.event = ev;\n};\nconst updateDetail = (ev, detail) => {\n  // get X coordinates for either a mouse click\n  // or a touch depending on the given event\n  let x = 0;\n  let y = 0;\n  if (ev) {\n    const changedTouches = ev.changedTouches;\n    if (changedTouches && changedTouches.length > 0) {\n      const touch = changedTouches[0];\n      x = touch.clientX;\n      y = touch.clientY;\n    }\n    else if (ev.pageX !== undefined) {\n      x = ev.pageX;\n      y = ev.pageY;\n    }\n  }\n  detail.currentX = x;\n  detail.currentY = y;\n};\nconst now = (ev) => {\n  return ev.timeStamp || Date.now();\n};\n\nexport { createGesture };\n"]},"metadata":{},"sourceType":"module"}