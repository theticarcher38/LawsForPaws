{"ast":null,"code":"import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-e806d1f6.js';\nimport { b as getIonMode } from './ionic-global-9d5c8ee3.js';\nimport { a as addEventListener, b as removeEventListener, f as findItemLabel } from './helpers-002e4980.js';\nimport { c as createColorClasses, h as hostContext } from './theme-ff3fc52f.js';\nconst radioIosCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}:host{--color-checked:var(--ion-color-primary, #3880ff);width:15px;height:24px}:host(.ion-color.radio-checked) .radio-inner{border-color:var(--ion-color-base)}.item-radio.item-ios ion-label{margin-left:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.item-radio.item-ios ion-label{margin-left:unset;-webkit-margin-start:0;margin-inline-start:0}}.radio-inner{width:33%;height:50%}:host(.radio-checked) .radio-inner{-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:2px;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--color-checked)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);left:-9px;top:-8px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #4c8dff);content:\\\"\\\";opacity:0.2}:host-context([dir=rtl]):host(.ion-focused) .radio-icon::after,:host-context([dir=rtl]).ion-focused .radio-icon::after{left:unset;right:unset;right:-9px}:host(.in-item){margin-left:10px;margin-right:11px;margin-top:8px;margin-bottom:8px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:10px;margin-inline-start:10px;-webkit-margin-end:11px;margin-inline-end:11px}}:host(.in-item[slot=start]){margin-left:3px;margin-right:21px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:3px;margin-inline-start:3px;-webkit-margin-end:21px;margin-inline-end:21px}}\";\nconst radioMdCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}:host{--color:var(--ion-color-step-400, #999999);--color-checked:var(--ion-color-primary, #3880ff);--border-width:2px;--border-style:solid;--border-radius:50%;width:20px;height:20px}:host(.ion-color) .radio-inner{background:var(--ion-color-base)}:host(.ion-color.radio-checked) .radio-icon{border-color:var(--ion-color-base)}.radio-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;border-radius:var(--border-radius);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--color)}.radio-inner{border-radius:var(--inner-border-radius);width:calc(50% + var(--border-width));height:calc(50% + var(--border-width));-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0);-webkit-transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);background:var(--color-checked)}:host(.radio-checked) .radio-icon{border-color:var(--color-checked)}:host(.radio-checked) .radio-inner{-webkit-transform:scale3d(1, 1, 1);transform:scale3d(1, 1, 1)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);left:-12px;top:-12px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #4c8dff);content:\\\"\\\";opacity:0.2}:host-context([dir=rtl]):host(.ion-focused) .radio-icon::after,:host-context([dir=rtl]).ion-focused .radio-icon::after{left:unset;right:unset;right:-12px}:host(.in-item){margin-left:0;margin-right:0;margin-top:9px;margin-bottom:9px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:11px;margin-bottom:10px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\nconst Radio = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.inputId = `ion-rb-${radioButtonIds++}`;\n    this.radioGroup = null;\n    /**\n     * If `true`, the radio is selected.\n     */\n\n    this.checked = false;\n    /**\n     * The tabindex of the radio button.\n     * @internal\n     */\n\n    this.buttonTabindex = -1;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot interact with the radio.\n     */\n\n    this.disabled = false;\n\n    this.updateState = () => {\n      if (this.radioGroup) {\n        this.checked = this.radioGroup.value === this.value;\n      }\n    };\n\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n  }\n  /** @internal */\n\n\n  async setFocus() {\n    if (this.buttonEl) {\n      this.buttonEl.focus();\n    }\n  }\n  /** @internal */\n\n\n  async setButtonTabindex(value) {\n    this.buttonTabindex = value;\n  }\n\n  connectedCallback() {\n    if (this.value === undefined) {\n      this.value = this.inputId;\n    }\n\n    const radioGroup = this.radioGroup = this.el.closest('ion-radio-group');\n\n    if (radioGroup) {\n      this.updateState();\n      addEventListener(radioGroup, 'ionChange', this.updateState);\n    }\n  }\n\n  disconnectedCallback() {\n    const radioGroup = this.radioGroup;\n\n    if (radioGroup) {\n      removeEventListener(radioGroup, 'ionChange', this.updateState);\n      this.radioGroup = null;\n    }\n  }\n\n  componentWillLoad() {\n    this.emitStyle();\n  }\n\n  emitStyle() {\n    this.ionStyle.emit({\n      'radio-checked': this.checked,\n      'interactive-disabled': this.disabled\n    });\n  }\n\n  render() {\n    const {\n      inputId,\n      disabled,\n      checked,\n      color,\n      el,\n      buttonTabindex\n    } = this;\n    const mode = getIonMode(this);\n    const labelId = inputId + '-lbl';\n    const label = findItemLabel(el);\n\n    if (label) {\n      label.id = labelId;\n    }\n\n    return h(Host, {\n      role: \"radio\",\n      \"aria-disabled\": disabled ? 'true' : null,\n      \"aria-checked\": `${checked}`,\n      \"aria-labelledby\": labelId,\n      class: createColorClasses(color, {\n        [mode]: true,\n        'in-item': hostContext('ion-item', el),\n        'interactive': true,\n        'radio-checked': checked,\n        'radio-disabled': disabled\n      })\n    }, h(\"div\", {\n      class: \"radio-icon\",\n      part: \"container\"\n    }, h(\"div\", {\n      class: \"radio-inner\",\n      part: \"mark\"\n    })), h(\"button\", {\n      ref: btnEl => this.buttonEl = btnEl,\n      type: \"button\",\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      disabled: disabled,\n      tabindex: buttonTabindex\n    }));\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"color\": [\"emitStyle\"],\n      \"checked\": [\"emitStyle\"],\n      \"disabled\": [\"emitStyle\"]\n    };\n  }\n\n};\nlet radioButtonIds = 0;\nRadio.style = {\n  ios: radioIosCss,\n  md: radioMdCss\n};\nconst RadioGroup = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.inputId = `ion-rg-${radioGroupIds++}`;\n    this.labelId = `${this.inputId}-lbl`;\n    /**\n     * If `true`, the radios can be deselected.\n     */\n\n    this.allowEmptySelection = false;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n\n    this.name = this.inputId;\n\n    this.setRadioTabindex = value => {\n      const radios = this.getRadios(); // Get the first radio that is not disabled and the checked one\n\n      const first = radios.find(radio => !radio.disabled);\n      const checked = radios.find(radio => radio.value === value && !radio.disabled);\n\n      if (!first && !checked) {\n        return;\n      } // If an enabled checked radio exists, set it to be the focusable radio\n      // otherwise we default to focus the first radio\n\n\n      const focusable = checked || first;\n\n      for (const radio of radios) {\n        const tabindex = radio === focusable ? 0 : -1;\n        radio.setButtonTabindex(tabindex);\n      }\n    };\n\n    this.onClick = ev => {\n      const selectedRadio = ev.target && ev.target.closest('ion-radio');\n\n      if (selectedRadio) {\n        const currentValue = this.value;\n        const newValue = selectedRadio.value;\n\n        if (newValue !== currentValue) {\n          this.value = newValue;\n        } else if (this.allowEmptySelection) {\n          this.value = undefined;\n        }\n      }\n    };\n  }\n\n  valueChanged(value) {\n    this.setRadioTabindex(value);\n    this.ionChange.emit({\n      value\n    });\n  }\n\n  componentDidLoad() {\n    this.setRadioTabindex(this.value);\n  }\n\n  async connectedCallback() {\n    // Get the list header if it exists and set the id\n    // this is used to set aria-labelledby\n    const el = this.el;\n    const header = el.querySelector('ion-list-header') || el.querySelector('ion-item-divider');\n\n    if (header) {\n      const label = header.querySelector('ion-label');\n\n      if (label) {\n        this.labelId = label.id = this.name + '-lbl';\n      }\n    }\n  }\n\n  getRadios() {\n    return Array.from(this.el.querySelectorAll('ion-radio'));\n  }\n\n  onKeydown(ev) {\n    const inSelectPopover = !!this.el.closest('ion-select-popover');\n\n    if (ev.target && !this.el.contains(ev.target)) {\n      return;\n    } // Get all radios inside of the radio group and then\n    // filter out disabled radios since we need to skip those\n\n\n    const radios = Array.from(this.el.querySelectorAll('ion-radio')).filter(radio => !radio.disabled); // Only move the radio if the current focus is in the radio group\n\n    if (ev.target && radios.includes(ev.target)) {\n      const index = radios.findIndex(radio => radio === ev.target);\n      let next; // If hitting arrow down or arrow right, move to the next radio\n      // If we're on the last radio, move to the first radio\n\n      if (['ArrowDown', 'ArrowRight'].includes(ev.key)) {\n        next = index === radios.length - 1 ? radios[0] : radios[index + 1];\n      } // If hitting arrow up or arrow left, move to the previous radio\n      // If we're on the first radio, move to the last radio\n\n\n      if (['ArrowUp', 'ArrowLeft'].includes(ev.key)) {\n        next = index === 0 ? radios[radios.length - 1] : radios[index - 1];\n      }\n\n      if (next && radios.includes(next)) {\n        next.setFocus();\n\n        if (!inSelectPopover) {\n          this.value = next.value;\n        }\n      }\n    }\n  }\n\n  render() {\n    return h(Host, {\n      role: \"radiogroup\",\n      \"aria-labelledby\": this.labelId,\n      onClick: this.onClick,\n      class: getIonMode(this)\n    });\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"value\": [\"valueChanged\"]\n    };\n  }\n\n};\nlet radioGroupIds = 0;\nexport { Radio as ion_radio, RadioGroup as ion_radio_group };","map":{"version":3,"sources":["/media/theticarcher38/Volume/Code/LawsForPaws/LawsForPawsApp/node_modules/@ionic/core/dist/esm/ion-radio_2.entry.js"],"names":["r","registerInstance","e","createEvent","h","H","Host","i","getElement","b","getIonMode","a","addEventListener","removeEventListener","f","findItemLabel","c","createColorClasses","hostContext","radioIosCss","radioMdCss","Radio","constructor","hostRef","ionStyle","ionFocus","ionBlur","inputId","radioButtonIds","radioGroup","checked","buttonTabindex","name","disabled","updateState","value","onFocus","emit","onBlur","setFocus","buttonEl","focus","setButtonTabindex","connectedCallback","undefined","el","closest","disconnectedCallback","componentWillLoad","emitStyle","render","color","mode","labelId","label","id","role","class","part","ref","btnEl","type","tabindex","watchers","style","ios","md","RadioGroup","ionChange","radioGroupIds","allowEmptySelection","setRadioTabindex","radios","getRadios","first","find","radio","focusable","onClick","ev","selectedRadio","target","currentValue","newValue","valueChanged","componentDidLoad","header","querySelector","Array","from","querySelectorAll","onKeydown","inSelectPopover","contains","filter","includes","index","findIndex","next","key","length","ion_radio","ion_radio_group"],"mappings":"AAAA,SAASA,CAAC,IAAIC,gBAAd,EAAgCC,CAAC,IAAIC,WAArC,EAAkDC,CAAlD,EAAqDC,CAAC,IAAIC,IAA1D,EAAgEC,CAAC,IAAIC,UAArE,QAAuF,qBAAvF;AACA,SAASC,CAAC,IAAIC,UAAd,QAAgC,4BAAhC;AACA,SAASC,CAAC,IAAIC,gBAAd,EAAgCH,CAAC,IAAII,mBAArC,EAA0DC,CAAC,IAAIC,aAA/D,QAAoF,uBAApF;AACA,SAASC,CAAC,IAAIC,kBAAd,EAAkCb,CAAC,IAAIc,WAAvC,QAA0D,qBAA1D;AAEA,MAAMC,WAAW,GAAG,ukFAApB;AAEA,MAAMC,UAAU,GAAG,y5FAAnB;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClBC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnBtB,IAAAA,gBAAgB,CAAC,IAAD,EAAOsB,OAAP,CAAhB;AACA,SAAKC,QAAL,GAAgBrB,WAAW,CAAC,IAAD,EAAO,UAAP,EAAmB,CAAnB,CAA3B;AACA,SAAKsB,QAAL,GAAgBtB,WAAW,CAAC,IAAD,EAAO,UAAP,EAAmB,CAAnB,CAA3B;AACA,SAAKuB,OAAL,GAAevB,WAAW,CAAC,IAAD,EAAO,SAAP,EAAkB,CAAlB,CAA1B;AACA,SAAKwB,OAAL,GAAgB,UAASC,cAAc,EAAG,EAA1C;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACA;AACJ;AACA;;AACI,SAAKC,OAAL,GAAe,KAAf;AACA;AACJ;AACA;AACA;;AACI,SAAKC,cAAL,GAAsB,CAAC,CAAvB;AACA;AACJ;AACA;;AACI,SAAKC,IAAL,GAAY,KAAKL,OAAjB;AACA;AACJ;AACA;;AACI,SAAKM,QAAL,GAAgB,KAAhB;;AACA,SAAKC,WAAL,GAAmB,MAAM;AACvB,UAAI,KAAKL,UAAT,EAAqB;AACnB,aAAKC,OAAL,GAAe,KAAKD,UAAL,CAAgBM,KAAhB,KAA0B,KAAKA,KAA9C;AACD;AACF,KAJD;;AAKA,SAAKC,OAAL,GAAe,MAAM;AACnB,WAAKX,QAAL,CAAcY,IAAd;AACD,KAFD;;AAGA,SAAKC,MAAL,GAAc,MAAM;AAClB,WAAKZ,OAAL,CAAaW,IAAb;AACD,KAFD;AAGD;AACD;;;AACA,QAAME,QAAN,GAAiB;AACf,QAAI,KAAKC,QAAT,EAAmB;AACjB,WAAKA,QAAL,CAAcC,KAAd;AACD;AACF;AACD;;;AACA,QAAMC,iBAAN,CAAwBP,KAAxB,EAA+B;AAC7B,SAAKJ,cAAL,GAAsBI,KAAtB;AACD;;AACDQ,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKR,KAAL,KAAeS,SAAnB,EAA8B;AAC5B,WAAKT,KAAL,GAAa,KAAKR,OAAlB;AACD;;AACD,UAAME,UAAU,GAAG,KAAKA,UAAL,GAAkB,KAAKgB,EAAL,CAAQC,OAAR,CAAgB,iBAAhB,CAArC;;AACA,QAAIjB,UAAJ,EAAgB;AACd,WAAKK,WAAL;AACAtB,MAAAA,gBAAgB,CAACiB,UAAD,EAAa,WAAb,EAA0B,KAAKK,WAA/B,CAAhB;AACD;AACF;;AACDa,EAAAA,oBAAoB,GAAG;AACrB,UAAMlB,UAAU,GAAG,KAAKA,UAAxB;;AACA,QAAIA,UAAJ,EAAgB;AACdhB,MAAAA,mBAAmB,CAACgB,UAAD,EAAa,WAAb,EAA0B,KAAKK,WAA/B,CAAnB;AACA,WAAKL,UAAL,GAAkB,IAAlB;AACD;AACF;;AACDmB,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,SAAL;AACD;;AACDA,EAAAA,SAAS,GAAG;AACV,SAAKzB,QAAL,CAAca,IAAd,CAAmB;AACjB,uBAAiB,KAAKP,OADL;AAEjB,8BAAwB,KAAKG;AAFZ,KAAnB;AAID;;AACDiB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEvB,MAAAA,OAAF;AAAWM,MAAAA,QAAX;AAAqBH,MAAAA,OAArB;AAA8BqB,MAAAA,KAA9B;AAAqCN,MAAAA,EAArC;AAAyCd,MAAAA;AAAzC,QAA4D,IAAlE;AACA,UAAMqB,IAAI,GAAG1C,UAAU,CAAC,IAAD,CAAvB;AACA,UAAM2C,OAAO,GAAG1B,OAAO,GAAG,MAA1B;AACA,UAAM2B,KAAK,GAAGvC,aAAa,CAAC8B,EAAD,CAA3B;;AACA,QAAIS,KAAJ,EAAW;AACTA,MAAAA,KAAK,CAACC,EAAN,GAAWF,OAAX;AACD;;AACD,WAAQjD,CAAC,CAACE,IAAD,EAAO;AAAEkD,MAAAA,IAAI,EAAE,OAAR;AAAiB,uBAAiBvB,QAAQ,GAAG,MAAH,GAAY,IAAtD;AAA4D,sBAAiB,GAAEH,OAAQ,EAAvF;AAA0F,yBAAmBuB,OAA7G;AAAsHI,MAAAA,KAAK,EAAExC,kBAAkB,CAACkC,KAAD,EAAQ;AACnK,SAACC,IAAD,GAAQ,IAD2J;AAEnK,mBAAWlC,WAAW,CAAC,UAAD,EAAa2B,EAAb,CAF6I;AAGnK,uBAAe,IAHoJ;AAInK,yBAAiBf,OAJkJ;AAKnK,0BAAkBG;AALiJ,OAAR;AAA/I,KAAP,EAMD7B,CAAC,CAAC,KAAD,EAAQ;AAAEqD,MAAAA,KAAK,EAAE,YAAT;AAAuBC,MAAAA,IAAI,EAAE;AAA7B,KAAR,EAAoDtD,CAAC,CAAC,KAAD,EAAQ;AAAEqD,MAAAA,KAAK,EAAE,aAAT;AAAwBC,MAAAA,IAAI,EAAE;AAA9B,KAAR,CAArD,CANA,EAMuGtD,CAAC,CAAC,QAAD,EAAW;AAAEuD,MAAAA,GAAG,EAAEC,KAAK,IAAI,KAAKpB,QAAL,GAAgBoB,KAAhC;AAAuCC,MAAAA,IAAI,EAAE,QAA7C;AAAuDzB,MAAAA,OAAO,EAAE,KAAKA,OAArE;AAA8EE,MAAAA,MAAM,EAAE,KAAKA,MAA3F;AAAmGL,MAAAA,QAAQ,EAAEA,QAA7G;AAAuH6B,MAAAA,QAAQ,EAAE/B;AAAjI,KAAX,CANxG,CAAT;AAOD;;AACD,MAAIc,EAAJ,GAAS;AAAE,WAAOrC,UAAU,CAAC,IAAD,CAAjB;AAA0B;;AACrC,aAAWuD,QAAX,GAAsB;AAAE,WAAO;AAC7B,eAAS,CAAC,WAAD,CADoB;AAE7B,iBAAW,CAAC,WAAD,CAFkB;AAG7B,kBAAY,CAAC,WAAD;AAHiB,KAAP;AAIpB;;AA9Fc,CAApB;AAgGA,IAAInC,cAAc,GAAG,CAArB;AACAP,KAAK,CAAC2C,KAAN,GAAc;AACZC,EAAAA,GAAG,EAAE9C,WADO;AAEZ+C,EAAAA,EAAE,EAAE9C;AAFQ,CAAd;AAKA,MAAM+C,UAAU,GAAG,MAAM;AACvB7C,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnBtB,IAAAA,gBAAgB,CAAC,IAAD,EAAOsB,OAAP,CAAhB;AACA,SAAK6C,SAAL,GAAiBjE,WAAW,CAAC,IAAD,EAAO,WAAP,EAAoB,CAApB,CAA5B;AACA,SAAKwB,OAAL,GAAgB,UAAS0C,aAAa,EAAG,EAAzC;AACA,SAAKhB,OAAL,GAAgB,GAAE,KAAK1B,OAAQ,MAA/B;AACA;AACJ;AACA;;AACI,SAAK2C,mBAAL,GAA2B,KAA3B;AACA;AACJ;AACA;;AACI,SAAKtC,IAAL,GAAY,KAAKL,OAAjB;;AACA,SAAK4C,gBAAL,GAAyBpC,KAAD,IAAW;AACjC,YAAMqC,MAAM,GAAG,KAAKC,SAAL,EAAf,CADiC,CAEjC;;AACA,YAAMC,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAYC,KAAK,IAAI,CAACA,KAAK,CAAC3C,QAA5B,CAAd;AACA,YAAMH,OAAO,GAAG0C,MAAM,CAACG,IAAP,CAAYC,KAAK,IAAKA,KAAK,CAACzC,KAAN,KAAgBA,KAAhB,IAAyB,CAACyC,KAAK,CAAC3C,QAAtD,CAAhB;;AACA,UAAI,CAACyC,KAAD,IAAU,CAAC5C,OAAf,EAAwB;AACtB;AACD,OAPgC,CAQjC;AACA;;;AACA,YAAM+C,SAAS,GAAG/C,OAAO,IAAI4C,KAA7B;;AACA,WAAK,MAAME,KAAX,IAAoBJ,MAApB,EAA4B;AAC1B,cAAMV,QAAQ,GAAGc,KAAK,KAAKC,SAAV,GAAsB,CAAtB,GAA0B,CAAC,CAA5C;AACAD,QAAAA,KAAK,CAAClC,iBAAN,CAAwBoB,QAAxB;AACD;AACF,KAfD;;AAgBA,SAAKgB,OAAL,GAAgBC,EAAD,IAAQ;AACrB,YAAMC,aAAa,GAAGD,EAAE,CAACE,MAAH,IAAaF,EAAE,CAACE,MAAH,CAAUnC,OAAV,CAAkB,WAAlB,CAAnC;;AACA,UAAIkC,aAAJ,EAAmB;AACjB,cAAME,YAAY,GAAG,KAAK/C,KAA1B;AACA,cAAMgD,QAAQ,GAAGH,aAAa,CAAC7C,KAA/B;;AACA,YAAIgD,QAAQ,KAAKD,YAAjB,EAA+B;AAC7B,eAAK/C,KAAL,GAAagD,QAAb;AACD,SAFD,MAGK,IAAI,KAAKb,mBAAT,EAA8B;AACjC,eAAKnC,KAAL,GAAaS,SAAb;AACD;AACF;AACF,KAZD;AAaD;;AACDwC,EAAAA,YAAY,CAACjD,KAAD,EAAQ;AAClB,SAAKoC,gBAAL,CAAsBpC,KAAtB;AACA,SAAKiC,SAAL,CAAe/B,IAAf,CAAoB;AAAEF,MAAAA;AAAF,KAApB;AACD;;AACDkD,EAAAA,gBAAgB,GAAG;AACjB,SAAKd,gBAAL,CAAsB,KAAKpC,KAA3B;AACD;;AACD,QAAMQ,iBAAN,GAA0B;AACxB;AACA;AACA,UAAME,EAAE,GAAG,KAAKA,EAAhB;AACA,UAAMyC,MAAM,GAAGzC,EAAE,CAAC0C,aAAH,CAAiB,iBAAjB,KAAuC1C,EAAE,CAAC0C,aAAH,CAAiB,kBAAjB,CAAtD;;AACA,QAAID,MAAJ,EAAY;AACV,YAAMhC,KAAK,GAAGgC,MAAM,CAACC,aAAP,CAAqB,WAArB,CAAd;;AACA,UAAIjC,KAAJ,EAAW;AACT,aAAKD,OAAL,GAAeC,KAAK,CAACC,EAAN,GAAW,KAAKvB,IAAL,GAAY,MAAtC;AACD;AACF;AACF;;AACDyC,EAAAA,SAAS,GAAG;AACV,WAAOe,KAAK,CAACC,IAAN,CAAW,KAAK5C,EAAL,CAAQ6C,gBAAR,CAAyB,WAAzB,CAAX,CAAP;AACD;;AACDC,EAAAA,SAAS,CAACZ,EAAD,EAAK;AACZ,UAAMa,eAAe,GAAG,CAAC,CAAC,KAAK/C,EAAL,CAAQC,OAAR,CAAgB,oBAAhB,CAA1B;;AACA,QAAIiC,EAAE,CAACE,MAAH,IAAa,CAAC,KAAKpC,EAAL,CAAQgD,QAAR,CAAiBd,EAAE,CAACE,MAApB,CAAlB,EAA+C;AAC7C;AACD,KAJW,CAKZ;AACA;;;AACA,UAAMT,MAAM,GAAGgB,KAAK,CAACC,IAAN,CAAW,KAAK5C,EAAL,CAAQ6C,gBAAR,CAAyB,WAAzB,CAAX,EAAkDI,MAAlD,CAAyDlB,KAAK,IAAI,CAACA,KAAK,CAAC3C,QAAzE,CAAf,CAPY,CAQZ;;AACA,QAAI8C,EAAE,CAACE,MAAH,IAAaT,MAAM,CAACuB,QAAP,CAAgBhB,EAAE,CAACE,MAAnB,CAAjB,EAA6C;AAC3C,YAAMe,KAAK,GAAGxB,MAAM,CAACyB,SAAP,CAAiBrB,KAAK,IAAIA,KAAK,KAAKG,EAAE,CAACE,MAAvC,CAAd;AACA,UAAIiB,IAAJ,CAF2C,CAG3C;AACA;;AACA,UAAI,CAAC,WAAD,EAAc,YAAd,EAA4BH,QAA5B,CAAqChB,EAAE,CAACoB,GAAxC,CAAJ,EAAkD;AAChDD,QAAAA,IAAI,GAAIF,KAAK,KAAKxB,MAAM,CAAC4B,MAAP,GAAgB,CAA3B,GACH5B,MAAM,CAAC,CAAD,CADH,GAEHA,MAAM,CAACwB,KAAK,GAAG,CAAT,CAFV;AAGD,OAT0C,CAU3C;AACA;;;AACA,UAAI,CAAC,SAAD,EAAY,WAAZ,EAAyBD,QAAzB,CAAkChB,EAAE,CAACoB,GAArC,CAAJ,EAA+C;AAC7CD,QAAAA,IAAI,GAAIF,KAAK,KAAK,CAAX,GACHxB,MAAM,CAACA,MAAM,CAAC4B,MAAP,GAAgB,CAAjB,CADH,GAEH5B,MAAM,CAACwB,KAAK,GAAG,CAAT,CAFV;AAGD;;AACD,UAAIE,IAAI,IAAI1B,MAAM,CAACuB,QAAP,CAAgBG,IAAhB,CAAZ,EAAmC;AACjCA,QAAAA,IAAI,CAAC3D,QAAL;;AACA,YAAI,CAACqD,eAAL,EAAsB;AACpB,eAAKzD,KAAL,GAAa+D,IAAI,CAAC/D,KAAlB;AACD;AACF;AACF;AACF;;AACDe,EAAAA,MAAM,GAAG;AACP,WAAQ9C,CAAC,CAACE,IAAD,EAAO;AAAEkD,MAAAA,IAAI,EAAE,YAAR;AAAsB,yBAAmB,KAAKH,OAA9C;AAAuDyB,MAAAA,OAAO,EAAE,KAAKA,OAArE;AAA8ErB,MAAAA,KAAK,EAAE/C,UAAU,CAAC,IAAD;AAA/F,KAAP,CAAT;AACD;;AACD,MAAImC,EAAJ,GAAS;AAAE,WAAOrC,UAAU,CAAC,IAAD,CAAjB;AAA0B;;AACrC,aAAWuD,QAAX,GAAsB;AAAE,WAAO;AAC7B,eAAS,CAAC,cAAD;AADoB,KAAP;AAEpB;;AA1GmB,CAAzB;AA4GA,IAAIM,aAAa,GAAG,CAApB;AAEA,SAAShD,KAAK,IAAIgF,SAAlB,EAA6BlC,UAAU,IAAImC,eAA3C","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-e806d1f6.js';\nimport { b as getIonMode } from './ionic-global-9d5c8ee3.js';\nimport { a as addEventListener, b as removeEventListener, f as findItemLabel } from './helpers-002e4980.js';\nimport { c as createColorClasses, h as hostContext } from './theme-ff3fc52f.js';\n\nconst radioIosCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}:host{--color-checked:var(--ion-color-primary, #3880ff);width:15px;height:24px}:host(.ion-color.radio-checked) .radio-inner{border-color:var(--ion-color-base)}.item-radio.item-ios ion-label{margin-left:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.item-radio.item-ios ion-label{margin-left:unset;-webkit-margin-start:0;margin-inline-start:0}}.radio-inner{width:33%;height:50%}:host(.radio-checked) .radio-inner{-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:2px;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--color-checked)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);left:-9px;top:-8px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #4c8dff);content:\\\"\\\";opacity:0.2}:host-context([dir=rtl]):host(.ion-focused) .radio-icon::after,:host-context([dir=rtl]).ion-focused .radio-icon::after{left:unset;right:unset;right:-9px}:host(.in-item){margin-left:10px;margin-right:11px;margin-top:8px;margin-bottom:8px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:10px;margin-inline-start:10px;-webkit-margin-end:11px;margin-inline-end:11px}}:host(.in-item[slot=start]){margin-left:3px;margin-right:21px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:3px;margin-inline-start:3px;-webkit-margin-end:21px;margin-inline-end:21px}}\";\n\nconst radioMdCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}:host{--color:var(--ion-color-step-400, #999999);--color-checked:var(--ion-color-primary, #3880ff);--border-width:2px;--border-style:solid;--border-radius:50%;width:20px;height:20px}:host(.ion-color) .radio-inner{background:var(--ion-color-base)}:host(.ion-color.radio-checked) .radio-icon{border-color:var(--ion-color-base)}.radio-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;border-radius:var(--border-radius);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--color)}.radio-inner{border-radius:var(--inner-border-radius);width:calc(50% + var(--border-width));height:calc(50% + var(--border-width));-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0);-webkit-transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);background:var(--color-checked)}:host(.radio-checked) .radio-icon{border-color:var(--color-checked)}:host(.radio-checked) .radio-inner{-webkit-transform:scale3d(1, 1, 1);transform:scale3d(1, 1, 1)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);left:-12px;top:-12px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #4c8dff);content:\\\"\\\";opacity:0.2}:host-context([dir=rtl]):host(.ion-focused) .radio-icon::after,:host-context([dir=rtl]).ion-focused .radio-icon::after{left:unset;right:unset;right:-12px}:host(.in-item){margin-left:0;margin-right:0;margin-top:9px;margin-bottom:9px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:11px;margin-bottom:10px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\n\nconst Radio = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.inputId = `ion-rb-${radioButtonIds++}`;\n    this.radioGroup = null;\n    /**\n     * If `true`, the radio is selected.\n     */\n    this.checked = false;\n    /**\n     * The tabindex of the radio button.\n     * @internal\n     */\n    this.buttonTabindex = -1;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the user cannot interact with the radio.\n     */\n    this.disabled = false;\n    this.updateState = () => {\n      if (this.radioGroup) {\n        this.checked = this.radioGroup.value === this.value;\n      }\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n  }\n  /** @internal */\n  async setFocus() {\n    if (this.buttonEl) {\n      this.buttonEl.focus();\n    }\n  }\n  /** @internal */\n  async setButtonTabindex(value) {\n    this.buttonTabindex = value;\n  }\n  connectedCallback() {\n    if (this.value === undefined) {\n      this.value = this.inputId;\n    }\n    const radioGroup = this.radioGroup = this.el.closest('ion-radio-group');\n    if (radioGroup) {\n      this.updateState();\n      addEventListener(radioGroup, 'ionChange', this.updateState);\n    }\n  }\n  disconnectedCallback() {\n    const radioGroup = this.radioGroup;\n    if (radioGroup) {\n      removeEventListener(radioGroup, 'ionChange', this.updateState);\n      this.radioGroup = null;\n    }\n  }\n  componentWillLoad() {\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      'radio-checked': this.checked,\n      'interactive-disabled': this.disabled,\n    });\n  }\n  render() {\n    const { inputId, disabled, checked, color, el, buttonTabindex } = this;\n    const mode = getIonMode(this);\n    const labelId = inputId + '-lbl';\n    const label = findItemLabel(el);\n    if (label) {\n      label.id = labelId;\n    }\n    return (h(Host, { role: \"radio\", \"aria-disabled\": disabled ? 'true' : null, \"aria-checked\": `${checked}`, \"aria-labelledby\": labelId, class: createColorClasses(color, {\n        [mode]: true,\n        'in-item': hostContext('ion-item', el),\n        'interactive': true,\n        'radio-checked': checked,\n        'radio-disabled': disabled,\n      }) }, h(\"div\", { class: \"radio-icon\", part: \"container\" }, h(\"div\", { class: \"radio-inner\", part: \"mark\" })), h(\"button\", { ref: btnEl => this.buttonEl = btnEl, type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: disabled, tabindex: buttonTabindex })));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"color\": [\"emitStyle\"],\n    \"checked\": [\"emitStyle\"],\n    \"disabled\": [\"emitStyle\"]\n  }; }\n};\nlet radioButtonIds = 0;\nRadio.style = {\n  ios: radioIosCss,\n  md: radioMdCss\n};\n\nconst RadioGroup = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.inputId = `ion-rg-${radioGroupIds++}`;\n    this.labelId = `${this.inputId}-lbl`;\n    /**\n     * If `true`, the radios can be deselected.\n     */\n    this.allowEmptySelection = false;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    this.setRadioTabindex = (value) => {\n      const radios = this.getRadios();\n      // Get the first radio that is not disabled and the checked one\n      const first = radios.find(radio => !radio.disabled);\n      const checked = radios.find(radio => (radio.value === value && !radio.disabled));\n      if (!first && !checked) {\n        return;\n      }\n      // If an enabled checked radio exists, set it to be the focusable radio\n      // otherwise we default to focus the first radio\n      const focusable = checked || first;\n      for (const radio of radios) {\n        const tabindex = radio === focusable ? 0 : -1;\n        radio.setButtonTabindex(tabindex);\n      }\n    };\n    this.onClick = (ev) => {\n      const selectedRadio = ev.target && ev.target.closest('ion-radio');\n      if (selectedRadio) {\n        const currentValue = this.value;\n        const newValue = selectedRadio.value;\n        if (newValue !== currentValue) {\n          this.value = newValue;\n        }\n        else if (this.allowEmptySelection) {\n          this.value = undefined;\n        }\n      }\n    };\n  }\n  valueChanged(value) {\n    this.setRadioTabindex(value);\n    this.ionChange.emit({ value });\n  }\n  componentDidLoad() {\n    this.setRadioTabindex(this.value);\n  }\n  async connectedCallback() {\n    // Get the list header if it exists and set the id\n    // this is used to set aria-labelledby\n    const el = this.el;\n    const header = el.querySelector('ion-list-header') || el.querySelector('ion-item-divider');\n    if (header) {\n      const label = header.querySelector('ion-label');\n      if (label) {\n        this.labelId = label.id = this.name + '-lbl';\n      }\n    }\n  }\n  getRadios() {\n    return Array.from(this.el.querySelectorAll('ion-radio'));\n  }\n  onKeydown(ev) {\n    const inSelectPopover = !!this.el.closest('ion-select-popover');\n    if (ev.target && !this.el.contains(ev.target)) {\n      return;\n    }\n    // Get all radios inside of the radio group and then\n    // filter out disabled radios since we need to skip those\n    const radios = Array.from(this.el.querySelectorAll('ion-radio')).filter(radio => !radio.disabled);\n    // Only move the radio if the current focus is in the radio group\n    if (ev.target && radios.includes(ev.target)) {\n      const index = radios.findIndex(radio => radio === ev.target);\n      let next;\n      // If hitting arrow down or arrow right, move to the next radio\n      // If we're on the last radio, move to the first radio\n      if (['ArrowDown', 'ArrowRight'].includes(ev.key)) {\n        next = (index === radios.length - 1)\n          ? radios[0]\n          : radios[index + 1];\n      }\n      // If hitting arrow up or arrow left, move to the previous radio\n      // If we're on the first radio, move to the last radio\n      if (['ArrowUp', 'ArrowLeft'].includes(ev.key)) {\n        next = (index === 0)\n          ? radios[radios.length - 1]\n          : radios[index - 1];\n      }\n      if (next && radios.includes(next)) {\n        next.setFocus();\n        if (!inSelectPopover) {\n          this.value = next.value;\n        }\n      }\n    }\n  }\n  render() {\n    return (h(Host, { role: \"radiogroup\", \"aria-labelledby\": this.labelId, onClick: this.onClick, class: getIonMode(this) }));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"value\": [\"valueChanged\"]\n  }; }\n};\nlet radioGroupIds = 0;\n\nexport { Radio as ion_radio, RadioGroup as ion_radio_group };\n"]},"metadata":{},"sourceType":"module"}