{"ast":null,"code":"import { r as raf } from './helpers-002e4980.js';\nlet animationPrefix;\n/**\n * Web Animations requires hyphenated CSS properties\n * to be written in camelCase when animating\n */\n\nconst processKeyframes = keyframes => {\n  keyframes.forEach(keyframe => {\n    for (const key in keyframe) {\n      if (keyframe.hasOwnProperty(key)) {\n        const value = keyframe[key];\n\n        if (key === 'easing') {\n          const newKey = 'animation-timing-function';\n          keyframe[newKey] = value;\n          delete keyframe[key];\n        } else {\n          const newKey = convertCamelCaseToHypen(key);\n\n          if (newKey !== key) {\n            keyframe[newKey] = value;\n            delete keyframe[key];\n          }\n        }\n      }\n    }\n  });\n  return keyframes;\n};\n\nconst convertCamelCaseToHypen = str => {\n  return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n};\n\nconst getAnimationPrefix = el => {\n  if (animationPrefix === undefined) {\n    const supportsUnprefixed = el.style.animationName !== undefined;\n    const supportsWebkitPrefix = el.style.webkitAnimationName !== undefined;\n    animationPrefix = !supportsUnprefixed && supportsWebkitPrefix ? '-webkit-' : '';\n  }\n\n  return animationPrefix;\n};\n\nconst setStyleProperty = (element, propertyName, value) => {\n  const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\n  element.style.setProperty(prefix + propertyName, value);\n};\n\nconst removeStyleProperty = (element, propertyName) => {\n  const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\n  element.style.removeProperty(prefix + propertyName);\n};\n\nconst animationEnd = (el, callback) => {\n  let unRegTrans;\n  const opts = {\n    passive: true\n  };\n\n  const unregister = () => {\n    if (unRegTrans) {\n      unRegTrans();\n    }\n  };\n\n  const onTransitionEnd = ev => {\n    if (el === ev.target) {\n      unregister();\n      callback(ev);\n    }\n  };\n\n  if (el) {\n    el.addEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n    el.addEventListener('animationend', onTransitionEnd, opts);\n\n    unRegTrans = () => {\n      el.removeEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n      el.removeEventListener('animationend', onTransitionEnd, opts);\n    };\n  }\n\n  return unregister;\n};\n\nconst generateKeyframeRules = (keyframes = []) => {\n  return keyframes.map(keyframe => {\n    const offset = keyframe.offset;\n    const frameString = [];\n\n    for (const property in keyframe) {\n      if (keyframe.hasOwnProperty(property) && property !== 'offset') {\n        frameString.push(`${property}: ${keyframe[property]};`);\n      }\n    }\n\n    return `${offset * 100}% { ${frameString.join(' ')} }`;\n  }).join(' ');\n};\n\nconst keyframeIds = [];\n\nconst generateKeyframeName = keyframeRules => {\n  let index = keyframeIds.indexOf(keyframeRules);\n\n  if (index < 0) {\n    index = keyframeIds.push(keyframeRules) - 1;\n  }\n\n  return `ion-animation-${index}`;\n};\n\nconst getStyleContainer = element => {\n  const rootNode = element.getRootNode();\n  return rootNode.head || rootNode;\n};\n\nconst createKeyframeStylesheet = (keyframeName, keyframeRules, element) => {\n  const styleContainer = getStyleContainer(element);\n  const keyframePrefix = getAnimationPrefix(element);\n  const existingStylesheet = styleContainer.querySelector('#' + keyframeName);\n\n  if (existingStylesheet) {\n    return existingStylesheet;\n  }\n\n  const stylesheet = (element.ownerDocument || document).createElement('style');\n  stylesheet.id = keyframeName;\n  stylesheet.textContent = `@${keyframePrefix}keyframes ${keyframeName} { ${keyframeRules} } @${keyframePrefix}keyframes ${keyframeName}-alt { ${keyframeRules} }`;\n  styleContainer.appendChild(stylesheet);\n  return stylesheet;\n};\n\nconst addClassToArray = (classes = [], className) => {\n  if (className !== undefined) {\n    const classNameToAppend = Array.isArray(className) ? className : [className];\n    return [...classes, ...classNameToAppend];\n  }\n\n  return classes;\n};\n\nconst createAnimation = animationId => {\n  let _delay;\n\n  let _duration;\n\n  let _easing;\n\n  let _iterations;\n\n  let _fill;\n\n  let _direction;\n\n  let _keyframes = [];\n  let beforeAddClasses = [];\n  let beforeRemoveClasses = [];\n  let initialized = false;\n  let parentAnimation;\n  let beforeStylesValue = {};\n  let afterAddClasses = [];\n  let afterRemoveClasses = [];\n  let afterStylesValue = {};\n  let numAnimationsRunning = 0;\n  let shouldForceLinearEasing = false;\n  let shouldForceSyncPlayback = false;\n  let cssAnimationsTimerFallback;\n  let forceDirectionValue;\n  let forceDurationValue;\n  let forceDelayValue;\n  let willComplete = true;\n  let finished = false;\n  let shouldCalculateNumAnimations = true;\n  let keyframeName;\n  let ani;\n  const id = animationId;\n  const onFinishCallbacks = [];\n  const onFinishOneTimeCallbacks = [];\n  const elements = [];\n  const childAnimations = [];\n  const stylesheets = [];\n  const _beforeAddReadFunctions = [];\n  const _beforeAddWriteFunctions = [];\n  const _afterAddReadFunctions = [];\n  const _afterAddWriteFunctions = [];\n  const webAnimations = [];\n  const supportsAnimationEffect = typeof AnimationEffect === 'function' || typeof window.AnimationEffect === 'function';\n  const supportsWebAnimations = typeof Element === 'function' && typeof Element.prototype.animate === 'function' && supportsAnimationEffect;\n  const ANIMATION_END_FALLBACK_PADDING_MS = 100;\n\n  const getWebAnimations = () => {\n    return webAnimations;\n  };\n\n  const destroy = clearStyleSheets => {\n    childAnimations.forEach(childAnimation => {\n      childAnimation.destroy(clearStyleSheets);\n    });\n    cleanUp(clearStyleSheets);\n    elements.length = 0;\n    childAnimations.length = 0;\n    _keyframes.length = 0;\n    clearOnFinish();\n    initialized = false;\n    shouldCalculateNumAnimations = true;\n    return ani;\n  };\n  /**\n   * Cancels any Web Animations, removes\n   * any animation properties from the\n   * animation's elements, and removes the\n   * animation's stylesheets from the DOM.\n   */\n\n\n  const cleanUp = clearStyleSheets => {\n    cleanUpElements();\n\n    if (clearStyleSheets) {\n      cleanUpStyleSheets();\n    }\n  };\n\n  const resetFlags = () => {\n    shouldForceLinearEasing = false;\n    shouldForceSyncPlayback = false;\n    shouldCalculateNumAnimations = true;\n    forceDirectionValue = undefined;\n    forceDurationValue = undefined;\n    forceDelayValue = undefined;\n    numAnimationsRunning = 0;\n    finished = false;\n    willComplete = true;\n  };\n\n  const onFinish = (callback, opts) => {\n    const callbacks = opts && opts.oneTimeCallback ? onFinishOneTimeCallbacks : onFinishCallbacks;\n    callbacks.push({\n      c: callback,\n      o: opts\n    });\n    return ani;\n  };\n\n  const clearOnFinish = () => {\n    onFinishCallbacks.length = 0;\n    onFinishOneTimeCallbacks.length = 0;\n    return ani;\n  };\n  /**\n   * Cancels any Web Animations and removes\n   * any animation properties from the\n   * the animation's elements.\n   */\n\n\n  const cleanUpElements = () => {\n    if (supportsWebAnimations) {\n      webAnimations.forEach(animation => {\n        animation.cancel();\n      });\n      webAnimations.length = 0;\n    } else {\n      const elementsArray = elements.slice();\n      raf(() => {\n        elementsArray.forEach(element => {\n          removeStyleProperty(element, 'animation-name');\n          removeStyleProperty(element, 'animation-duration');\n          removeStyleProperty(element, 'animation-timing-function');\n          removeStyleProperty(element, 'animation-iteration-count');\n          removeStyleProperty(element, 'animation-delay');\n          removeStyleProperty(element, 'animation-play-state');\n          removeStyleProperty(element, 'animation-fill-mode');\n          removeStyleProperty(element, 'animation-direction');\n        });\n      });\n    }\n  };\n  /**\n   * Removes the animation's stylesheets\n   * from the DOM.\n   */\n\n\n  const cleanUpStyleSheets = () => {\n    stylesheets.forEach(stylesheet => {\n      /**\n       * When sharing stylesheets, it's possible\n       * for another animation to have already\n       * cleaned up a particular stylesheet\n       */\n      if (stylesheet && stylesheet.parentNode) {\n        stylesheet.parentNode.removeChild(stylesheet);\n      }\n    });\n    stylesheets.length = 0;\n  };\n\n  const beforeAddRead = readFn => {\n    _beforeAddReadFunctions.push(readFn);\n\n    return ani;\n  };\n\n  const beforeAddWrite = writeFn => {\n    _beforeAddWriteFunctions.push(writeFn);\n\n    return ani;\n  };\n\n  const afterAddRead = readFn => {\n    _afterAddReadFunctions.push(readFn);\n\n    return ani;\n  };\n\n  const afterAddWrite = writeFn => {\n    _afterAddWriteFunctions.push(writeFn);\n\n    return ani;\n  };\n\n  const beforeAddClass = className => {\n    beforeAddClasses = addClassToArray(beforeAddClasses, className);\n    return ani;\n  };\n\n  const beforeRemoveClass = className => {\n    beforeRemoveClasses = addClassToArray(beforeRemoveClasses, className);\n    return ani;\n  };\n  /**\n   * Set CSS inline styles to the animation's\n   * elements before the animation begins.\n   */\n\n\n  const beforeStyles = (styles = {}) => {\n    beforeStylesValue = styles;\n    return ani;\n  };\n  /**\n   * Clear CSS inline styles from the animation's\n   * elements before the animation begins.\n   */\n\n\n  const beforeClearStyles = (propertyNames = []) => {\n    for (const property of propertyNames) {\n      beforeStylesValue[property] = '';\n    }\n\n    return ani;\n  };\n\n  const afterAddClass = className => {\n    afterAddClasses = addClassToArray(afterAddClasses, className);\n    return ani;\n  };\n\n  const afterRemoveClass = className => {\n    afterRemoveClasses = addClassToArray(afterRemoveClasses, className);\n    return ani;\n  };\n\n  const afterStyles = (styles = {}) => {\n    afterStylesValue = styles;\n    return ani;\n  };\n\n  const afterClearStyles = (propertyNames = []) => {\n    for (const property of propertyNames) {\n      afterStylesValue[property] = '';\n    }\n\n    return ani;\n  };\n\n  const getFill = () => {\n    if (_fill !== undefined) {\n      return _fill;\n    }\n\n    if (parentAnimation) {\n      return parentAnimation.getFill();\n    }\n\n    return 'both';\n  };\n\n  const getDirection = () => {\n    if (forceDirectionValue !== undefined) {\n      return forceDirectionValue;\n    }\n\n    if (_direction !== undefined) {\n      return _direction;\n    }\n\n    if (parentAnimation) {\n      return parentAnimation.getDirection();\n    }\n\n    return 'normal';\n  };\n\n  const getEasing = () => {\n    if (shouldForceLinearEasing) {\n      return 'linear';\n    }\n\n    if (_easing !== undefined) {\n      return _easing;\n    }\n\n    if (parentAnimation) {\n      return parentAnimation.getEasing();\n    }\n\n    return 'linear';\n  };\n\n  const getDuration = () => {\n    if (shouldForceSyncPlayback) {\n      return 0;\n    }\n\n    if (forceDurationValue !== undefined) {\n      return forceDurationValue;\n    }\n\n    if (_duration !== undefined) {\n      return _duration;\n    }\n\n    if (parentAnimation) {\n      return parentAnimation.getDuration();\n    }\n\n    return 0;\n  };\n\n  const getIterations = () => {\n    if (_iterations !== undefined) {\n      return _iterations;\n    }\n\n    if (parentAnimation) {\n      return parentAnimation.getIterations();\n    }\n\n    return 1;\n  };\n\n  const getDelay = () => {\n    if (forceDelayValue !== undefined) {\n      return forceDelayValue;\n    }\n\n    if (_delay !== undefined) {\n      return _delay;\n    }\n\n    if (parentAnimation) {\n      return parentAnimation.getDelay();\n    }\n\n    return 0;\n  };\n\n  const getKeyframes = () => {\n    return _keyframes;\n  };\n\n  const direction = animationDirection => {\n    _direction = animationDirection;\n    update(true);\n    return ani;\n  };\n\n  const fill = animationFill => {\n    _fill = animationFill;\n    update(true);\n    return ani;\n  };\n\n  const delay = animationDelay => {\n    _delay = animationDelay;\n    update(true);\n    return ani;\n  };\n\n  const easing = animationEasing => {\n    _easing = animationEasing;\n    update(true);\n    return ani;\n  };\n\n  const duration = animationDuration => {\n    /**\n     * CSS Animation Durations of 0ms work fine on Chrome\n     * but do not run on Safari, so force it to 1ms to\n     * get it to run on both platforms.\n     */\n    if (!supportsWebAnimations && animationDuration === 0) {\n      animationDuration = 1;\n    }\n\n    _duration = animationDuration;\n    update(true);\n    return ani;\n  };\n\n  const iterations = animationIterations => {\n    _iterations = animationIterations;\n    update(true);\n    return ani;\n  };\n\n  const parent = animation => {\n    parentAnimation = animation;\n    return ani;\n  };\n\n  const addElement = el => {\n    if (el != null) {\n      if (el.nodeType === 1) {\n        elements.push(el);\n      } else if (el.length >= 0) {\n        for (let i = 0; i < el.length; i++) {\n          elements.push(el[i]);\n        }\n      } else {\n        console.error('Invalid addElement value');\n      }\n    }\n\n    return ani;\n  };\n\n  const addAnimation = animationToAdd => {\n    if (animationToAdd != null) {\n      if (Array.isArray(animationToAdd)) {\n        for (const animation of animationToAdd) {\n          animation.parent(ani);\n          childAnimations.push(animation);\n        }\n      } else {\n        animationToAdd.parent(ani);\n        childAnimations.push(animationToAdd);\n      }\n    }\n\n    return ani;\n  };\n\n  const keyframes = keyframeValues => {\n    _keyframes = keyframeValues;\n    return ani;\n  };\n  /**\n   * Run all \"before\" animation hooks.\n   */\n\n\n  const beforeAnimation = () => {\n    // Runs all before read callbacks\n    _beforeAddReadFunctions.forEach(callback => callback()); // Runs all before write callbacks\n\n\n    _beforeAddWriteFunctions.forEach(callback => callback()); // Updates styles and classes before animation runs\n\n\n    const addClasses = beforeAddClasses;\n    const removeClasses = beforeRemoveClasses;\n    const styles = beforeStylesValue;\n    elements.forEach(el => {\n      const elementClassList = el.classList;\n      addClasses.forEach(c => elementClassList.add(c));\n      removeClasses.forEach(c => elementClassList.remove(c));\n\n      for (const property in styles) {\n        if (styles.hasOwnProperty(property)) {\n          setStyleProperty(el, property, styles[property]);\n        }\n      }\n    });\n  };\n  /**\n   * Run all \"after\" animation hooks.\n   */\n\n\n  const afterAnimation = () => {\n    clearCSSAnimationsTimeout(); // Runs all after read callbacks\n\n    _afterAddReadFunctions.forEach(callback => callback()); // Runs all after write callbacks\n\n\n    _afterAddWriteFunctions.forEach(callback => callback()); // Updates styles and classes before animation ends\n\n\n    const currentStep = willComplete ? 1 : 0;\n    const addClasses = afterAddClasses;\n    const removeClasses = afterRemoveClasses;\n    const styles = afterStylesValue;\n    elements.forEach(el => {\n      const elementClassList = el.classList;\n      addClasses.forEach(c => elementClassList.add(c));\n      removeClasses.forEach(c => elementClassList.remove(c));\n\n      for (const property in styles) {\n        if (styles.hasOwnProperty(property)) {\n          setStyleProperty(el, property, styles[property]);\n        }\n      }\n    });\n    onFinishCallbacks.forEach(onFinishCallback => {\n      return onFinishCallback.c(currentStep, ani);\n    });\n    onFinishOneTimeCallbacks.forEach(onFinishCallback => {\n      return onFinishCallback.c(currentStep, ani);\n    });\n    onFinishOneTimeCallbacks.length = 0;\n    shouldCalculateNumAnimations = true;\n\n    if (willComplete) {\n      finished = true;\n    }\n\n    willComplete = true;\n  };\n\n  const animationFinish = () => {\n    if (numAnimationsRunning === 0) {\n      return;\n    }\n\n    numAnimationsRunning--;\n\n    if (numAnimationsRunning === 0) {\n      afterAnimation();\n\n      if (parentAnimation) {\n        parentAnimation.animationFinish();\n      }\n    }\n  };\n\n  const initializeCSSAnimation = (toggleAnimationName = true) => {\n    cleanUpStyleSheets();\n    const processedKeyframes = processKeyframes(_keyframes);\n    elements.forEach(element => {\n      if (processedKeyframes.length > 0) {\n        const keyframeRules = generateKeyframeRules(processedKeyframes);\n        keyframeName = animationId !== undefined ? animationId : generateKeyframeName(keyframeRules);\n        const stylesheet = createKeyframeStylesheet(keyframeName, keyframeRules, element);\n        stylesheets.push(stylesheet);\n        setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n        setStyleProperty(element, 'animation-timing-function', getEasing());\n        setStyleProperty(element, 'animation-delay', `${getDelay()}ms`);\n        setStyleProperty(element, 'animation-fill-mode', getFill());\n        setStyleProperty(element, 'animation-direction', getDirection());\n        const iterationsCount = getIterations() === Infinity ? 'infinite' : getIterations().toString();\n        setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n        setStyleProperty(element, 'animation-play-state', 'paused');\n\n        if (toggleAnimationName) {\n          setStyleProperty(element, 'animation-name', `${stylesheet.id}-alt`);\n        }\n\n        raf(() => {\n          setStyleProperty(element, 'animation-name', stylesheet.id || null);\n        });\n      }\n    });\n  };\n\n  const initializeWebAnimation = () => {\n    elements.forEach(element => {\n      const animation = element.animate(_keyframes, {\n        id,\n        delay: getDelay(),\n        duration: getDuration(),\n        easing: getEasing(),\n        iterations: getIterations(),\n        fill: getFill(),\n        direction: getDirection()\n      });\n      animation.pause();\n      webAnimations.push(animation);\n    });\n\n    if (webAnimations.length > 0) {\n      webAnimations[0].onfinish = () => {\n        animationFinish();\n      };\n    }\n  };\n\n  const initializeAnimation = (toggleAnimationName = true) => {\n    beforeAnimation();\n\n    if (_keyframes.length > 0) {\n      if (supportsWebAnimations) {\n        initializeWebAnimation();\n      } else {\n        initializeCSSAnimation(toggleAnimationName);\n      }\n    }\n\n    initialized = true;\n  };\n\n  const setAnimationStep = step => {\n    step = Math.min(Math.max(step, 0), 0.9999);\n\n    if (supportsWebAnimations) {\n      webAnimations.forEach(animation => {\n        animation.currentTime = animation.effect.getComputedTiming().delay + getDuration() * step;\n        animation.pause();\n      });\n    } else {\n      const animationDuration = `-${getDuration() * step}ms`;\n      elements.forEach(element => {\n        if (_keyframes.length > 0) {\n          setStyleProperty(element, 'animation-delay', animationDuration);\n          setStyleProperty(element, 'animation-play-state', 'paused');\n        }\n      });\n    }\n  };\n\n  const updateWebAnimation = step => {\n    webAnimations.forEach(animation => {\n      animation.effect.updateTiming({\n        delay: getDelay(),\n        duration: getDuration(),\n        easing: getEasing(),\n        iterations: getIterations(),\n        fill: getFill(),\n        direction: getDirection()\n      });\n    });\n\n    if (step !== undefined) {\n      setAnimationStep(step);\n    }\n  };\n\n  const updateCSSAnimation = (toggleAnimationName = true, step) => {\n    raf(() => {\n      elements.forEach(element => {\n        setStyleProperty(element, 'animation-name', keyframeName || null);\n        setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n        setStyleProperty(element, 'animation-timing-function', getEasing());\n        setStyleProperty(element, 'animation-delay', step !== undefined ? `-${step * getDuration()}ms` : `${getDelay()}ms`);\n        setStyleProperty(element, 'animation-fill-mode', getFill() || null);\n        setStyleProperty(element, 'animation-direction', getDirection() || null);\n        const iterationsCount = getIterations() === Infinity ? 'infinite' : getIterations().toString();\n        setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n\n        if (toggleAnimationName) {\n          setStyleProperty(element, 'animation-name', `${keyframeName}-alt`);\n        }\n\n        raf(() => {\n          setStyleProperty(element, 'animation-name', keyframeName || null);\n        });\n      });\n    });\n  };\n\n  const update = (deep = false, toggleAnimationName = true, step) => {\n    if (deep) {\n      childAnimations.forEach(animation => {\n        animation.update(deep, toggleAnimationName, step);\n      });\n    }\n\n    if (supportsWebAnimations) {\n      updateWebAnimation(step);\n    } else {\n      updateCSSAnimation(toggleAnimationName, step);\n    }\n\n    return ani;\n  };\n\n  const progressStart = (forceLinearEasing = false, step) => {\n    childAnimations.forEach(animation => {\n      animation.progressStart(forceLinearEasing, step);\n    });\n    pauseAnimation();\n    shouldForceLinearEasing = forceLinearEasing;\n\n    if (!initialized) {\n      initializeAnimation();\n    } else {\n      update(false, true, step);\n    }\n\n    return ani;\n  };\n\n  const progressStep = step => {\n    childAnimations.forEach(animation => {\n      animation.progressStep(step);\n    });\n    setAnimationStep(step);\n    return ani;\n  };\n\n  const progressEnd = (playTo, step, dur) => {\n    shouldForceLinearEasing = false;\n    childAnimations.forEach(animation => {\n      animation.progressEnd(playTo, step, dur);\n    });\n\n    if (dur !== undefined) {\n      forceDurationValue = dur;\n    }\n\n    finished = false; // tslint:disable-next-line: strict-boolean-conditions\n\n    willComplete = true;\n\n    if (playTo === 0) {\n      forceDirectionValue = getDirection() === 'reverse' ? 'normal' : 'reverse';\n\n      if (forceDirectionValue === 'reverse') {\n        willComplete = false;\n      }\n\n      if (supportsWebAnimations) {\n        update();\n        setAnimationStep(1 - step);\n      } else {\n        forceDelayValue = (1 - step) * getDuration() * -1;\n        update(false, false);\n      }\n    } else if (playTo === 1) {\n      if (supportsWebAnimations) {\n        update();\n        setAnimationStep(step);\n      } else {\n        forceDelayValue = step * getDuration() * -1;\n        update(false, false);\n      }\n    }\n\n    if (playTo !== undefined) {\n      onFinish(() => {\n        forceDurationValue = undefined;\n        forceDirectionValue = undefined;\n        forceDelayValue = undefined;\n      }, {\n        oneTimeCallback: true\n      });\n\n      if (!parentAnimation) {\n        play();\n      }\n    }\n\n    return ani;\n  };\n\n  const pauseAnimation = () => {\n    if (initialized) {\n      if (supportsWebAnimations) {\n        webAnimations.forEach(animation => {\n          animation.pause();\n        });\n      } else {\n        elements.forEach(element => {\n          setStyleProperty(element, 'animation-play-state', 'paused');\n        });\n      }\n    }\n  };\n\n  const pause = () => {\n    childAnimations.forEach(animation => {\n      animation.pause();\n    });\n    pauseAnimation();\n    return ani;\n  };\n\n  const onAnimationEndFallback = () => {\n    cssAnimationsTimerFallback = undefined;\n    animationFinish();\n  };\n\n  const clearCSSAnimationsTimeout = () => {\n    if (cssAnimationsTimerFallback) {\n      clearTimeout(cssAnimationsTimerFallback);\n    }\n  };\n\n  const playCSSAnimations = () => {\n    clearCSSAnimationsTimeout();\n    raf(() => {\n      elements.forEach(element => {\n        if (_keyframes.length > 0) {\n          setStyleProperty(element, 'animation-play-state', 'running');\n        }\n      });\n    });\n\n    if (_keyframes.length === 0 || elements.length === 0) {\n      animationFinish();\n    } else {\n      /**\n       * This is a catchall in the event that a CSS Animation did not finish.\n       * The Web Animations API has mechanisms in place for preventing this.\n       * CSS Animations will not fire an `animationend` event\n       * for elements with `display: none`. The Web Animations API\n       * accounts for this, but using raw CSS Animations requires\n       * this workaround.\n       */\n      const animationDelay = getDelay() || 0;\n      const animationDuration = getDuration() || 0;\n      const animationIterations = getIterations() || 1; // No need to set a timeout when animation has infinite iterations\n\n      if (isFinite(animationIterations)) {\n        cssAnimationsTimerFallback = setTimeout(onAnimationEndFallback, animationDelay + animationDuration * animationIterations + ANIMATION_END_FALLBACK_PADDING_MS);\n      }\n\n      animationEnd(elements[0], () => {\n        clearCSSAnimationsTimeout();\n        /**\n         * Ensure that clean up\n         * is always done a frame\n         * before the onFinish handlers\n         * are fired. Otherwise, there\n         * may be flickering if a new\n         * animation is started on the same\n         * element too quickly\n         *\n         * TODO: Is there a cleaner way to do this?\n         */\n\n        raf(() => {\n          clearCSSAnimationPlayState();\n          raf(animationFinish);\n        });\n      });\n    }\n  };\n\n  const clearCSSAnimationPlayState = () => {\n    elements.forEach(element => {\n      removeStyleProperty(element, 'animation-duration');\n      removeStyleProperty(element, 'animation-delay');\n      removeStyleProperty(element, 'animation-play-state');\n    });\n  };\n\n  const playWebAnimations = () => {\n    webAnimations.forEach(animation => {\n      animation.play();\n    });\n\n    if (_keyframes.length === 0 || elements.length === 0) {\n      animationFinish();\n    }\n  };\n\n  const resetAnimation = () => {\n    if (supportsWebAnimations) {\n      setAnimationStep(0);\n      updateWebAnimation();\n    } else {\n      updateCSSAnimation();\n    }\n  };\n\n  const play = opts => {\n    return new Promise(resolve => {\n      if (opts && opts.sync) {\n        shouldForceSyncPlayback = true;\n        onFinish(() => shouldForceSyncPlayback = false, {\n          oneTimeCallback: true\n        });\n      }\n\n      if (!initialized) {\n        initializeAnimation();\n      }\n\n      if (finished) {\n        resetAnimation();\n        finished = false;\n      }\n\n      if (shouldCalculateNumAnimations) {\n        numAnimationsRunning = childAnimations.length + 1;\n        shouldCalculateNumAnimations = false;\n      }\n\n      onFinish(() => resolve(), {\n        oneTimeCallback: true\n      });\n      childAnimations.forEach(animation => {\n        animation.play();\n      });\n\n      if (supportsWebAnimations) {\n        playWebAnimations();\n      } else {\n        playCSSAnimations();\n      }\n    });\n  };\n\n  const stop = () => {\n    childAnimations.forEach(animation => {\n      animation.stop();\n    });\n\n    if (initialized) {\n      cleanUpElements();\n      initialized = false;\n    }\n\n    resetFlags();\n  };\n\n  const from = (property, value) => {\n    const firstFrame = _keyframes[0];\n\n    if (firstFrame !== undefined && (firstFrame.offset === undefined || firstFrame.offset === 0)) {\n      firstFrame[property] = value;\n    } else {\n      _keyframes = [{\n        offset: 0,\n        [property]: value\n      }, ..._keyframes];\n    }\n\n    return ani;\n  };\n\n  const to = (property, value) => {\n    const lastFrame = _keyframes[_keyframes.length - 1];\n\n    if (lastFrame !== undefined && (lastFrame.offset === undefined || lastFrame.offset === 1)) {\n      lastFrame[property] = value;\n    } else {\n      _keyframes = [..._keyframes, {\n        offset: 1,\n        [property]: value\n      }];\n    }\n\n    return ani;\n  };\n\n  const fromTo = (property, fromValue, toValue) => {\n    return from(property, fromValue).to(property, toValue);\n  };\n\n  return ani = {\n    parentAnimation,\n    elements,\n    childAnimations,\n    id,\n    animationFinish,\n    from,\n    to,\n    fromTo,\n    parent,\n    play,\n    pause,\n    stop,\n    destroy,\n    keyframes,\n    addAnimation,\n    addElement,\n    update,\n    fill,\n    direction,\n    iterations,\n    duration,\n    easing,\n    delay,\n    getWebAnimations,\n    getKeyframes,\n    getFill,\n    getDirection,\n    getDelay,\n    getIterations,\n    getEasing,\n    getDuration,\n    afterAddRead,\n    afterAddWrite,\n    afterClearStyles,\n    afterStyles,\n    afterRemoveClass,\n    afterAddClass,\n    beforeAddRead,\n    beforeAddWrite,\n    beforeClearStyles,\n    beforeStyles,\n    beforeRemoveClass,\n    beforeAddClass,\n    onFinish,\n    progressStart,\n    progressStep,\n    progressEnd\n  };\n};\n\nexport { createAnimation as c };","map":{"version":3,"sources":["/media/theticarcher38/Volume/Code/LawsForPaws/LawsForPawsApp/node_modules/@ionic/core/dist/esm/animation-ede2d71c.js"],"names":["r","raf","animationPrefix","processKeyframes","keyframes","forEach","keyframe","key","hasOwnProperty","value","newKey","convertCamelCaseToHypen","str","replace","toLowerCase","getAnimationPrefix","el","undefined","supportsUnprefixed","style","animationName","supportsWebkitPrefix","webkitAnimationName","setStyleProperty","element","propertyName","prefix","startsWith","setProperty","removeStyleProperty","removeProperty","animationEnd","callback","unRegTrans","opts","passive","unregister","onTransitionEnd","ev","target","addEventListener","removeEventListener","generateKeyframeRules","map","offset","frameString","property","push","join","keyframeIds","generateKeyframeName","keyframeRules","index","indexOf","getStyleContainer","rootNode","getRootNode","head","createKeyframeStylesheet","keyframeName","styleContainer","keyframePrefix","existingStylesheet","querySelector","stylesheet","ownerDocument","document","createElement","id","textContent","appendChild","addClassToArray","classes","className","classNameToAppend","Array","isArray","createAnimation","animationId","_delay","_duration","_easing","_iterations","_fill","_direction","_keyframes","beforeAddClasses","beforeRemoveClasses","initialized","parentAnimation","beforeStylesValue","afterAddClasses","afterRemoveClasses","afterStylesValue","numAnimationsRunning","shouldForceLinearEasing","shouldForceSyncPlayback","cssAnimationsTimerFallback","forceDirectionValue","forceDurationValue","forceDelayValue","willComplete","finished","shouldCalculateNumAnimations","ani","onFinishCallbacks","onFinishOneTimeCallbacks","elements","childAnimations","stylesheets","_beforeAddReadFunctions","_beforeAddWriteFunctions","_afterAddReadFunctions","_afterAddWriteFunctions","webAnimations","supportsAnimationEffect","AnimationEffect","window","supportsWebAnimations","Element","prototype","animate","ANIMATION_END_FALLBACK_PADDING_MS","getWebAnimations","destroy","clearStyleSheets","childAnimation","cleanUp","length","clearOnFinish","cleanUpElements","cleanUpStyleSheets","resetFlags","onFinish","callbacks","oneTimeCallback","c","o","animation","cancel","elementsArray","slice","parentNode","removeChild","beforeAddRead","readFn","beforeAddWrite","writeFn","afterAddRead","afterAddWrite","beforeAddClass","beforeRemoveClass","beforeStyles","styles","beforeClearStyles","propertyNames","afterAddClass","afterRemoveClass","afterStyles","afterClearStyles","getFill","getDirection","getEasing","getDuration","getIterations","getDelay","getKeyframes","direction","animationDirection","update","fill","animationFill","delay","animationDelay","easing","animationEasing","duration","animationDuration","iterations","animationIterations","parent","addElement","nodeType","i","console","error","addAnimation","animationToAdd","keyframeValues","beforeAnimation","addClasses","removeClasses","elementClassList","classList","add","remove","afterAnimation","clearCSSAnimationsTimeout","currentStep","onFinishCallback","animationFinish","initializeCSSAnimation","toggleAnimationName","processedKeyframes","iterationsCount","Infinity","toString","initializeWebAnimation","pause","onfinish","initializeAnimation","setAnimationStep","step","Math","min","max","currentTime","effect","getComputedTiming","updateWebAnimation","updateTiming","updateCSSAnimation","deep","progressStart","forceLinearEasing","pauseAnimation","progressStep","progressEnd","playTo","dur","play","onAnimationEndFallback","clearTimeout","playCSSAnimations","isFinite","setTimeout","clearCSSAnimationPlayState","playWebAnimations","resetAnimation","Promise","resolve","sync","stop","from","firstFrame","to","lastFrame","fromTo","fromValue","toValue"],"mappings":"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","sourcesContent":["import { r as raf } from './helpers-002e4980.js';\n\nlet animationPrefix;\n/**\n * Web Animations requires hyphenated CSS properties\n * to be written in camelCase when animating\n */\nconst processKeyframes = (keyframes) => {\n  keyframes.forEach(keyframe => {\n    for (const key in keyframe) {\n      if (keyframe.hasOwnProperty(key)) {\n        const value = keyframe[key];\n        if (key === 'easing') {\n          const newKey = 'animation-timing-function';\n          keyframe[newKey] = value;\n          delete keyframe[key];\n        }\n        else {\n          const newKey = convertCamelCaseToHypen(key);\n          if (newKey !== key) {\n            keyframe[newKey] = value;\n            delete keyframe[key];\n          }\n        }\n      }\n    }\n  });\n  return keyframes;\n};\nconst convertCamelCaseToHypen = (str) => {\n  return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n};\nconst getAnimationPrefix = (el) => {\n  if (animationPrefix === undefined) {\n    const supportsUnprefixed = el.style.animationName !== undefined;\n    const supportsWebkitPrefix = el.style.webkitAnimationName !== undefined;\n    animationPrefix = (!supportsUnprefixed && supportsWebkitPrefix) ? '-webkit-' : '';\n  }\n  return animationPrefix;\n};\nconst setStyleProperty = (element, propertyName, value) => {\n  const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\n  element.style.setProperty(prefix + propertyName, value);\n};\nconst removeStyleProperty = (element, propertyName) => {\n  const prefix = propertyName.startsWith('animation') ? getAnimationPrefix(element) : '';\n  element.style.removeProperty(prefix + propertyName);\n};\nconst animationEnd = (el, callback) => {\n  let unRegTrans;\n  const opts = { passive: true };\n  const unregister = () => {\n    if (unRegTrans) {\n      unRegTrans();\n    }\n  };\n  const onTransitionEnd = (ev) => {\n    if (el === ev.target) {\n      unregister();\n      callback(ev);\n    }\n  };\n  if (el) {\n    el.addEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n    el.addEventListener('animationend', onTransitionEnd, opts);\n    unRegTrans = () => {\n      el.removeEventListener('webkitAnimationEnd', onTransitionEnd, opts);\n      el.removeEventListener('animationend', onTransitionEnd, opts);\n    };\n  }\n  return unregister;\n};\nconst generateKeyframeRules = (keyframes = []) => {\n  return keyframes.map(keyframe => {\n    const offset = keyframe.offset;\n    const frameString = [];\n    for (const property in keyframe) {\n      if (keyframe.hasOwnProperty(property) && property !== 'offset') {\n        frameString.push(`${property}: ${keyframe[property]};`);\n      }\n    }\n    return `${offset * 100}% { ${frameString.join(' ')} }`;\n  }).join(' ');\n};\nconst keyframeIds = [];\nconst generateKeyframeName = (keyframeRules) => {\n  let index = keyframeIds.indexOf(keyframeRules);\n  if (index < 0) {\n    index = (keyframeIds.push(keyframeRules) - 1);\n  }\n  return `ion-animation-${index}`;\n};\nconst getStyleContainer = (element) => {\n  const rootNode = element.getRootNode();\n  return (rootNode.head || rootNode);\n};\nconst createKeyframeStylesheet = (keyframeName, keyframeRules, element) => {\n  const styleContainer = getStyleContainer(element);\n  const keyframePrefix = getAnimationPrefix(element);\n  const existingStylesheet = styleContainer.querySelector('#' + keyframeName);\n  if (existingStylesheet) {\n    return existingStylesheet;\n  }\n  const stylesheet = (element.ownerDocument || document).createElement('style');\n  stylesheet.id = keyframeName;\n  stylesheet.textContent = `@${keyframePrefix}keyframes ${keyframeName} { ${keyframeRules} } @${keyframePrefix}keyframes ${keyframeName}-alt { ${keyframeRules} }`;\n  styleContainer.appendChild(stylesheet);\n  return stylesheet;\n};\nconst addClassToArray = (classes = [], className) => {\n  if (className !== undefined) {\n    const classNameToAppend = (Array.isArray(className)) ? className : [className];\n    return [...classes, ...classNameToAppend];\n  }\n  return classes;\n};\n\nconst createAnimation = (animationId) => {\n  let _delay;\n  let _duration;\n  let _easing;\n  let _iterations;\n  let _fill;\n  let _direction;\n  let _keyframes = [];\n  let beforeAddClasses = [];\n  let beforeRemoveClasses = [];\n  let initialized = false;\n  let parentAnimation;\n  let beforeStylesValue = {};\n  let afterAddClasses = [];\n  let afterRemoveClasses = [];\n  let afterStylesValue = {};\n  let numAnimationsRunning = 0;\n  let shouldForceLinearEasing = false;\n  let shouldForceSyncPlayback = false;\n  let cssAnimationsTimerFallback;\n  let forceDirectionValue;\n  let forceDurationValue;\n  let forceDelayValue;\n  let willComplete = true;\n  let finished = false;\n  let shouldCalculateNumAnimations = true;\n  let keyframeName;\n  let ani;\n  const id = animationId;\n  const onFinishCallbacks = [];\n  const onFinishOneTimeCallbacks = [];\n  const elements = [];\n  const childAnimations = [];\n  const stylesheets = [];\n  const _beforeAddReadFunctions = [];\n  const _beforeAddWriteFunctions = [];\n  const _afterAddReadFunctions = [];\n  const _afterAddWriteFunctions = [];\n  const webAnimations = [];\n  const supportsAnimationEffect = (typeof AnimationEffect === 'function' || typeof window.AnimationEffect === 'function');\n  const supportsWebAnimations = (typeof Element === 'function') && (typeof Element.prototype.animate === 'function') && supportsAnimationEffect;\n  const ANIMATION_END_FALLBACK_PADDING_MS = 100;\n  const getWebAnimations = () => {\n    return webAnimations;\n  };\n  const destroy = (clearStyleSheets) => {\n    childAnimations.forEach(childAnimation => {\n      childAnimation.destroy(clearStyleSheets);\n    });\n    cleanUp(clearStyleSheets);\n    elements.length = 0;\n    childAnimations.length = 0;\n    _keyframes.length = 0;\n    clearOnFinish();\n    initialized = false;\n    shouldCalculateNumAnimations = true;\n    return ani;\n  };\n  /**\n   * Cancels any Web Animations, removes\n   * any animation properties from the\n   * animation's elements, and removes the\n   * animation's stylesheets from the DOM.\n   */\n  const cleanUp = (clearStyleSheets) => {\n    cleanUpElements();\n    if (clearStyleSheets) {\n      cleanUpStyleSheets();\n    }\n  };\n  const resetFlags = () => {\n    shouldForceLinearEasing = false;\n    shouldForceSyncPlayback = false;\n    shouldCalculateNumAnimations = true;\n    forceDirectionValue = undefined;\n    forceDurationValue = undefined;\n    forceDelayValue = undefined;\n    numAnimationsRunning = 0;\n    finished = false;\n    willComplete = true;\n  };\n  const onFinish = (callback, opts) => {\n    const callbacks = (opts && opts.oneTimeCallback) ? onFinishOneTimeCallbacks : onFinishCallbacks;\n    callbacks.push({ c: callback, o: opts });\n    return ani;\n  };\n  const clearOnFinish = () => {\n    onFinishCallbacks.length = 0;\n    onFinishOneTimeCallbacks.length = 0;\n    return ani;\n  };\n  /**\n   * Cancels any Web Animations and removes\n   * any animation properties from the\n   * the animation's elements.\n   */\n  const cleanUpElements = () => {\n    if (supportsWebAnimations) {\n      webAnimations.forEach(animation => {\n        animation.cancel();\n      });\n      webAnimations.length = 0;\n    }\n    else {\n      const elementsArray = elements.slice();\n      raf(() => {\n        elementsArray.forEach(element => {\n          removeStyleProperty(element, 'animation-name');\n          removeStyleProperty(element, 'animation-duration');\n          removeStyleProperty(element, 'animation-timing-function');\n          removeStyleProperty(element, 'animation-iteration-count');\n          removeStyleProperty(element, 'animation-delay');\n          removeStyleProperty(element, 'animation-play-state');\n          removeStyleProperty(element, 'animation-fill-mode');\n          removeStyleProperty(element, 'animation-direction');\n        });\n      });\n    }\n  };\n  /**\n   * Removes the animation's stylesheets\n   * from the DOM.\n   */\n  const cleanUpStyleSheets = () => {\n    stylesheets.forEach(stylesheet => {\n      /**\n       * When sharing stylesheets, it's possible\n       * for another animation to have already\n       * cleaned up a particular stylesheet\n       */\n      if (stylesheet && stylesheet.parentNode) {\n        stylesheet.parentNode.removeChild(stylesheet);\n      }\n    });\n    stylesheets.length = 0;\n  };\n  const beforeAddRead = (readFn) => {\n    _beforeAddReadFunctions.push(readFn);\n    return ani;\n  };\n  const beforeAddWrite = (writeFn) => {\n    _beforeAddWriteFunctions.push(writeFn);\n    return ani;\n  };\n  const afterAddRead = (readFn) => {\n    _afterAddReadFunctions.push(readFn);\n    return ani;\n  };\n  const afterAddWrite = (writeFn) => {\n    _afterAddWriteFunctions.push(writeFn);\n    return ani;\n  };\n  const beforeAddClass = (className) => {\n    beforeAddClasses = addClassToArray(beforeAddClasses, className);\n    return ani;\n  };\n  const beforeRemoveClass = (className) => {\n    beforeRemoveClasses = addClassToArray(beforeRemoveClasses, className);\n    return ani;\n  };\n  /**\n   * Set CSS inline styles to the animation's\n   * elements before the animation begins.\n   */\n  const beforeStyles = (styles = {}) => {\n    beforeStylesValue = styles;\n    return ani;\n  };\n  /**\n   * Clear CSS inline styles from the animation's\n   * elements before the animation begins.\n   */\n  const beforeClearStyles = (propertyNames = []) => {\n    for (const property of propertyNames) {\n      beforeStylesValue[property] = '';\n    }\n    return ani;\n  };\n  const afterAddClass = (className) => {\n    afterAddClasses = addClassToArray(afterAddClasses, className);\n    return ani;\n  };\n  const afterRemoveClass = (className) => {\n    afterRemoveClasses = addClassToArray(afterRemoveClasses, className);\n    return ani;\n  };\n  const afterStyles = (styles = {}) => {\n    afterStylesValue = styles;\n    return ani;\n  };\n  const afterClearStyles = (propertyNames = []) => {\n    for (const property of propertyNames) {\n      afterStylesValue[property] = '';\n    }\n    return ani;\n  };\n  const getFill = () => {\n    if (_fill !== undefined) {\n      return _fill;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getFill();\n    }\n    return 'both';\n  };\n  const getDirection = () => {\n    if (forceDirectionValue !== undefined) {\n      return forceDirectionValue;\n    }\n    if (_direction !== undefined) {\n      return _direction;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getDirection();\n    }\n    return 'normal';\n  };\n  const getEasing = () => {\n    if (shouldForceLinearEasing) {\n      return 'linear';\n    }\n    if (_easing !== undefined) {\n      return _easing;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getEasing();\n    }\n    return 'linear';\n  };\n  const getDuration = () => {\n    if (shouldForceSyncPlayback) {\n      return 0;\n    }\n    if (forceDurationValue !== undefined) {\n      return forceDurationValue;\n    }\n    if (_duration !== undefined) {\n      return _duration;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getDuration();\n    }\n    return 0;\n  };\n  const getIterations = () => {\n    if (_iterations !== undefined) {\n      return _iterations;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getIterations();\n    }\n    return 1;\n  };\n  const getDelay = () => {\n    if (forceDelayValue !== undefined) {\n      return forceDelayValue;\n    }\n    if (_delay !== undefined) {\n      return _delay;\n    }\n    if (parentAnimation) {\n      return parentAnimation.getDelay();\n    }\n    return 0;\n  };\n  const getKeyframes = () => {\n    return _keyframes;\n  };\n  const direction = (animationDirection) => {\n    _direction = animationDirection;\n    update(true);\n    return ani;\n  };\n  const fill = (animationFill) => {\n    _fill = animationFill;\n    update(true);\n    return ani;\n  };\n  const delay = (animationDelay) => {\n    _delay = animationDelay;\n    update(true);\n    return ani;\n  };\n  const easing = (animationEasing) => {\n    _easing = animationEasing;\n    update(true);\n    return ani;\n  };\n  const duration = (animationDuration) => {\n    /**\n     * CSS Animation Durations of 0ms work fine on Chrome\n     * but do not run on Safari, so force it to 1ms to\n     * get it to run on both platforms.\n     */\n    if (!supportsWebAnimations && animationDuration === 0) {\n      animationDuration = 1;\n    }\n    _duration = animationDuration;\n    update(true);\n    return ani;\n  };\n  const iterations = (animationIterations) => {\n    _iterations = animationIterations;\n    update(true);\n    return ani;\n  };\n  const parent = (animation) => {\n    parentAnimation = animation;\n    return ani;\n  };\n  const addElement = (el) => {\n    if (el != null) {\n      if (el.nodeType === 1) {\n        elements.push(el);\n      }\n      else if (el.length >= 0) {\n        for (let i = 0; i < el.length; i++) {\n          elements.push(el[i]);\n        }\n      }\n      else {\n        console.error('Invalid addElement value');\n      }\n    }\n    return ani;\n  };\n  const addAnimation = (animationToAdd) => {\n    if (animationToAdd != null) {\n      if (Array.isArray(animationToAdd)) {\n        for (const animation of animationToAdd) {\n          animation.parent(ani);\n          childAnimations.push(animation);\n        }\n      }\n      else {\n        animationToAdd.parent(ani);\n        childAnimations.push(animationToAdd);\n      }\n    }\n    return ani;\n  };\n  const keyframes = (keyframeValues) => {\n    _keyframes = keyframeValues;\n    return ani;\n  };\n  /**\n   * Run all \"before\" animation hooks.\n   */\n  const beforeAnimation = () => {\n    // Runs all before read callbacks\n    _beforeAddReadFunctions.forEach(callback => callback());\n    // Runs all before write callbacks\n    _beforeAddWriteFunctions.forEach(callback => callback());\n    // Updates styles and classes before animation runs\n    const addClasses = beforeAddClasses;\n    const removeClasses = beforeRemoveClasses;\n    const styles = beforeStylesValue;\n    elements.forEach(el => {\n      const elementClassList = el.classList;\n      addClasses.forEach(c => elementClassList.add(c));\n      removeClasses.forEach(c => elementClassList.remove(c));\n      for (const property in styles) {\n        if (styles.hasOwnProperty(property)) {\n          setStyleProperty(el, property, styles[property]);\n        }\n      }\n    });\n  };\n  /**\n   * Run all \"after\" animation hooks.\n   */\n  const afterAnimation = () => {\n    clearCSSAnimationsTimeout();\n    // Runs all after read callbacks\n    _afterAddReadFunctions.forEach(callback => callback());\n    // Runs all after write callbacks\n    _afterAddWriteFunctions.forEach(callback => callback());\n    // Updates styles and classes before animation ends\n    const currentStep = willComplete ? 1 : 0;\n    const addClasses = afterAddClasses;\n    const removeClasses = afterRemoveClasses;\n    const styles = afterStylesValue;\n    elements.forEach(el => {\n      const elementClassList = el.classList;\n      addClasses.forEach(c => elementClassList.add(c));\n      removeClasses.forEach(c => elementClassList.remove(c));\n      for (const property in styles) {\n        if (styles.hasOwnProperty(property)) {\n          setStyleProperty(el, property, styles[property]);\n        }\n      }\n    });\n    onFinishCallbacks.forEach(onFinishCallback => {\n      return onFinishCallback.c(currentStep, ani);\n    });\n    onFinishOneTimeCallbacks.forEach(onFinishCallback => {\n      return onFinishCallback.c(currentStep, ani);\n    });\n    onFinishOneTimeCallbacks.length = 0;\n    shouldCalculateNumAnimations = true;\n    if (willComplete) {\n      finished = true;\n    }\n    willComplete = true;\n  };\n  const animationFinish = () => {\n    if (numAnimationsRunning === 0) {\n      return;\n    }\n    numAnimationsRunning--;\n    if (numAnimationsRunning === 0) {\n      afterAnimation();\n      if (parentAnimation) {\n        parentAnimation.animationFinish();\n      }\n    }\n  };\n  const initializeCSSAnimation = (toggleAnimationName = true) => {\n    cleanUpStyleSheets();\n    const processedKeyframes = processKeyframes(_keyframes);\n    elements.forEach(element => {\n      if (processedKeyframes.length > 0) {\n        const keyframeRules = generateKeyframeRules(processedKeyframes);\n        keyframeName = (animationId !== undefined) ? animationId : generateKeyframeName(keyframeRules);\n        const stylesheet = createKeyframeStylesheet(keyframeName, keyframeRules, element);\n        stylesheets.push(stylesheet);\n        setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n        setStyleProperty(element, 'animation-timing-function', getEasing());\n        setStyleProperty(element, 'animation-delay', `${getDelay()}ms`);\n        setStyleProperty(element, 'animation-fill-mode', getFill());\n        setStyleProperty(element, 'animation-direction', getDirection());\n        const iterationsCount = (getIterations() === Infinity)\n          ? 'infinite'\n          : getIterations().toString();\n        setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n        setStyleProperty(element, 'animation-play-state', 'paused');\n        if (toggleAnimationName) {\n          setStyleProperty(element, 'animation-name', `${stylesheet.id}-alt`);\n        }\n        raf(() => {\n          setStyleProperty(element, 'animation-name', stylesheet.id || null);\n        });\n      }\n    });\n  };\n  const initializeWebAnimation = () => {\n    elements.forEach(element => {\n      const animation = element.animate(_keyframes, {\n        id,\n        delay: getDelay(),\n        duration: getDuration(),\n        easing: getEasing(),\n        iterations: getIterations(),\n        fill: getFill(),\n        direction: getDirection()\n      });\n      animation.pause();\n      webAnimations.push(animation);\n    });\n    if (webAnimations.length > 0) {\n      webAnimations[0].onfinish = () => {\n        animationFinish();\n      };\n    }\n  };\n  const initializeAnimation = (toggleAnimationName = true) => {\n    beforeAnimation();\n    if (_keyframes.length > 0) {\n      if (supportsWebAnimations) {\n        initializeWebAnimation();\n      }\n      else {\n        initializeCSSAnimation(toggleAnimationName);\n      }\n    }\n    initialized = true;\n  };\n  const setAnimationStep = (step) => {\n    step = Math.min(Math.max(step, 0), 0.9999);\n    if (supportsWebAnimations) {\n      webAnimations.forEach(animation => {\n        animation.currentTime = animation.effect.getComputedTiming().delay + (getDuration() * step);\n        animation.pause();\n      });\n    }\n    else {\n      const animationDuration = `-${getDuration() * step}ms`;\n      elements.forEach(element => {\n        if (_keyframes.length > 0) {\n          setStyleProperty(element, 'animation-delay', animationDuration);\n          setStyleProperty(element, 'animation-play-state', 'paused');\n        }\n      });\n    }\n  };\n  const updateWebAnimation = (step) => {\n    webAnimations.forEach(animation => {\n      animation.effect.updateTiming({\n        delay: getDelay(),\n        duration: getDuration(),\n        easing: getEasing(),\n        iterations: getIterations(),\n        fill: getFill(),\n        direction: getDirection()\n      });\n    });\n    if (step !== undefined) {\n      setAnimationStep(step);\n    }\n  };\n  const updateCSSAnimation = (toggleAnimationName = true, step) => {\n    raf(() => {\n      elements.forEach(element => {\n        setStyleProperty(element, 'animation-name', keyframeName || null);\n        setStyleProperty(element, 'animation-duration', `${getDuration()}ms`);\n        setStyleProperty(element, 'animation-timing-function', getEasing());\n        setStyleProperty(element, 'animation-delay', (step !== undefined) ? `-${step * getDuration()}ms` : `${getDelay()}ms`);\n        setStyleProperty(element, 'animation-fill-mode', getFill() || null);\n        setStyleProperty(element, 'animation-direction', getDirection() || null);\n        const iterationsCount = (getIterations() === Infinity)\n          ? 'infinite'\n          : getIterations().toString();\n        setStyleProperty(element, 'animation-iteration-count', iterationsCount);\n        if (toggleAnimationName) {\n          setStyleProperty(element, 'animation-name', `${keyframeName}-alt`);\n        }\n        raf(() => {\n          setStyleProperty(element, 'animation-name', keyframeName || null);\n        });\n      });\n    });\n  };\n  const update = (deep = false, toggleAnimationName = true, step) => {\n    if (deep) {\n      childAnimations.forEach(animation => {\n        animation.update(deep, toggleAnimationName, step);\n      });\n    }\n    if (supportsWebAnimations) {\n      updateWebAnimation(step);\n    }\n    else {\n      updateCSSAnimation(toggleAnimationName, step);\n    }\n    return ani;\n  };\n  const progressStart = (forceLinearEasing = false, step) => {\n    childAnimations.forEach(animation => {\n      animation.progressStart(forceLinearEasing, step);\n    });\n    pauseAnimation();\n    shouldForceLinearEasing = forceLinearEasing;\n    if (!initialized) {\n      initializeAnimation();\n    }\n    else {\n      update(false, true, step);\n    }\n    return ani;\n  };\n  const progressStep = (step) => {\n    childAnimations.forEach(animation => {\n      animation.progressStep(step);\n    });\n    setAnimationStep(step);\n    return ani;\n  };\n  const progressEnd = (playTo, step, dur) => {\n    shouldForceLinearEasing = false;\n    childAnimations.forEach(animation => {\n      animation.progressEnd(playTo, step, dur);\n    });\n    if (dur !== undefined) {\n      forceDurationValue = dur;\n    }\n    finished = false;\n    // tslint:disable-next-line: strict-boolean-conditions\n    willComplete = true;\n    if (playTo === 0) {\n      forceDirectionValue = (getDirection() === 'reverse') ? 'normal' : 'reverse';\n      if (forceDirectionValue === 'reverse') {\n        willComplete = false;\n      }\n      if (supportsWebAnimations) {\n        update();\n        setAnimationStep(1 - step);\n      }\n      else {\n        forceDelayValue = ((1 - step) * getDuration()) * -1;\n        update(false, false);\n      }\n    }\n    else if (playTo === 1) {\n      if (supportsWebAnimations) {\n        update();\n        setAnimationStep(step);\n      }\n      else {\n        forceDelayValue = (step * getDuration()) * -1;\n        update(false, false);\n      }\n    }\n    if (playTo !== undefined) {\n      onFinish(() => {\n        forceDurationValue = undefined;\n        forceDirectionValue = undefined;\n        forceDelayValue = undefined;\n      }, {\n        oneTimeCallback: true\n      });\n      if (!parentAnimation) {\n        play();\n      }\n    }\n    return ani;\n  };\n  const pauseAnimation = () => {\n    if (initialized) {\n      if (supportsWebAnimations) {\n        webAnimations.forEach(animation => {\n          animation.pause();\n        });\n      }\n      else {\n        elements.forEach(element => {\n          setStyleProperty(element, 'animation-play-state', 'paused');\n        });\n      }\n    }\n  };\n  const pause = () => {\n    childAnimations.forEach(animation => {\n      animation.pause();\n    });\n    pauseAnimation();\n    return ani;\n  };\n  const onAnimationEndFallback = () => {\n    cssAnimationsTimerFallback = undefined;\n    animationFinish();\n  };\n  const clearCSSAnimationsTimeout = () => {\n    if (cssAnimationsTimerFallback) {\n      clearTimeout(cssAnimationsTimerFallback);\n    }\n  };\n  const playCSSAnimations = () => {\n    clearCSSAnimationsTimeout();\n    raf(() => {\n      elements.forEach(element => {\n        if (_keyframes.length > 0) {\n          setStyleProperty(element, 'animation-play-state', 'running');\n        }\n      });\n    });\n    if (_keyframes.length === 0 || elements.length === 0) {\n      animationFinish();\n    }\n    else {\n      /**\n       * This is a catchall in the event that a CSS Animation did not finish.\n       * The Web Animations API has mechanisms in place for preventing this.\n       * CSS Animations will not fire an `animationend` event\n       * for elements with `display: none`. The Web Animations API\n       * accounts for this, but using raw CSS Animations requires\n       * this workaround.\n       */\n      const animationDelay = getDelay() || 0;\n      const animationDuration = getDuration() || 0;\n      const animationIterations = getIterations() || 1;\n      // No need to set a timeout when animation has infinite iterations\n      if (isFinite(animationIterations)) {\n        cssAnimationsTimerFallback = setTimeout(onAnimationEndFallback, animationDelay + (animationDuration * animationIterations) + ANIMATION_END_FALLBACK_PADDING_MS);\n      }\n      animationEnd(elements[0], () => {\n        clearCSSAnimationsTimeout();\n        /**\n         * Ensure that clean up\n         * is always done a frame\n         * before the onFinish handlers\n         * are fired. Otherwise, there\n         * may be flickering if a new\n         * animation is started on the same\n         * element too quickly\n         *\n         * TODO: Is there a cleaner way to do this?\n         */\n        raf(() => {\n          clearCSSAnimationPlayState();\n          raf(animationFinish);\n        });\n      });\n    }\n  };\n  const clearCSSAnimationPlayState = () => {\n    elements.forEach(element => {\n      removeStyleProperty(element, 'animation-duration');\n      removeStyleProperty(element, 'animation-delay');\n      removeStyleProperty(element, 'animation-play-state');\n    });\n  };\n  const playWebAnimations = () => {\n    webAnimations.forEach(animation => {\n      animation.play();\n    });\n    if (_keyframes.length === 0 || elements.length === 0) {\n      animationFinish();\n    }\n  };\n  const resetAnimation = () => {\n    if (supportsWebAnimations) {\n      setAnimationStep(0);\n      updateWebAnimation();\n    }\n    else {\n      updateCSSAnimation();\n    }\n  };\n  const play = (opts) => {\n    return new Promise(resolve => {\n      if (opts && opts.sync) {\n        shouldForceSyncPlayback = true;\n        onFinish(() => shouldForceSyncPlayback = false, { oneTimeCallback: true });\n      }\n      if (!initialized) {\n        initializeAnimation();\n      }\n      if (finished) {\n        resetAnimation();\n        finished = false;\n      }\n      if (shouldCalculateNumAnimations) {\n        numAnimationsRunning = childAnimations.length + 1;\n        shouldCalculateNumAnimations = false;\n      }\n      onFinish(() => resolve(), { oneTimeCallback: true });\n      childAnimations.forEach(animation => {\n        animation.play();\n      });\n      if (supportsWebAnimations) {\n        playWebAnimations();\n      }\n      else {\n        playCSSAnimations();\n      }\n    });\n  };\n  const stop = () => {\n    childAnimations.forEach(animation => {\n      animation.stop();\n    });\n    if (initialized) {\n      cleanUpElements();\n      initialized = false;\n    }\n    resetFlags();\n  };\n  const from = (property, value) => {\n    const firstFrame = _keyframes[0];\n    if (firstFrame !== undefined && (firstFrame.offset === undefined || firstFrame.offset === 0)) {\n      firstFrame[property] = value;\n    }\n    else {\n      _keyframes = [\n        { offset: 0, [property]: value },\n        ..._keyframes\n      ];\n    }\n    return ani;\n  };\n  const to = (property, value) => {\n    const lastFrame = _keyframes[_keyframes.length - 1];\n    if (lastFrame !== undefined && (lastFrame.offset === undefined || lastFrame.offset === 1)) {\n      lastFrame[property] = value;\n    }\n    else {\n      _keyframes = [\n        ..._keyframes,\n        { offset: 1, [property]: value }\n      ];\n    }\n    return ani;\n  };\n  const fromTo = (property, fromValue, toValue) => {\n    return from(property, fromValue).to(property, toValue);\n  };\n  return ani = {\n    parentAnimation,\n    elements,\n    childAnimations,\n    id,\n    animationFinish,\n    from,\n    to,\n    fromTo,\n    parent,\n    play,\n    pause,\n    stop,\n    destroy,\n    keyframes,\n    addAnimation,\n    addElement,\n    update,\n    fill,\n    direction,\n    iterations,\n    duration,\n    easing,\n    delay,\n    getWebAnimations,\n    getKeyframes,\n    getFill,\n    getDirection,\n    getDelay,\n    getIterations,\n    getEasing,\n    getDuration,\n    afterAddRead,\n    afterAddWrite,\n    afterClearStyles,\n    afterStyles,\n    afterRemoveClass,\n    afterAddClass,\n    beforeAddRead,\n    beforeAddWrite,\n    beforeClearStyles,\n    beforeStyles,\n    beforeRemoveClass,\n    beforeAddClass,\n    onFinish,\n    progressStart,\n    progressStep,\n    progressEnd\n  };\n};\n\nexport { createAnimation as c };\n"]},"metadata":{},"sourceType":"module"}