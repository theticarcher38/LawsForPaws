{"ast":null,"code":"const addEventListener = (el, eventName, callback, opts) => {\n  if (typeof window !== 'undefined') {\n    const win = window;\n    const config = win && win.Ionic && win.Ionic.config;\n\n    if (config) {\n      const ael = config.get('_ael');\n\n      if (ael) {\n        return ael(el, eventName, callback, opts);\n      } else if (config._ael) {\n        return config._ael(el, eventName, callback, opts);\n      }\n    }\n  }\n\n  return el.addEventListener(eventName, callback, opts);\n};\n\nconst removeEventListener = (el, eventName, callback, opts) => {\n  if (typeof window !== 'undefined') {\n    const win = window;\n    const config = win && win.Ionic && win.Ionic.config;\n\n    if (config) {\n      const rel = config.get('_rel');\n\n      if (rel) {\n        return rel(el, eventName, callback, opts);\n      } else if (config._rel) {\n        return config._rel(el, eventName, callback, opts);\n      }\n    }\n  }\n\n  return el.removeEventListener(eventName, callback, opts);\n};\n/**\n * Gets the root context of a shadow dom element\n * On newer browsers this will be the shadowRoot,\n * but for older browser this may just be the\n * element itself.\n *\n * Useful for whenever you need to explicitly\n * do \"myElement.shadowRoot!.querySelector(...)\".\n */\n\n\nconst getElementRoot = (el, fallback = el) => {\n  return el.shadowRoot || fallback;\n};\n/**\n * Patched version of requestAnimationFrame that avoids ngzone\n * Use only when you know ngzone should not run\n */\n\n\nconst raf = h => {\n  if (typeof __zone_symbol__requestAnimationFrame === 'function') {\n    return __zone_symbol__requestAnimationFrame(h);\n  }\n\n  if (typeof requestAnimationFrame === 'function') {\n    return requestAnimationFrame(h);\n  }\n\n  return setTimeout(h);\n};\n\nconst hasShadowDom = el => {\n  return !!el.shadowRoot && !!el.attachShadow;\n};\n\nconst findItemLabel = componentEl => {\n  const itemEl = componentEl.closest('ion-item');\n\n  if (itemEl) {\n    return itemEl.querySelector('ion-label');\n  }\n\n  return null;\n};\n\nconst renderHiddenInput = (always, container, name, value, disabled) => {\n  if (always || hasShadowDom(container)) {\n    let input = container.querySelector('input.aux-input');\n\n    if (!input) {\n      input = container.ownerDocument.createElement('input');\n      input.type = 'hidden';\n      input.classList.add('aux-input');\n      container.appendChild(input);\n    }\n\n    input.disabled = disabled;\n    input.name = name;\n    input.value = value || '';\n  }\n};\n\nconst clamp = (min, n, max) => {\n  return Math.max(min, Math.min(n, max));\n};\n\nconst assert = (actual, reason) => {\n  if (!actual) {\n    const message = 'ASSERT: ' + reason;\n    console.error(message);\n    debugger; // tslint:disable-line\n\n    throw new Error(message);\n  }\n};\n\nconst now = ev => {\n  return ev.timeStamp || Date.now();\n};\n\nconst pointerCoord = ev => {\n  // get X coordinates for either a mouse click\n  // or a touch depending on the given event\n  if (ev) {\n    const changedTouches = ev.changedTouches;\n\n    if (changedTouches && changedTouches.length > 0) {\n      const touch = changedTouches[0];\n      return {\n        x: touch.clientX,\n        y: touch.clientY\n      };\n    }\n\n    if (ev.pageX !== undefined) {\n      return {\n        x: ev.pageX,\n        y: ev.pageY\n      };\n    }\n  }\n\n  return {\n    x: 0,\n    y: 0\n  };\n};\n/**\n * @hidden\n * Given a side, return if it should be on the end\n * based on the value of dir\n * @param side the side\n * @param isRTL whether the application dir is rtl\n */\n\n\nconst isEndSide = side => {\n  const isRTL = document.dir === 'rtl';\n\n  switch (side) {\n    case 'start':\n      return isRTL;\n\n    case 'end':\n      return !isRTL;\n\n    default:\n      throw new Error(`\"${side}\" is not a valid value for [side]. Use \"start\" or \"end\" instead.`);\n  }\n};\n\nconst debounceEvent = (event, wait) => {\n  const original = event._original || event;\n  return {\n    _original: event,\n    emit: debounce(original.emit.bind(original), wait)\n  };\n};\n\nconst debounce = (func, wait = 0) => {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(func, wait, ...args);\n  };\n};\n\nexport { addEventListener as a, removeEventListener as b, renderHiddenInput as c, debounceEvent as d, clamp as e, findItemLabel as f, getElementRoot as g, hasShadowDom as h, assert as i, isEndSide as j, debounce as k, now as n, pointerCoord as p, raf as r };","map":{"version":3,"sources":["/media/theticarcher38/Volume/Code/LawsForPaws/LawsForPawsApp/node_modules/@ionic/core/dist/esm/helpers-002e4980.js"],"names":["addEventListener","el","eventName","callback","opts","window","win","config","Ionic","ael","get","_ael","removeEventListener","rel","_rel","getElementRoot","fallback","shadowRoot","raf","h","__zone_symbol__requestAnimationFrame","requestAnimationFrame","setTimeout","hasShadowDom","attachShadow","findItemLabel","componentEl","itemEl","closest","querySelector","renderHiddenInput","always","container","name","value","disabled","input","ownerDocument","createElement","type","classList","add","appendChild","clamp","min","n","max","Math","assert","actual","reason","message","console","error","Error","now","ev","timeStamp","Date","pointerCoord","changedTouches","length","touch","x","clientX","y","clientY","pageX","undefined","pageY","isEndSide","side","isRTL","document","dir","debounceEvent","event","wait","original","_original","emit","debounce","bind","func","timer","args","clearTimeout","a","b","c","d","e","f","g","i","j","k","p","r"],"mappings":"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","sourcesContent":["const addEventListener = (el, eventName, callback, opts) => {\n  if (typeof window !== 'undefined') {\n    const win = window;\n    const config = win && win.Ionic && win.Ionic.config;\n    if (config) {\n      const ael = config.get('_ael');\n      if (ael) {\n        return ael(el, eventName, callback, opts);\n      }\n      else if (config._ael) {\n        return config._ael(el, eventName, callback, opts);\n      }\n    }\n  }\n  return el.addEventListener(eventName, callback, opts);\n};\nconst removeEventListener = (el, eventName, callback, opts) => {\n  if (typeof window !== 'undefined') {\n    const win = window;\n    const config = win && win.Ionic && win.Ionic.config;\n    if (config) {\n      const rel = config.get('_rel');\n      if (rel) {\n        return rel(el, eventName, callback, opts);\n      }\n      else if (config._rel) {\n        return config._rel(el, eventName, callback, opts);\n      }\n    }\n  }\n  return el.removeEventListener(eventName, callback, opts);\n};\n/**\n * Gets the root context of a shadow dom element\n * On newer browsers this will be the shadowRoot,\n * but for older browser this may just be the\n * element itself.\n *\n * Useful for whenever you need to explicitly\n * do \"myElement.shadowRoot!.querySelector(...)\".\n */\nconst getElementRoot = (el, fallback = el) => {\n  return el.shadowRoot || fallback;\n};\n/**\n * Patched version of requestAnimationFrame that avoids ngzone\n * Use only when you know ngzone should not run\n */\nconst raf = (h) => {\n  if (typeof __zone_symbol__requestAnimationFrame === 'function') {\n    return __zone_symbol__requestAnimationFrame(h);\n  }\n  if (typeof requestAnimationFrame === 'function') {\n    return requestAnimationFrame(h);\n  }\n  return setTimeout(h);\n};\nconst hasShadowDom = (el) => {\n  return !!el.shadowRoot && !!el.attachShadow;\n};\nconst findItemLabel = (componentEl) => {\n  const itemEl = componentEl.closest('ion-item');\n  if (itemEl) {\n    return itemEl.querySelector('ion-label');\n  }\n  return null;\n};\nconst renderHiddenInput = (always, container, name, value, disabled) => {\n  if (always || hasShadowDom(container)) {\n    let input = container.querySelector('input.aux-input');\n    if (!input) {\n      input = container.ownerDocument.createElement('input');\n      input.type = 'hidden';\n      input.classList.add('aux-input');\n      container.appendChild(input);\n    }\n    input.disabled = disabled;\n    input.name = name;\n    input.value = value || '';\n  }\n};\nconst clamp = (min, n, max) => {\n  return Math.max(min, Math.min(n, max));\n};\nconst assert = (actual, reason) => {\n  if (!actual) {\n    const message = 'ASSERT: ' + reason;\n    console.error(message);\n    debugger; // tslint:disable-line\n    throw new Error(message);\n  }\n};\nconst now = (ev) => {\n  return ev.timeStamp || Date.now();\n};\nconst pointerCoord = (ev) => {\n  // get X coordinates for either a mouse click\n  // or a touch depending on the given event\n  if (ev) {\n    const changedTouches = ev.changedTouches;\n    if (changedTouches && changedTouches.length > 0) {\n      const touch = changedTouches[0];\n      return { x: touch.clientX, y: touch.clientY };\n    }\n    if (ev.pageX !== undefined) {\n      return { x: ev.pageX, y: ev.pageY };\n    }\n  }\n  return { x: 0, y: 0 };\n};\n/**\n * @hidden\n * Given a side, return if it should be on the end\n * based on the value of dir\n * @param side the side\n * @param isRTL whether the application dir is rtl\n */\nconst isEndSide = (side) => {\n  const isRTL = document.dir === 'rtl';\n  switch (side) {\n    case 'start': return isRTL;\n    case 'end': return !isRTL;\n    default:\n      throw new Error(`\"${side}\" is not a valid value for [side]. Use \"start\" or \"end\" instead.`);\n  }\n};\nconst debounceEvent = (event, wait) => {\n  const original = event._original || event;\n  return {\n    _original: event,\n    emit: debounce(original.emit.bind(original), wait)\n  };\n};\nconst debounce = (func, wait = 0) => {\n  let timer;\n  return (...args) => {\n    clearTimeout(timer);\n    timer = setTimeout(func, wait, ...args);\n  };\n};\n\nexport { addEventListener as a, removeEventListener as b, renderHiddenInput as c, debounceEvent as d, clamp as e, findItemLabel as f, getElementRoot as g, hasShadowDom as h, assert as i, isEndSide as j, debounce as k, now as n, pointerCoord as p, raf as r };\n"]},"metadata":{},"sourceType":"module"}