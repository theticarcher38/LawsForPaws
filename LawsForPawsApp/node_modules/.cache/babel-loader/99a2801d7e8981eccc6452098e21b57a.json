{"ast":null,"code":"import { c as writeTask, r as registerInstance, e as createEvent, f as readTask, h, i as getElement, H as Host } from './index-e806d1f6.js';\nimport { i as isPlatform, b as getIonMode, c as config } from './ionic-global-9d5c8ee3.js';\nimport { e as clamp, g as getElementRoot, r as raf } from './helpers-002e4980.js';\nimport { c as createAnimation } from './animation-ede2d71c.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-eea9a7a9.js';\nimport { s as sanitizeDOMString } from './index-9e3fe806.js';\nimport { d as hapticImpact } from './haptic-27b3f981.js';\nimport { S as SPINNERS } from './spinner-configs-cd7845af.js';\n\nconst getRefresherAnimationType = contentEl => {\n  const previousSibling = contentEl.previousElementSibling;\n  const hasHeader = previousSibling !== null && previousSibling.tagName === 'ION-HEADER';\n  return hasHeader ? 'translate' : 'scale';\n};\n\nconst createPullingAnimation = (type, pullingSpinner) => {\n  return type === 'scale' ? createScaleAnimation(pullingSpinner) : createTranslateAnimation(pullingSpinner);\n};\n\nconst createBaseAnimation = pullingRefresherIcon => {\n  const spinner = pullingRefresherIcon.querySelector('ion-spinner');\n  const circle = spinner.shadowRoot.querySelector('circle');\n  const spinnerArrowContainer = pullingRefresherIcon.querySelector('.spinner-arrow-container');\n  const arrowContainer = pullingRefresherIcon.querySelector('.arrow-container');\n  const arrow = arrowContainer ? arrowContainer.querySelector('ion-icon') : null;\n  const baseAnimation = createAnimation().duration(1000).easing('ease-out');\n  const spinnerArrowContainerAnimation = createAnimation().addElement(spinnerArrowContainer).keyframes([{\n    offset: 0,\n    opacity: '0.3'\n  }, {\n    offset: 0.45,\n    opacity: '0.3'\n  }, {\n    offset: 0.55,\n    opacity: '1'\n  }, {\n    offset: 1,\n    opacity: '1'\n  }]);\n  const circleInnerAnimation = createAnimation().addElement(circle).keyframes([{\n    offset: 0,\n    strokeDasharray: '1px, 200px'\n  }, {\n    offset: 0.20,\n    strokeDasharray: '1px, 200px'\n  }, {\n    offset: 0.55,\n    strokeDasharray: '100px, 200px'\n  }, {\n    offset: 1,\n    strokeDasharray: '100px, 200px'\n  }]);\n  const circleOuterAnimation = createAnimation().addElement(spinner).keyframes([{\n    offset: 0,\n    transform: 'rotate(-90deg)'\n  }, {\n    offset: 1,\n    transform: 'rotate(210deg)'\n  }]);\n  /**\n   * Only add arrow animation if present\n   * this allows users to customize the spinners\n   * without errors being thrown\n   */\n\n  if (arrowContainer && arrow) {\n    const arrowContainerAnimation = createAnimation().addElement(arrowContainer).keyframes([{\n      offset: 0,\n      transform: 'rotate(0deg)'\n    }, {\n      offset: 0.30,\n      transform: 'rotate(0deg)'\n    }, {\n      offset: 0.55,\n      transform: 'rotate(280deg)'\n    }, {\n      offset: 1,\n      transform: 'rotate(400deg)'\n    }]);\n    const arrowAnimation = createAnimation().addElement(arrow).keyframes([{\n      offset: 0,\n      transform: 'translateX(2px) scale(0)'\n    }, {\n      offset: 0.30,\n      transform: 'translateX(2px) scale(0)'\n    }, {\n      offset: 0.55,\n      transform: 'translateX(-1.5px) scale(1)'\n    }, {\n      offset: 1,\n      transform: 'translateX(-1.5px) scale(1)'\n    }]);\n    baseAnimation.addAnimation([arrowContainerAnimation, arrowAnimation]);\n  }\n\n  return baseAnimation.addAnimation([spinnerArrowContainerAnimation, circleInnerAnimation, circleOuterAnimation]);\n};\n\nconst createScaleAnimation = pullingRefresherIcon => {\n  const height = pullingRefresherIcon.clientHeight;\n  const spinnerAnimation = createAnimation().addElement(pullingRefresherIcon).keyframes([{\n    offset: 0,\n    transform: `scale(0) translateY(-${height + 20}px)`\n  }, {\n    offset: 1,\n    transform: 'scale(1) translateY(100px)'\n  }]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\n\nconst createTranslateAnimation = pullingRefresherIcon => {\n  const height = pullingRefresherIcon.clientHeight;\n  const spinnerAnimation = createAnimation().addElement(pullingRefresherIcon).keyframes([{\n    offset: 0,\n    transform: `translateY(-${height + 20}px)`\n  }, {\n    offset: 1,\n    transform: 'translateY(100px)'\n  }]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\n\nconst createSnapBackAnimation = pullingRefresherIcon => {\n  return createAnimation().duration(125).addElement(pullingRefresherIcon).fromTo('transform', 'translateY(var(--ion-pulling-refresher-translate, 100px))', 'translateY(0px)');\n}; // iOS Native Refresher\n// -----------------------------\n\n\nconst setSpinnerOpacity = (spinner, opacity) => {\n  spinner.style.setProperty('opacity', opacity.toString());\n};\n\nconst handleScrollWhilePulling = (spinner, ticks, opacity, currentTickToShow) => {\n  writeTask(() => {\n    setSpinnerOpacity(spinner, opacity);\n    ticks.forEach((el, i) => el.style.setProperty('opacity', i <= currentTickToShow ? '0.99' : '0'));\n  });\n};\n\nconst handleScrollWhileRefreshing = (spinner, lastVelocityY) => {\n  writeTask(() => {\n    // If user pulls down quickly, the spinner should spin faster\n    spinner.style.setProperty('--refreshing-rotation-duration', lastVelocityY >= 1.0 ? '0.5s' : '2s');\n    spinner.style.setProperty('opacity', '1');\n  });\n};\n\nconst translateElement = (el, value) => {\n  if (!el) {\n    return Promise.resolve();\n  }\n\n  const trans = transitionEndAsync(el, 200);\n  writeTask(() => {\n    el.style.setProperty('transition', '0.2s all ease-out');\n\n    if (value === undefined) {\n      el.style.removeProperty('transform');\n    } else {\n      el.style.setProperty('transform', `translate3d(0px, ${value}, 0px)`);\n    }\n  });\n  return trans;\n}; // Utils\n// -----------------------------\n\n\nconst shouldUseNativeRefresher = (referenceEl, mode) => {\n  const pullingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n  const refreshingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n  return pullingSpinner !== null && refreshingSpinner !== null && (mode === 'ios' && isPlatform('mobile') && referenceEl.style.webkitOverflowScrolling !== undefined || mode === 'md');\n};\n\nconst transitionEndAsync = (el, expectedDuration = 0) => {\n  return new Promise(resolve => {\n    transitionEnd(el, expectedDuration, resolve);\n  });\n};\n\nconst transitionEnd = (el, expectedDuration = 0, callback) => {\n  let unRegTrans;\n  let animationTimeout;\n  const opts = {\n    passive: true\n  };\n  const ANIMATION_FALLBACK_TIMEOUT = 500;\n\n  const unregister = () => {\n    if (unRegTrans) {\n      unRegTrans();\n    }\n  };\n\n  const onTransitionEnd = ev => {\n    if (ev === undefined || el === ev.target) {\n      unregister();\n      callback(ev);\n    }\n  };\n\n  if (el) {\n    el.addEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n    el.addEventListener('transitionend', onTransitionEnd, opts);\n    animationTimeout = setTimeout(onTransitionEnd, expectedDuration + ANIMATION_FALLBACK_TIMEOUT);\n\n    unRegTrans = () => {\n      if (animationTimeout) {\n        clearTimeout(animationTimeout);\n        animationTimeout = undefined;\n      }\n\n      el.removeEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n      el.removeEventListener('transitionend', onTransitionEnd, opts);\n    };\n  }\n\n  return unregister;\n};\n\nconst refresherIosCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-ios .refresher-pulling-icon,.refresher-ios .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-ios .refresher-pulling-text,.refresher-ios .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-lines-ios line,.refresher-ios .refresher-refreshing .spinner-lines-small-ios line,.refresher-ios .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-bubbles circle,.refresher-ios .refresher-refreshing .spinner-circles circle,.refresher-ios .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.refresher-native .refresher-refreshing ion-spinner{--refreshing-rotation-duration:2s;display:none;-webkit-animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards;animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards}.refresher-native .refresher-refreshing{display:none;-webkit-animation:250ms linear refresher-pop forwards;animation:250ms linear refresher-pop forwards}.refresher-native.refresher-refreshing .refresher-pulling ion-spinner,.refresher-native.refresher-completing .refresher-pulling ion-spinner{display:none}.refresher-native.refresher-refreshing .refresher-refreshing ion-spinner,.refresher-native.refresher-completing .refresher-refreshing ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-pulling ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-refreshing ion-spinner{display:none}@-webkit-keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}\";\nconst refresherMdCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-md .refresher-pulling-icon,.refresher-md .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-md .refresher-pulling-text,.refresher-md .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-lines-md line,.refresher-md .refresher-refreshing .spinner-lines-small-md line,.refresher-md .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-bubbles circle,.refresher-md .refresher-refreshing .spinner-circles circle,.refresher-md .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:24px;height:24px;color:var(--ion-color-primary, #3880ff)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native .spinner-arrow-container{display:inherit}ion-refresher.refresher-native .arrow-container{display:block;position:absolute;width:24px;height:24px}ion-refresher.refresher-native .arrow-container ion-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;left:0;right:0;bottom:-4px;position:absolute;color:var(--ion-color-primary, #3880ff);font-size:12px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .arrow-container ion-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native.refresher-pulling ion-refresher-content .refresher-pulling,ion-refresher.refresher-native.refresher-ready ion-refresher-content .refresher-pulling{display:-ms-flexbox;display:flex}ion-refresher.refresher-native.refresher-refreshing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-cancelling ion-refresher-content .refresher-refreshing{display:-ms-flexbox;display:flex}ion-refresher.refresher-native .refresher-pulling-icon{-webkit-transform:translateY(calc(-100% - 10px));transform:translateY(calc(-100% - 10px))}ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;border-radius:100%;padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;display:-ms-flexbox;display:flex;border:1px solid #ececec;background:white;-webkit-box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1);box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\nconst Refresher = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRefresh = createEvent(this, \"ionRefresh\", 7);\n    this.ionPull = createEvent(this, \"ionPull\", 7);\n    this.ionStart = createEvent(this, \"ionStart\", 7);\n    this.appliedStyles = false;\n    this.didStart = false;\n    this.progress = 0;\n    this.pointerDown = false;\n    this.needsCompletion = false;\n    this.didRefresh = false;\n    this.lastVelocityY = 0;\n    this.animations = [];\n    this.nativeRefresher = false;\n    /**\n     * The current state which the refresher is in. The refresher's states include:\n     *\n     * - `inactive` - The refresher is not being pulled down or refreshing and is currently hidden.\n     * - `pulling` - The user is actively pulling down the refresher, but has not reached the point yet that if the user lets go, it'll refresh.\n     * - `cancelling` - The user pulled down the refresher and let go, but did not pull down far enough to kick off the `refreshing` state. After letting go, the refresher is in the `cancelling` state while it is closing, and will go back to the `inactive` state once closed.\n     * - `ready` - The user has pulled down the refresher far enough that if they let go, it'll begin the `refreshing` state.\n     * - `refreshing` - The refresher is actively waiting on the async operation to end. Once the refresh handler calls `complete()` it will begin the `completing` state.\n     * - `completing` - The `refreshing` state has finished and the refresher is in the way of closing itself. Once closed, the refresher will go back to the `inactive` state.\n     */\n\n    this.state = 1\n    /* Inactive */\n    ;\n    /**\n     * The minimum distance the user must pull down until the\n     * refresher will go into the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    this.pullMin = 60;\n    /**\n     * The maximum distance of the pull until the refresher\n     * will automatically go into the `refreshing` state.\n     * Defaults to the result of `pullMin + 60`.\n     * Does not apply when  the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    this.pullMax = this.pullMin + 60;\n    /**\n     * Time it takes to close the refresher.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    this.closeDuration = '280ms';\n    /**\n     * Time it takes the refresher to to snap back to the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    this.snapbackDuration = '280ms';\n    /**\n     * How much to multiply the pull speed by. To slow the pull animation down,\n     * pass a number less than `1`. To speed up the pull, pass a number greater\n     * than `1`. The default value is `1` which is equal to the speed of the cursor.\n     * If a negative value is passed in, the factor will be `1` instead.\n     *\n     * For example: If the value passed is `1.2` and the content is dragged by\n     * `10` pixels, instead of `10` pixels the content will be pulled by `12` pixels\n     * (an increase of 20 percent). If the value passed is `0.8`, the dragged amount\n     * will be `8` pixels, less than the amount the cursor has moved.\n     *\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n\n    this.pullFactor = 1;\n    /**\n     * If `true`, the refresher will be hidden.\n     */\n\n    this.disabled = false;\n  }\n\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n\n  checkNativeRefresher() {\n    const useNativeRefresher = shouldUseNativeRefresher(this.el, getIonMode(this));\n\n    if (useNativeRefresher && !this.nativeRefresher) {\n      const contentEl = this.el.closest('ion-content');\n      this.setupNativeRefresher(contentEl);\n    } else if (!useNativeRefresher) {\n      this.destroyNativeRefresher();\n    }\n  }\n\n  destroyNativeRefresher() {\n    if (this.scrollEl && this.scrollListenerCallback) {\n      this.scrollEl.removeEventListener('scroll', this.scrollListenerCallback);\n      this.scrollListenerCallback = undefined;\n    }\n\n    this.nativeRefresher = false;\n  }\n\n  async resetNativeRefresher(el, state) {\n    this.state = state;\n\n    if (getIonMode(this) === 'ios') {\n      await translateElement(el, undefined);\n    } else {\n      await transitionEndAsync(this.el.querySelector('.refresher-refreshing-icon'), 200);\n    }\n\n    this.didRefresh = false;\n    this.needsCompletion = false;\n    this.pointerDown = false;\n    this.animations.forEach(ani => ani.destroy());\n    this.animations = [];\n    this.progress = 0;\n    this.state = 1\n    /* Inactive */\n    ;\n  }\n\n  async setupiOSNativeRefresher(pullingSpinner, refreshingSpinner) {\n    this.elementToTransform = this.scrollEl;\n    const ticks = pullingSpinner.shadowRoot.querySelectorAll('svg');\n    const MAX_PULL = this.scrollEl.clientHeight * 0.16;\n    const NUM_TICKS = ticks.length;\n    writeTask(() => ticks.forEach(el => el.style.setProperty('animation', 'none')));\n\n    this.scrollListenerCallback = () => {\n      // If pointer is not on screen or refresher is not active, ignore scroll\n      if (!this.pointerDown && this.state === 1\n      /* Inactive */\n      ) {\n          return;\n        }\n\n      readTask(() => {\n        // PTR should only be active when overflow scrolling at the top\n        const scrollTop = this.scrollEl.scrollTop;\n        const refresherHeight = this.el.clientHeight;\n\n        if (scrollTop > 0) {\n          /**\n           * If refresher is refreshing and user tries to scroll\n           * progressively fade refresher out/in\n           */\n          if (this.state === 8\n          /* Refreshing */\n          ) {\n              const ratio = clamp(0, scrollTop / (refresherHeight * 0.5), 1);\n              writeTask(() => setSpinnerOpacity(refreshingSpinner, 1 - ratio));\n              return;\n            }\n\n          writeTask(() => setSpinnerOpacity(pullingSpinner, 0));\n          return;\n        }\n\n        if (this.pointerDown) {\n          if (!this.didStart) {\n            this.didStart = true;\n            this.ionStart.emit();\n          } // emit \"pulling\" on every move\n\n\n          if (this.pointerDown) {\n            this.ionPull.emit();\n          }\n        } // delay showing the next tick marks until user has pulled 30px\n\n\n        const opacity = clamp(0, Math.abs(scrollTop) / refresherHeight, 0.99);\n        const pullAmount = this.progress = clamp(0, (Math.abs(scrollTop) - 30) / MAX_PULL, 1);\n        const currentTickToShow = clamp(0, Math.floor(pullAmount * NUM_TICKS), NUM_TICKS - 1);\n        const shouldShowRefreshingSpinner = this.state === 8\n        /* Refreshing */\n        || currentTickToShow === NUM_TICKS - 1;\n\n        if (shouldShowRefreshingSpinner) {\n          if (this.pointerDown) {\n            handleScrollWhileRefreshing(refreshingSpinner, this.lastVelocityY);\n          }\n\n          if (!this.didRefresh) {\n            this.beginRefresh();\n            this.didRefresh = true;\n            hapticImpact({\n              style: 'light'\n            });\n            /**\n             * Translate the content element otherwise when pointer is removed\n             * from screen the scroll content will bounce back over the refresher\n             */\n\n            if (!this.pointerDown) {\n              translateElement(this.elementToTransform, `${refresherHeight}px`);\n            }\n          }\n        } else {\n          this.state = 2\n          /* Pulling */\n          ;\n          handleScrollWhilePulling(pullingSpinner, ticks, opacity, currentTickToShow);\n        }\n      });\n    };\n\n    this.scrollEl.addEventListener('scroll', this.scrollListenerCallback);\n    this.gesture = (await import('./index-f49d994d.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 10,\n      direction: 'y',\n      threshold: 5,\n      onStart: () => {\n        this.pointerDown = true;\n\n        if (!this.didRefresh) {\n          translateElement(this.elementToTransform, '0px');\n        }\n      },\n      onMove: ev => {\n        this.lastVelocityY = ev.velocityY;\n      },\n      onEnd: () => {\n        this.pointerDown = false;\n        this.didStart = false;\n\n        if (this.needsCompletion) {\n          this.resetNativeRefresher(this.elementToTransform, 32\n          /* Completing */\n          );\n          this.needsCompletion = false;\n        } else if (this.didRefresh) {\n          readTask(() => translateElement(this.elementToTransform, `${this.el.clientHeight}px`));\n        }\n      }\n    });\n    this.disabledChanged();\n  }\n\n  async setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner) {\n    const circle = getElementRoot(pullingSpinner).querySelector('circle');\n    const pullingRefresherIcon = this.el.querySelector('ion-refresher-content .refresher-pulling-icon');\n    const refreshingCircle = getElementRoot(refreshingSpinner).querySelector('circle');\n\n    if (circle !== null && refreshingCircle !== null) {\n      writeTask(() => {\n        circle.style.setProperty('animation', 'none'); // This lines up the animation on the refreshing spinner with the pulling spinner\n\n        refreshingSpinner.style.setProperty('animation-delay', '-655ms');\n        refreshingCircle.style.setProperty('animation-delay', '-655ms');\n      });\n    }\n\n    this.gesture = (await import('./index-f49d994d.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 10,\n      direction: 'y',\n      threshold: 5,\n      canStart: () => this.state !== 8\n      /* Refreshing */\n      && this.state !== 32\n      /* Completing */\n      && this.scrollEl.scrollTop === 0,\n      onStart: ev => {\n        ev.data = {\n          animation: undefined,\n          didStart: false,\n          cancelled: false\n        };\n      },\n      onMove: ev => {\n        if (ev.velocityY < 0 && this.progress === 0 && !ev.data.didStart || ev.data.cancelled) {\n          ev.data.cancelled = true;\n          return;\n        }\n\n        if (!ev.data.didStart) {\n          ev.data.didStart = true;\n          this.state = 2\n          /* Pulling */\n          ;\n          writeTask(() => {\n            const animationType = getRefresherAnimationType(contentEl);\n            const animation = createPullingAnimation(animationType, pullingRefresherIcon);\n            ev.data.animation = animation;\n            this.scrollEl.style.setProperty('--overflow', 'hidden');\n            animation.progressStart(false, 0);\n            this.ionStart.emit();\n            this.animations.push(animation);\n          });\n          return;\n        } // Since we are using an easing curve, slow the gesture tracking down a bit\n\n\n        this.progress = clamp(0, ev.deltaY / 180 * 0.5, 1);\n        ev.data.animation.progressStep(this.progress);\n        this.ionPull.emit();\n      },\n      onEnd: ev => {\n        if (!ev.data.didStart) {\n          return;\n        }\n\n        writeTask(() => this.scrollEl.style.removeProperty('--overflow'));\n\n        if (this.progress <= 0.4) {\n          this.gesture.enable(false);\n          ev.data.animation.progressEnd(0, this.progress, 500).onFinish(() => {\n            this.animations.forEach(ani => ani.destroy());\n            this.animations = [];\n            this.gesture.enable(true);\n            this.state = 1\n            /* Inactive */\n            ;\n          });\n          return;\n        }\n\n        const progress = getTimeGivenProgression([0, 0], [0, 0], [1, 1], [1, 1], this.progress)[0];\n        const snapBackAnimation = createSnapBackAnimation(pullingRefresherIcon);\n        this.animations.push(snapBackAnimation);\n        writeTask(async () => {\n          pullingRefresherIcon.style.setProperty('--ion-pulling-refresher-translate', `${progress * 100}px`);\n          ev.data.animation.progressEnd();\n          await snapBackAnimation.play();\n          this.beginRefresh();\n          ev.data.animation.destroy();\n        });\n      }\n    });\n    this.disabledChanged();\n  }\n\n  async setupNativeRefresher(contentEl) {\n    if (this.scrollListenerCallback || !contentEl || this.nativeRefresher || !this.scrollEl) {\n      return;\n    }\n\n    this.nativeRefresher = true;\n    const pullingSpinner = this.el.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n    const refreshingSpinner = this.el.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n\n    if (getIonMode(this) === 'ios') {\n      this.setupiOSNativeRefresher(pullingSpinner, refreshingSpinner);\n    } else {\n      this.setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner);\n    }\n  }\n\n  componentDidUpdate() {\n    this.checkNativeRefresher();\n  }\n\n  async connectedCallback() {\n    if (this.el.getAttribute('slot') !== 'fixed') {\n      console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\n      return;\n    }\n\n    const contentEl = this.el.closest('ion-content');\n\n    if (!contentEl) {\n      console.error('<ion-refresher> must be used inside an <ion-content>');\n      return;\n    }\n\n    await contentEl.componentOnReady();\n    this.scrollEl = await contentEl.getScrollElement();\n    this.backgroundContentEl = getElementRoot(contentEl).querySelector('#background-content');\n\n    if (shouldUseNativeRefresher(this.el, getIonMode(this))) {\n      this.setupNativeRefresher(contentEl);\n    } else {\n      this.gesture = (await import('./index-f49d994d.js')).createGesture({\n        el: contentEl,\n        gestureName: 'refresher',\n        gesturePriority: 10,\n        direction: 'y',\n        threshold: 20,\n        passive: false,\n        canStart: () => this.canStart(),\n        onStart: () => this.onStart(),\n        onMove: ev => this.onMove(ev),\n        onEnd: () => this.onEnd()\n      });\n      this.disabledChanged();\n    }\n  }\n\n  disconnectedCallback() {\n    this.destroyNativeRefresher();\n    this.scrollEl = undefined;\n\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  /**\n   * Call `complete()` when your async operation has completed.\n   * For example, the `refreshing` state is while the app is performing\n   * an asynchronous operation, such as receiving more data from an\n   * AJAX request. Once the data has been received, you then call this\n   * method to signify that the refreshing has completed and to close\n   * the refresher. This method also changes the refresher's state from\n   * `refreshing` to `completing`.\n   */\n\n\n  async complete() {\n    if (this.nativeRefresher) {\n      this.needsCompletion = true; // Do not reset scroll el until user removes pointer from screen\n\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 32\n        /* Completing */\n        )));\n      }\n    } else {\n      this.close(32\n      /* Completing */\n      , '120ms');\n    }\n  }\n  /**\n   * Changes the refresher's state from `refreshing` to `cancelling`.\n   */\n\n\n  async cancel() {\n    if (this.nativeRefresher) {\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 16\n        /* Cancelling */\n        )));\n      }\n    } else {\n      this.close(16\n      /* Cancelling */\n      , '');\n    }\n  }\n  /**\n   * A number representing how far down the user has pulled.\n   * The number `0` represents the user hasn't pulled down at all. The\n   * number `1`, and anything greater than `1`, represents that the user\n   * has pulled far enough down that when they let go then the refresh will\n   * happen. If they let go and the number is less than `1`, then the\n   * refresh will not happen, and the content will return to it's original\n   * position.\n   */\n\n\n  getProgress() {\n    return Promise.resolve(this.progress);\n  }\n\n  canStart() {\n    if (!this.scrollEl) {\n      return false;\n    }\n\n    if (this.state !== 1\n    /* Inactive */\n    ) {\n        return false;\n      } // if the scrollTop is greater than zero then it's\n    // not possible to pull the content down yet\n\n\n    if (this.scrollEl.scrollTop > 0) {\n      return false;\n    }\n\n    return true;\n  }\n\n  onStart() {\n    this.progress = 0;\n    this.state = 1\n    /* Inactive */\n    ;\n  }\n\n  onMove(detail) {\n    if (!this.scrollEl) {\n      return;\n    } // this method can get called like a bazillion times per second,\n    // so it's built to be as efficient as possible, and does its\n    // best to do any DOM read/writes only when absolutely necessary\n    // if multi-touch then get out immediately\n\n\n    const ev = detail.event;\n\n    if (ev.touches && ev.touches.length > 1) {\n      return;\n    } // do nothing if it's actively refreshing\n    // or it's in the way of closing\n    // or this was never a startY\n\n\n    if ((this.state & 56\n    /* _BUSY_ */\n    ) !== 0) {\n      return;\n    }\n\n    const pullFactor = Number.isNaN(this.pullFactor) || this.pullFactor < 0 ? 1 : this.pullFactor;\n    const deltaY = detail.deltaY * pullFactor; // don't bother if they're scrolling up\n    // and have not already started dragging\n\n    if (deltaY <= 0) {\n      // the current Y is higher than the starting Y\n      // so they scrolled up enough to be ignored\n      this.progress = 0;\n      this.state = 1\n      /* Inactive */\n      ;\n\n      if (this.appliedStyles) {\n        // reset the styles only if they were applied\n        this.setCss(0, '', false, '');\n        return;\n      }\n\n      return;\n    }\n\n    if (this.state === 1\n    /* Inactive */\n    ) {\n        // this refresh is not already actively pulling down\n        // get the content's scrollTop\n        const scrollHostScrollTop = this.scrollEl.scrollTop; // if the scrollTop is greater than zero then it's\n        // not possible to pull the content down yet\n\n        if (scrollHostScrollTop > 0) {\n          this.progress = 0;\n          return;\n        } // content scrolled all the way to the top, and dragging down\n\n\n        this.state = 2\n        /* Pulling */\n        ;\n      } // prevent native scroll events\n\n\n    if (ev.cancelable) {\n      ev.preventDefault();\n    } // the refresher is actively pulling at this point\n    // move the scroll element within the content element\n\n\n    this.setCss(deltaY, '0ms', true, '');\n\n    if (deltaY === 0) {\n      // don't continue if there's no delta yet\n      this.progress = 0;\n      return;\n    }\n\n    const pullMin = this.pullMin; // set pull progress\n\n    this.progress = deltaY / pullMin; // emit \"start\" if it hasn't started yet\n\n    if (!this.didStart) {\n      this.didStart = true;\n      this.ionStart.emit();\n    } // emit \"pulling\" on every move\n\n\n    this.ionPull.emit(); // do nothing if the delta is less than the pull threshold\n\n    if (deltaY < pullMin) {\n      // ensure it stays in the pulling state, cuz its not ready yet\n      this.state = 2\n      /* Pulling */\n      ;\n      return;\n    }\n\n    if (deltaY > this.pullMax) {\n      // they pulled farther than the max, so kick off the refresh\n      this.beginRefresh();\n      return;\n    } // pulled farther than the pull min!!\n    // it is now in the `ready` state!!\n    // if they let go then it'll refresh, kerpow!!\n\n\n    this.state = 4\n    /* Ready */\n    ;\n    return;\n  }\n\n  onEnd() {\n    // only run in a zone when absolutely necessary\n    if (this.state === 4\n    /* Ready */\n    ) {\n        // they pulled down far enough, so it's ready to refresh\n        this.beginRefresh();\n      } else if (this.state === 2\n    /* Pulling */\n    ) {\n        // they were pulling down, but didn't pull down far enough\n        // set the content back to it's original location\n        // and close the refresher\n        // set that the refresh is actively cancelling\n        this.cancel();\n      }\n  }\n\n  beginRefresh() {\n    // assumes we're already back in a zone\n    // they pulled down far enough, so it's ready to refresh\n    this.state = 8\n    /* Refreshing */\n    ; // place the content in a hangout position while it thinks\n\n    this.setCss(this.pullMin, this.snapbackDuration, true, ''); // emit \"refresh\" because it was pulled down far enough\n    // and they let go to begin refreshing\n\n    this.ionRefresh.emit({\n      complete: this.complete.bind(this)\n    });\n  }\n\n  close(state, delay) {\n    // create fallback timer incase something goes wrong with transitionEnd event\n    setTimeout(() => {\n      this.state = 1\n      /* Inactive */\n      ;\n      this.progress = 0;\n      this.didStart = false;\n      this.setCss(0, '0ms', false, '');\n    }, 600); // reset set the styles on the scroll element\n    // set that the refresh is actively cancelling/completing\n\n    this.state = state;\n    this.setCss(0, this.closeDuration, true, delay); // TODO: stop gesture\n  }\n\n  setCss(y, duration, overflowVisible, delay) {\n    if (this.nativeRefresher) {\n      return;\n    }\n\n    this.appliedStyles = y > 0;\n    writeTask(() => {\n      if (this.scrollEl && this.backgroundContentEl) {\n        const scrollStyle = this.scrollEl.style;\n        const backgroundStyle = this.backgroundContentEl.style;\n        scrollStyle.transform = backgroundStyle.transform = y > 0 ? `translateY(${y}px) translateZ(0px)` : '';\n        scrollStyle.transitionDuration = backgroundStyle.transitionDuration = duration;\n        scrollStyle.transitionDelay = backgroundStyle.transitionDelay = delay;\n        scrollStyle.overflow = overflowVisible ? 'hidden' : '';\n      }\n    });\n  }\n\n  render() {\n    const mode = getIonMode(this);\n    return h(Host, {\n      slot: \"fixed\",\n      class: {\n        [mode]: true,\n        // Used internally for styling\n        [`refresher-${mode}`]: true,\n        'refresher-native': this.nativeRefresher,\n        'refresher-active': this.state !== 1\n        /* Inactive */\n        ,\n        'refresher-pulling': this.state === 2\n        /* Pulling */\n        ,\n        'refresher-ready': this.state === 4\n        /* Ready */\n        ,\n        'refresher-refreshing': this.state === 8\n        /* Refreshing */\n        ,\n        'refresher-cancelling': this.state === 16\n        /* Cancelling */\n        ,\n        'refresher-completing': this.state === 32\n        /* Completing */\n\n      }\n    });\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"disabled\": [\"disabledChanged\"]\n    };\n  }\n\n};\nRefresher.style = {\n  ios: refresherIosCss,\n  md: refresherMdCss\n};\nconst RefresherContent = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n\n  componentWillLoad() {\n    if (this.pullingIcon === undefined) {\n      const mode = getIonMode(this);\n      const overflowRefresher = this.el.style.webkitOverflowScrolling !== undefined ? 'lines' : 'arrow-down';\n      this.pullingIcon = config.get('refreshingIcon', mode === 'ios' && isPlatform('mobile') ? config.get('spinner', overflowRefresher) : 'circular');\n    }\n\n    if (this.refreshingSpinner === undefined) {\n      const mode = getIonMode(this);\n      this.refreshingSpinner = config.get('refreshingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'circular'));\n    }\n  }\n\n  render() {\n    const pullingIcon = this.pullingIcon;\n    const hasSpinner = pullingIcon != null && SPINNERS[pullingIcon] !== undefined;\n    const mode = getIonMode(this);\n    return h(Host, {\n      class: mode\n    }, h(\"div\", {\n      class: \"refresher-pulling\"\n    }, this.pullingIcon && hasSpinner && h(\"div\", {\n      class: \"refresher-pulling-icon\"\n    }, h(\"div\", {\n      class: \"spinner-arrow-container\"\n    }, h(\"ion-spinner\", {\n      name: this.pullingIcon,\n      paused: true\n    }), mode === 'md' && this.pullingIcon === 'circular' && h(\"div\", {\n      class: \"arrow-container\"\n    }, h(\"ion-icon\", {\n      name: \"caret-back-sharp\"\n    })))), this.pullingIcon && !hasSpinner && h(\"div\", {\n      class: \"refresher-pulling-icon\"\n    }, h(\"ion-icon\", {\n      icon: this.pullingIcon,\n      lazy: false\n    })), this.pullingText && h(\"div\", {\n      class: \"refresher-pulling-text\",\n      innerHTML: sanitizeDOMString(this.pullingText)\n    })), h(\"div\", {\n      class: \"refresher-refreshing\"\n    }, this.refreshingSpinner && h(\"div\", {\n      class: \"refresher-refreshing-icon\"\n    }, h(\"ion-spinner\", {\n      name: this.refreshingSpinner\n    })), this.refreshingText && h(\"div\", {\n      class: \"refresher-refreshing-text\",\n      innerHTML: sanitizeDOMString(this.refreshingText)\n    })));\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n};\nexport { Refresher as ion_refresher, RefresherContent as ion_refresher_content };","map":{"version":3,"sources":["/media/theticarcher38/Volume/Code/LawsForPaws/LawsForPawsApp/node_modules/@ionic/core/dist/esm/ion-refresher_2.entry.js"],"names":["c","writeTask","r","registerInstance","e","createEvent","f","readTask","h","i","getElement","H","Host","isPlatform","b","getIonMode","config","clamp","g","getElementRoot","raf","createAnimation","getTimeGivenProgression","s","sanitizeDOMString","d","hapticImpact","S","SPINNERS","getRefresherAnimationType","contentEl","previousSibling","previousElementSibling","hasHeader","tagName","createPullingAnimation","type","pullingSpinner","createScaleAnimation","createTranslateAnimation","createBaseAnimation","pullingRefresherIcon","spinner","querySelector","circle","shadowRoot","spinnerArrowContainer","arrowContainer","arrow","baseAnimation","duration","easing","spinnerArrowContainerAnimation","addElement","keyframes","offset","opacity","circleInnerAnimation","strokeDasharray","circleOuterAnimation","transform","arrowContainerAnimation","arrowAnimation","addAnimation","height","clientHeight","spinnerAnimation","createSnapBackAnimation","fromTo","setSpinnerOpacity","style","setProperty","toString","handleScrollWhilePulling","ticks","currentTickToShow","forEach","el","handleScrollWhileRefreshing","lastVelocityY","translateElement","value","Promise","resolve","trans","transitionEndAsync","undefined","removeProperty","shouldUseNativeRefresher","referenceEl","mode","refreshingSpinner","webkitOverflowScrolling","expectedDuration","transitionEnd","callback","unRegTrans","animationTimeout","opts","passive","ANIMATION_FALLBACK_TIMEOUT","unregister","onTransitionEnd","ev","target","addEventListener","setTimeout","clearTimeout","removeEventListener","refresherIosCss","refresherMdCss","Refresher","constructor","hostRef","ionRefresh","ionPull","ionStart","appliedStyles","didStart","progress","pointerDown","needsCompletion","didRefresh","animations","nativeRefresher","state","pullMin","pullMax","closeDuration","snapbackDuration","pullFactor","disabled","disabledChanged","gesture","enable","checkNativeRefresher","useNativeRefresher","closest","setupNativeRefresher","destroyNativeRefresher","scrollEl","scrollListenerCallback","resetNativeRefresher","ani","destroy","setupiOSNativeRefresher","elementToTransform","querySelectorAll","MAX_PULL","NUM_TICKS","length","scrollTop","refresherHeight","ratio","emit","Math","abs","pullAmount","floor","shouldShowRefreshingSpinner","beginRefresh","createGesture","gestureName","gesturePriority","direction","threshold","onStart","onMove","velocityY","onEnd","setupMDNativeRefresher","refreshingCircle","canStart","data","animation","cancelled","animationType","progressStart","push","deltaY","progressStep","progressEnd","onFinish","snapBackAnimation","play","componentDidUpdate","connectedCallback","getAttribute","console","error","componentOnReady","getScrollElement","backgroundContentEl","disconnectedCallback","complete","close","cancel","getProgress","detail","event","touches","Number","isNaN","setCss","scrollHostScrollTop","cancelable","preventDefault","bind","delay","y","overflowVisible","scrollStyle","backgroundStyle","transitionDuration","transitionDelay","overflow","render","slot","class","watchers","ios","md","RefresherContent","componentWillLoad","pullingIcon","overflowRefresher","get","hasSpinner","name","paused","icon","lazy","pullingText","innerHTML","refreshingText","ion_refresher","ion_refresher_content"],"mappings":"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","sourcesContent":["import { c as writeTask, r as registerInstance, e as createEvent, f as readTask, h, i as getElement, H as Host } from './index-e806d1f6.js';\nimport { i as isPlatform, b as getIonMode, c as config } from './ionic-global-9d5c8ee3.js';\nimport { e as clamp, g as getElementRoot, r as raf } from './helpers-002e4980.js';\nimport { c as createAnimation } from './animation-ede2d71c.js';\nimport { g as getTimeGivenProgression } from './cubic-bezier-eea9a7a9.js';\nimport { s as sanitizeDOMString } from './index-9e3fe806.js';\nimport { d as hapticImpact } from './haptic-27b3f981.js';\nimport { S as SPINNERS } from './spinner-configs-cd7845af.js';\n\nconst getRefresherAnimationType = (contentEl) => {\n  const previousSibling = contentEl.previousElementSibling;\n  const hasHeader = previousSibling !== null && previousSibling.tagName === 'ION-HEADER';\n  return hasHeader ? 'translate' : 'scale';\n};\nconst createPullingAnimation = (type, pullingSpinner) => {\n  return type === 'scale' ? createScaleAnimation(pullingSpinner) : createTranslateAnimation(pullingSpinner);\n};\nconst createBaseAnimation = (pullingRefresherIcon) => {\n  const spinner = pullingRefresherIcon.querySelector('ion-spinner');\n  const circle = spinner.shadowRoot.querySelector('circle');\n  const spinnerArrowContainer = pullingRefresherIcon.querySelector('.spinner-arrow-container');\n  const arrowContainer = pullingRefresherIcon.querySelector('.arrow-container');\n  const arrow = (arrowContainer) ? arrowContainer.querySelector('ion-icon') : null;\n  const baseAnimation = createAnimation()\n    .duration(1000)\n    .easing('ease-out');\n  const spinnerArrowContainerAnimation = createAnimation()\n    .addElement(spinnerArrowContainer)\n    .keyframes([\n    { offset: 0, opacity: '0.3' },\n    { offset: 0.45, opacity: '0.3' },\n    { offset: 0.55, opacity: '1' },\n    { offset: 1, opacity: '1' }\n  ]);\n  const circleInnerAnimation = createAnimation()\n    .addElement(circle)\n    .keyframes([\n    { offset: 0, strokeDasharray: '1px, 200px' },\n    { offset: 0.20, strokeDasharray: '1px, 200px' },\n    { offset: 0.55, strokeDasharray: '100px, 200px' },\n    { offset: 1, strokeDasharray: '100px, 200px' }\n  ]);\n  const circleOuterAnimation = createAnimation()\n    .addElement(spinner)\n    .keyframes([\n    { offset: 0, transform: 'rotate(-90deg)' },\n    { offset: 1, transform: 'rotate(210deg)' }\n  ]);\n  /**\n   * Only add arrow animation if present\n   * this allows users to customize the spinners\n   * without errors being thrown\n   */\n  if (arrowContainer && arrow) {\n    const arrowContainerAnimation = createAnimation()\n      .addElement(arrowContainer)\n      .keyframes([\n      { offset: 0, transform: 'rotate(0deg)' },\n      { offset: 0.30, transform: 'rotate(0deg)' },\n      { offset: 0.55, transform: 'rotate(280deg)' },\n      { offset: 1, transform: 'rotate(400deg)' }\n    ]);\n    const arrowAnimation = createAnimation()\n      .addElement(arrow)\n      .keyframes([\n      { offset: 0, transform: 'translateX(2px) scale(0)' },\n      { offset: 0.30, transform: 'translateX(2px) scale(0)' },\n      { offset: 0.55, transform: 'translateX(-1.5px) scale(1)' },\n      { offset: 1, transform: 'translateX(-1.5px) scale(1)' }\n    ]);\n    baseAnimation.addAnimation([arrowContainerAnimation, arrowAnimation]);\n  }\n  return baseAnimation.addAnimation([spinnerArrowContainerAnimation, circleInnerAnimation, circleOuterAnimation]);\n};\nconst createScaleAnimation = (pullingRefresherIcon) => {\n  const height = pullingRefresherIcon.clientHeight;\n  const spinnerAnimation = createAnimation()\n    .addElement(pullingRefresherIcon)\n    .keyframes([\n    { offset: 0, transform: `scale(0) translateY(-${height + 20}px)` },\n    { offset: 1, transform: 'scale(1) translateY(100px)' }\n  ]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createTranslateAnimation = (pullingRefresherIcon) => {\n  const height = pullingRefresherIcon.clientHeight;\n  const spinnerAnimation = createAnimation()\n    .addElement(pullingRefresherIcon)\n    .keyframes([\n    { offset: 0, transform: `translateY(-${height + 20}px)` },\n    { offset: 1, transform: 'translateY(100px)' }\n  ]);\n  return createBaseAnimation(pullingRefresherIcon).addAnimation([spinnerAnimation]);\n};\nconst createSnapBackAnimation = (pullingRefresherIcon) => {\n  return createAnimation()\n    .duration(125)\n    .addElement(pullingRefresherIcon)\n    .fromTo('transform', 'translateY(var(--ion-pulling-refresher-translate, 100px))', 'translateY(0px)');\n};\n// iOS Native Refresher\n// -----------------------------\nconst setSpinnerOpacity = (spinner, opacity) => {\n  spinner.style.setProperty('opacity', opacity.toString());\n};\nconst handleScrollWhilePulling = (spinner, ticks, opacity, currentTickToShow) => {\n  writeTask(() => {\n    setSpinnerOpacity(spinner, opacity);\n    ticks.forEach((el, i) => el.style.setProperty('opacity', (i <= currentTickToShow) ? '0.99' : '0'));\n  });\n};\nconst handleScrollWhileRefreshing = (spinner, lastVelocityY) => {\n  writeTask(() => {\n    // If user pulls down quickly, the spinner should spin faster\n    spinner.style.setProperty('--refreshing-rotation-duration', (lastVelocityY >= 1.0) ? '0.5s' : '2s');\n    spinner.style.setProperty('opacity', '1');\n  });\n};\nconst translateElement = (el, value) => {\n  if (!el) {\n    return Promise.resolve();\n  }\n  const trans = transitionEndAsync(el, 200);\n  writeTask(() => {\n    el.style.setProperty('transition', '0.2s all ease-out');\n    if (value === undefined) {\n      el.style.removeProperty('transform');\n    }\n    else {\n      el.style.setProperty('transform', `translate3d(0px, ${value}, 0px)`);\n    }\n  });\n  return trans;\n};\n// Utils\n// -----------------------------\nconst shouldUseNativeRefresher = (referenceEl, mode) => {\n  const pullingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n  const refreshingSpinner = referenceEl.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n  return (pullingSpinner !== null &&\n    refreshingSpinner !== null &&\n    ((mode === 'ios' && isPlatform('mobile') && referenceEl.style.webkitOverflowScrolling !== undefined) ||\n      mode === 'md'));\n};\nconst transitionEndAsync = (el, expectedDuration = 0) => {\n  return new Promise(resolve => {\n    transitionEnd(el, expectedDuration, resolve);\n  });\n};\nconst transitionEnd = (el, expectedDuration = 0, callback) => {\n  let unRegTrans;\n  let animationTimeout;\n  const opts = { passive: true };\n  const ANIMATION_FALLBACK_TIMEOUT = 500;\n  const unregister = () => {\n    if (unRegTrans) {\n      unRegTrans();\n    }\n  };\n  const onTransitionEnd = (ev) => {\n    if (ev === undefined || el === ev.target) {\n      unregister();\n      callback(ev);\n    }\n  };\n  if (el) {\n    el.addEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n    el.addEventListener('transitionend', onTransitionEnd, opts);\n    animationTimeout = setTimeout(onTransitionEnd, expectedDuration + ANIMATION_FALLBACK_TIMEOUT);\n    unRegTrans = () => {\n      if (animationTimeout) {\n        clearTimeout(animationTimeout);\n        animationTimeout = undefined;\n      }\n      el.removeEventListener('webkitTransitionEnd', onTransitionEnd, opts);\n      el.removeEventListener('transitionend', onTransitionEnd, opts);\n    };\n  }\n  return unregister;\n};\n\nconst refresherIosCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-ios .refresher-pulling-icon,.refresher-ios .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-ios .refresher-pulling-text,.refresher-ios .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-lines-ios line,.refresher-ios .refresher-refreshing .spinner-lines-small-ios line,.refresher-ios .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-ios .refresher-refreshing .spinner-bubbles circle,.refresher-ios .refresher-refreshing .spinner-circles circle,.refresher-ios .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}.refresher-native .refresher-refreshing ion-spinner{--refreshing-rotation-duration:2s;display:none;-webkit-animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards;animation:var(--refreshing-rotation-duration) ease-out refresher-rotate forwards}.refresher-native .refresher-refreshing{display:none;-webkit-animation:250ms linear refresher-pop forwards;animation:250ms linear refresher-pop forwards}.refresher-native.refresher-refreshing .refresher-pulling ion-spinner,.refresher-native.refresher-completing .refresher-pulling ion-spinner{display:none}.refresher-native.refresher-refreshing .refresher-refreshing ion-spinner,.refresher-native.refresher-completing .refresher-refreshing ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-pulling ion-spinner{display:block}.refresher-native.refresher-pulling .refresher-refreshing ion-spinner{display:none}@-webkit-keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@keyframes refresher-pop{0%{-webkit-transform:scale(1);transform:scale(1);-webkit-animation-timing-function:ease-in;animation-timing-function:ease-in}50%{-webkit-transform:scale(1.2);transform:scale(1.2);-webkit-animation-timing-function:ease-out;animation-timing-function:ease-out}100%{-webkit-transform:scale(1);transform:scale(1)}}@-webkit-keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}@keyframes refresher-rotate{from{-webkit-transform:rotate(0deg);transform:rotate(0deg)}to{-webkit-transform:rotate(180deg);transform:rotate(180deg)}}\";\n\nconst refresherMdCss = \"ion-refresher{left:0;top:0;display:none;position:absolute;width:100%;height:60px;pointer-events:none;z-index:-1}[dir=rtl] ion-refresher,:host-context([dir=rtl]) ion-refresher{left:unset;right:unset;right:0}ion-refresher.refresher-active{display:block}ion-refresher-content{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:center;justify-content:center;height:100%}.refresher-pulling,.refresher-refreshing{display:none;width:100%}.refresher-pulling-icon,.refresher-refreshing-icon{-webkit-transform-origin:center;transform-origin:center;-webkit-transition:200ms;transition:200ms;font-size:30px;text-align:center}[dir=rtl] .refresher-pulling-icon,:host-context([dir=rtl]) .refresher-pulling-icon,[dir=rtl] .refresher-refreshing-icon,:host-context([dir=rtl]) .refresher-refreshing-icon{-webkit-transform-origin:calc(100% - center);transform-origin:calc(100% - center)}.refresher-pulling-text,.refresher-refreshing-text{font-size:16px;text-align:center}ion-refresher-content .arrow-container{display:none}.refresher-pulling ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling{display:block}.refresher-ready ion-refresher-content .refresher-pulling-icon{-webkit-transform:rotate(180deg);transform:rotate(180deg)}.refresher-refreshing ion-refresher-content .refresher-refreshing{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling{display:block}.refresher-cancelling ion-refresher-content .refresher-pulling-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-completing ion-refresher-content .refresher-refreshing{display:block}.refresher-completing ion-refresher-content .refresher-refreshing-icon{-webkit-transform:scale(0);transform:scale(0)}.refresher-native .refresher-pulling-text,.refresher-native .refresher-refreshing-text{display:none}.refresher-md .refresher-pulling-icon,.refresher-md .refresher-refreshing-icon{color:var(--ion-text-color, #000)}.refresher-md .refresher-pulling-text,.refresher-md .refresher-refreshing-text{color:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-lines-md line,.refresher-md .refresher-refreshing .spinner-lines-small-md line,.refresher-md .refresher-refreshing .spinner-crescent circle{stroke:var(--ion-text-color, #000)}.refresher-md .refresher-refreshing .spinner-bubbles circle,.refresher-md .refresher-refreshing .spinner-circles circle,.refresher-md .refresher-refreshing .spinner-dots circle{fill:var(--ion-text-color, #000)}ion-refresher.refresher-native{display:block;z-index:1}ion-refresher.refresher-native ion-spinner{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:24px;height:24px;color:var(--ion-color-primary, #3880ff)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native ion-spinner{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native .spinner-arrow-container{display:inherit}ion-refresher.refresher-native .arrow-container{display:block;position:absolute;width:24px;height:24px}ion-refresher.refresher-native .arrow-container ion-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;left:0;right:0;bottom:-4px;position:absolute;color:var(--ion-color-primary, #3880ff);font-size:12px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .arrow-container ion-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}ion-refresher.refresher-native.refresher-pulling ion-refresher-content .refresher-pulling,ion-refresher.refresher-native.refresher-ready ion-refresher-content .refresher-pulling{display:-ms-flexbox;display:flex}ion-refresher.refresher-native.refresher-refreshing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-completing ion-refresher-content .refresher-refreshing,ion-refresher.refresher-native.refresher-cancelling ion-refresher-content .refresher-refreshing{display:-ms-flexbox;display:flex}ion-refresher.refresher-native .refresher-pulling-icon{-webkit-transform:translateY(calc(-100% - 10px));transform:translateY(calc(-100% - 10px))}ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;border-radius:100%;padding-left:8px;padding-right:8px;padding-top:8px;padding-bottom:8px;display:-ms-flexbox;display:flex;border:1px solid #ececec;background:white;-webkit-box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1);box-shadow:0px 1px 6px rgba(0, 0, 0, 0.1)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){ion-refresher.refresher-native .refresher-pulling-icon,ion-refresher.refresher-native .refresher-refreshing-icon{padding-left:unset;padding-right:unset;-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px}}\";\n\nconst Refresher = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionRefresh = createEvent(this, \"ionRefresh\", 7);\n    this.ionPull = createEvent(this, \"ionPull\", 7);\n    this.ionStart = createEvent(this, \"ionStart\", 7);\n    this.appliedStyles = false;\n    this.didStart = false;\n    this.progress = 0;\n    this.pointerDown = false;\n    this.needsCompletion = false;\n    this.didRefresh = false;\n    this.lastVelocityY = 0;\n    this.animations = [];\n    this.nativeRefresher = false;\n    /**\n     * The current state which the refresher is in. The refresher's states include:\n     *\n     * - `inactive` - The refresher is not being pulled down or refreshing and is currently hidden.\n     * - `pulling` - The user is actively pulling down the refresher, but has not reached the point yet that if the user lets go, it'll refresh.\n     * - `cancelling` - The user pulled down the refresher and let go, but did not pull down far enough to kick off the `refreshing` state. After letting go, the refresher is in the `cancelling` state while it is closing, and will go back to the `inactive` state once closed.\n     * - `ready` - The user has pulled down the refresher far enough that if they let go, it'll begin the `refreshing` state.\n     * - `refreshing` - The refresher is actively waiting on the async operation to end. Once the refresh handler calls `complete()` it will begin the `completing` state.\n     * - `completing` - The `refreshing` state has finished and the refresher is in the way of closing itself. Once closed, the refresher will go back to the `inactive` state.\n     */\n    this.state = 1 /* Inactive */;\n    /**\n     * The minimum distance the user must pull down until the\n     * refresher will go into the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullMin = 60;\n    /**\n     * The maximum distance of the pull until the refresher\n     * will automatically go into the `refreshing` state.\n     * Defaults to the result of `pullMin + 60`.\n     * Does not apply when  the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullMax = this.pullMin + 60;\n    /**\n     * Time it takes to close the refresher.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.closeDuration = '280ms';\n    /**\n     * Time it takes the refresher to to snap back to the `refreshing` state.\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.snapbackDuration = '280ms';\n    /**\n     * How much to multiply the pull speed by. To slow the pull animation down,\n     * pass a number less than `1`. To speed up the pull, pass a number greater\n     * than `1`. The default value is `1` which is equal to the speed of the cursor.\n     * If a negative value is passed in, the factor will be `1` instead.\n     *\n     * For example: If the value passed is `1.2` and the content is dragged by\n     * `10` pixels, instead of `10` pixels the content will be pulled by `12` pixels\n     * (an increase of 20 percent). If the value passed is `0.8`, the dragged amount\n     * will be `8` pixels, less than the amount the cursor has moved.\n     *\n     * Does not apply when the refresher content uses a spinner,\n     * enabling the native refresher.\n     */\n    this.pullFactor = 1;\n    /**\n     * If `true`, the refresher will be hidden.\n     */\n    this.disabled = false;\n  }\n  disabledChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.disabled);\n    }\n  }\n  checkNativeRefresher() {\n    const useNativeRefresher = shouldUseNativeRefresher(this.el, getIonMode(this));\n    if (useNativeRefresher && !this.nativeRefresher) {\n      const contentEl = this.el.closest('ion-content');\n      this.setupNativeRefresher(contentEl);\n    }\n    else if (!useNativeRefresher) {\n      this.destroyNativeRefresher();\n    }\n  }\n  destroyNativeRefresher() {\n    if (this.scrollEl && this.scrollListenerCallback) {\n      this.scrollEl.removeEventListener('scroll', this.scrollListenerCallback);\n      this.scrollListenerCallback = undefined;\n    }\n    this.nativeRefresher = false;\n  }\n  async resetNativeRefresher(el, state) {\n    this.state = state;\n    if (getIonMode(this) === 'ios') {\n      await translateElement(el, undefined);\n    }\n    else {\n      await transitionEndAsync(this.el.querySelector('.refresher-refreshing-icon'), 200);\n    }\n    this.didRefresh = false;\n    this.needsCompletion = false;\n    this.pointerDown = false;\n    this.animations.forEach(ani => ani.destroy());\n    this.animations = [];\n    this.progress = 0;\n    this.state = 1 /* Inactive */;\n  }\n  async setupiOSNativeRefresher(pullingSpinner, refreshingSpinner) {\n    this.elementToTransform = this.scrollEl;\n    const ticks = pullingSpinner.shadowRoot.querySelectorAll('svg');\n    const MAX_PULL = this.scrollEl.clientHeight * 0.16;\n    const NUM_TICKS = ticks.length;\n    writeTask(() => ticks.forEach(el => el.style.setProperty('animation', 'none')));\n    this.scrollListenerCallback = () => {\n      // If pointer is not on screen or refresher is not active, ignore scroll\n      if (!this.pointerDown && this.state === 1 /* Inactive */) {\n        return;\n      }\n      readTask(() => {\n        // PTR should only be active when overflow scrolling at the top\n        const scrollTop = this.scrollEl.scrollTop;\n        const refresherHeight = this.el.clientHeight;\n        if (scrollTop > 0) {\n          /**\n           * If refresher is refreshing and user tries to scroll\n           * progressively fade refresher out/in\n           */\n          if (this.state === 8 /* Refreshing */) {\n            const ratio = clamp(0, scrollTop / (refresherHeight * 0.5), 1);\n            writeTask(() => setSpinnerOpacity(refreshingSpinner, 1 - ratio));\n            return;\n          }\n          writeTask(() => setSpinnerOpacity(pullingSpinner, 0));\n          return;\n        }\n        if (this.pointerDown) {\n          if (!this.didStart) {\n            this.didStart = true;\n            this.ionStart.emit();\n          }\n          // emit \"pulling\" on every move\n          if (this.pointerDown) {\n            this.ionPull.emit();\n          }\n        }\n        // delay showing the next tick marks until user has pulled 30px\n        const opacity = clamp(0, Math.abs(scrollTop) / refresherHeight, 0.99);\n        const pullAmount = this.progress = clamp(0, (Math.abs(scrollTop) - 30) / MAX_PULL, 1);\n        const currentTickToShow = clamp(0, Math.floor(pullAmount * NUM_TICKS), NUM_TICKS - 1);\n        const shouldShowRefreshingSpinner = this.state === 8 /* Refreshing */ || currentTickToShow === NUM_TICKS - 1;\n        if (shouldShowRefreshingSpinner) {\n          if (this.pointerDown) {\n            handleScrollWhileRefreshing(refreshingSpinner, this.lastVelocityY);\n          }\n          if (!this.didRefresh) {\n            this.beginRefresh();\n            this.didRefresh = true;\n            hapticImpact({ style: 'light' });\n            /**\n             * Translate the content element otherwise when pointer is removed\n             * from screen the scroll content will bounce back over the refresher\n             */\n            if (!this.pointerDown) {\n              translateElement(this.elementToTransform, `${refresherHeight}px`);\n            }\n          }\n        }\n        else {\n          this.state = 2 /* Pulling */;\n          handleScrollWhilePulling(pullingSpinner, ticks, opacity, currentTickToShow);\n        }\n      });\n    };\n    this.scrollEl.addEventListener('scroll', this.scrollListenerCallback);\n    this.gesture = (await import('./index-f49d994d.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 10,\n      direction: 'y',\n      threshold: 5,\n      onStart: () => {\n        this.pointerDown = true;\n        if (!this.didRefresh) {\n          translateElement(this.elementToTransform, '0px');\n        }\n      },\n      onMove: ev => {\n        this.lastVelocityY = ev.velocityY;\n      },\n      onEnd: () => {\n        this.pointerDown = false;\n        this.didStart = false;\n        if (this.needsCompletion) {\n          this.resetNativeRefresher(this.elementToTransform, 32 /* Completing */);\n          this.needsCompletion = false;\n        }\n        else if (this.didRefresh) {\n          readTask(() => translateElement(this.elementToTransform, `${this.el.clientHeight}px`));\n        }\n      },\n    });\n    this.disabledChanged();\n  }\n  async setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner) {\n    const circle = getElementRoot(pullingSpinner).querySelector('circle');\n    const pullingRefresherIcon = this.el.querySelector('ion-refresher-content .refresher-pulling-icon');\n    const refreshingCircle = getElementRoot(refreshingSpinner).querySelector('circle');\n    if (circle !== null && refreshingCircle !== null) {\n      writeTask(() => {\n        circle.style.setProperty('animation', 'none');\n        // This lines up the animation on the refreshing spinner with the pulling spinner\n        refreshingSpinner.style.setProperty('animation-delay', '-655ms');\n        refreshingCircle.style.setProperty('animation-delay', '-655ms');\n      });\n    }\n    this.gesture = (await import('./index-f49d994d.js')).createGesture({\n      el: this.scrollEl,\n      gestureName: 'refresher',\n      gesturePriority: 10,\n      direction: 'y',\n      threshold: 5,\n      canStart: () => this.state !== 8 /* Refreshing */ && this.state !== 32 /* Completing */ && this.scrollEl.scrollTop === 0,\n      onStart: (ev) => {\n        ev.data = { animation: undefined, didStart: false, cancelled: false };\n      },\n      onMove: (ev) => {\n        if ((ev.velocityY < 0 && this.progress === 0 && !ev.data.didStart) || ev.data.cancelled) {\n          ev.data.cancelled = true;\n          return;\n        }\n        if (!ev.data.didStart) {\n          ev.data.didStart = true;\n          this.state = 2 /* Pulling */;\n          writeTask(() => {\n            const animationType = getRefresherAnimationType(contentEl);\n            const animation = createPullingAnimation(animationType, pullingRefresherIcon);\n            ev.data.animation = animation;\n            this.scrollEl.style.setProperty('--overflow', 'hidden');\n            animation.progressStart(false, 0);\n            this.ionStart.emit();\n            this.animations.push(animation);\n          });\n          return;\n        }\n        // Since we are using an easing curve, slow the gesture tracking down a bit\n        this.progress = clamp(0, (ev.deltaY / 180) * 0.5, 1);\n        ev.data.animation.progressStep(this.progress);\n        this.ionPull.emit();\n      },\n      onEnd: (ev) => {\n        if (!ev.data.didStart) {\n          return;\n        }\n        writeTask(() => this.scrollEl.style.removeProperty('--overflow'));\n        if (this.progress <= 0.4) {\n          this.gesture.enable(false);\n          ev.data.animation\n            .progressEnd(0, this.progress, 500)\n            .onFinish(() => {\n            this.animations.forEach(ani => ani.destroy());\n            this.animations = [];\n            this.gesture.enable(true);\n            this.state = 1 /* Inactive */;\n          });\n          return;\n        }\n        const progress = getTimeGivenProgression([0, 0], [0, 0], [1, 1], [1, 1], this.progress)[0];\n        const snapBackAnimation = createSnapBackAnimation(pullingRefresherIcon);\n        this.animations.push(snapBackAnimation);\n        writeTask(async () => {\n          pullingRefresherIcon.style.setProperty('--ion-pulling-refresher-translate', `${(progress * 100)}px`);\n          ev.data.animation.progressEnd();\n          await snapBackAnimation.play();\n          this.beginRefresh();\n          ev.data.animation.destroy();\n        });\n      }\n    });\n    this.disabledChanged();\n  }\n  async setupNativeRefresher(contentEl) {\n    if (this.scrollListenerCallback || !contentEl || this.nativeRefresher || !this.scrollEl) {\n      return;\n    }\n    this.nativeRefresher = true;\n    const pullingSpinner = this.el.querySelector('ion-refresher-content .refresher-pulling ion-spinner');\n    const refreshingSpinner = this.el.querySelector('ion-refresher-content .refresher-refreshing ion-spinner');\n    if (getIonMode(this) === 'ios') {\n      this.setupiOSNativeRefresher(pullingSpinner, refreshingSpinner);\n    }\n    else {\n      this.setupMDNativeRefresher(contentEl, pullingSpinner, refreshingSpinner);\n    }\n  }\n  componentDidUpdate() {\n    this.checkNativeRefresher();\n  }\n  async connectedCallback() {\n    if (this.el.getAttribute('slot') !== 'fixed') {\n      console.error('Make sure you use: <ion-refresher slot=\"fixed\">');\n      return;\n    }\n    const contentEl = this.el.closest('ion-content');\n    if (!contentEl) {\n      console.error('<ion-refresher> must be used inside an <ion-content>');\n      return;\n    }\n    await contentEl.componentOnReady();\n    this.scrollEl = await contentEl.getScrollElement();\n    this.backgroundContentEl = getElementRoot(contentEl).querySelector('#background-content');\n    if (shouldUseNativeRefresher(this.el, getIonMode(this))) {\n      this.setupNativeRefresher(contentEl);\n    }\n    else {\n      this.gesture = (await import('./index-f49d994d.js')).createGesture({\n        el: contentEl,\n        gestureName: 'refresher',\n        gesturePriority: 10,\n        direction: 'y',\n        threshold: 20,\n        passive: false,\n        canStart: () => this.canStart(),\n        onStart: () => this.onStart(),\n        onMove: ev => this.onMove(ev),\n        onEnd: () => this.onEnd(),\n      });\n      this.disabledChanged();\n    }\n  }\n  disconnectedCallback() {\n    this.destroyNativeRefresher();\n    this.scrollEl = undefined;\n    if (this.gesture) {\n      this.gesture.destroy();\n      this.gesture = undefined;\n    }\n  }\n  /**\n   * Call `complete()` when your async operation has completed.\n   * For example, the `refreshing` state is while the app is performing\n   * an asynchronous operation, such as receiving more data from an\n   * AJAX request. Once the data has been received, you then call this\n   * method to signify that the refreshing has completed and to close\n   * the refresher. This method also changes the refresher's state from\n   * `refreshing` to `completing`.\n   */\n  async complete() {\n    if (this.nativeRefresher) {\n      this.needsCompletion = true;\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 32 /* Completing */)));\n      }\n    }\n    else {\n      this.close(32 /* Completing */, '120ms');\n    }\n  }\n  /**\n   * Changes the refresher's state from `refreshing` to `cancelling`.\n   */\n  async cancel() {\n    if (this.nativeRefresher) {\n      // Do not reset scroll el until user removes pointer from screen\n      if (!this.pointerDown) {\n        raf(() => raf(() => this.resetNativeRefresher(this.elementToTransform, 16 /* Cancelling */)));\n      }\n    }\n    else {\n      this.close(16 /* Cancelling */, '');\n    }\n  }\n  /**\n   * A number representing how far down the user has pulled.\n   * The number `0` represents the user hasn't pulled down at all. The\n   * number `1`, and anything greater than `1`, represents that the user\n   * has pulled far enough down that when they let go then the refresh will\n   * happen. If they let go and the number is less than `1`, then the\n   * refresh will not happen, and the content will return to it's original\n   * position.\n   */\n  getProgress() {\n    return Promise.resolve(this.progress);\n  }\n  canStart() {\n    if (!this.scrollEl) {\n      return false;\n    }\n    if (this.state !== 1 /* Inactive */) {\n      return false;\n    }\n    // if the scrollTop is greater than zero then it's\n    // not possible to pull the content down yet\n    if (this.scrollEl.scrollTop > 0) {\n      return false;\n    }\n    return true;\n  }\n  onStart() {\n    this.progress = 0;\n    this.state = 1 /* Inactive */;\n  }\n  onMove(detail) {\n    if (!this.scrollEl) {\n      return;\n    }\n    // this method can get called like a bazillion times per second,\n    // so it's built to be as efficient as possible, and does its\n    // best to do any DOM read/writes only when absolutely necessary\n    // if multi-touch then get out immediately\n    const ev = detail.event;\n    if (ev.touches && ev.touches.length > 1) {\n      return;\n    }\n    // do nothing if it's actively refreshing\n    // or it's in the way of closing\n    // or this was never a startY\n    if ((this.state & 56 /* _BUSY_ */) !== 0) {\n      return;\n    }\n    const pullFactor = (Number.isNaN(this.pullFactor) || this.pullFactor < 0) ? 1 : this.pullFactor;\n    const deltaY = detail.deltaY * pullFactor;\n    // don't bother if they're scrolling up\n    // and have not already started dragging\n    if (deltaY <= 0) {\n      // the current Y is higher than the starting Y\n      // so they scrolled up enough to be ignored\n      this.progress = 0;\n      this.state = 1 /* Inactive */;\n      if (this.appliedStyles) {\n        // reset the styles only if they were applied\n        this.setCss(0, '', false, '');\n        return;\n      }\n      return;\n    }\n    if (this.state === 1 /* Inactive */) {\n      // this refresh is not already actively pulling down\n      // get the content's scrollTop\n      const scrollHostScrollTop = this.scrollEl.scrollTop;\n      // if the scrollTop is greater than zero then it's\n      // not possible to pull the content down yet\n      if (scrollHostScrollTop > 0) {\n        this.progress = 0;\n        return;\n      }\n      // content scrolled all the way to the top, and dragging down\n      this.state = 2 /* Pulling */;\n    }\n    // prevent native scroll events\n    if (ev.cancelable) {\n      ev.preventDefault();\n    }\n    // the refresher is actively pulling at this point\n    // move the scroll element within the content element\n    this.setCss(deltaY, '0ms', true, '');\n    if (deltaY === 0) {\n      // don't continue if there's no delta yet\n      this.progress = 0;\n      return;\n    }\n    const pullMin = this.pullMin;\n    // set pull progress\n    this.progress = deltaY / pullMin;\n    // emit \"start\" if it hasn't started yet\n    if (!this.didStart) {\n      this.didStart = true;\n      this.ionStart.emit();\n    }\n    // emit \"pulling\" on every move\n    this.ionPull.emit();\n    // do nothing if the delta is less than the pull threshold\n    if (deltaY < pullMin) {\n      // ensure it stays in the pulling state, cuz its not ready yet\n      this.state = 2 /* Pulling */;\n      return;\n    }\n    if (deltaY > this.pullMax) {\n      // they pulled farther than the max, so kick off the refresh\n      this.beginRefresh();\n      return;\n    }\n    // pulled farther than the pull min!!\n    // it is now in the `ready` state!!\n    // if they let go then it'll refresh, kerpow!!\n    this.state = 4 /* Ready */;\n    return;\n  }\n  onEnd() {\n    // only run in a zone when absolutely necessary\n    if (this.state === 4 /* Ready */) {\n      // they pulled down far enough, so it's ready to refresh\n      this.beginRefresh();\n    }\n    else if (this.state === 2 /* Pulling */) {\n      // they were pulling down, but didn't pull down far enough\n      // set the content back to it's original location\n      // and close the refresher\n      // set that the refresh is actively cancelling\n      this.cancel();\n    }\n  }\n  beginRefresh() {\n    // assumes we're already back in a zone\n    // they pulled down far enough, so it's ready to refresh\n    this.state = 8 /* Refreshing */;\n    // place the content in a hangout position while it thinks\n    this.setCss(this.pullMin, this.snapbackDuration, true, '');\n    // emit \"refresh\" because it was pulled down far enough\n    // and they let go to begin refreshing\n    this.ionRefresh.emit({\n      complete: this.complete.bind(this)\n    });\n  }\n  close(state, delay) {\n    // create fallback timer incase something goes wrong with transitionEnd event\n    setTimeout(() => {\n      this.state = 1 /* Inactive */;\n      this.progress = 0;\n      this.didStart = false;\n      this.setCss(0, '0ms', false, '');\n    }, 600);\n    // reset set the styles on the scroll element\n    // set that the refresh is actively cancelling/completing\n    this.state = state;\n    this.setCss(0, this.closeDuration, true, delay);\n    // TODO: stop gesture\n  }\n  setCss(y, duration, overflowVisible, delay) {\n    if (this.nativeRefresher) {\n      return;\n    }\n    this.appliedStyles = (y > 0);\n    writeTask(() => {\n      if (this.scrollEl && this.backgroundContentEl) {\n        const scrollStyle = this.scrollEl.style;\n        const backgroundStyle = this.backgroundContentEl.style;\n        scrollStyle.transform = backgroundStyle.transform = ((y > 0) ? `translateY(${y}px) translateZ(0px)` : '');\n        scrollStyle.transitionDuration = backgroundStyle.transitionDuration = duration;\n        scrollStyle.transitionDelay = backgroundStyle.transitionDelay = delay;\n        scrollStyle.overflow = (overflowVisible ? 'hidden' : '');\n      }\n    });\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { slot: \"fixed\", class: {\n        [mode]: true,\n        // Used internally for styling\n        [`refresher-${mode}`]: true,\n        'refresher-native': this.nativeRefresher,\n        'refresher-active': this.state !== 1 /* Inactive */,\n        'refresher-pulling': this.state === 2 /* Pulling */,\n        'refresher-ready': this.state === 4 /* Ready */,\n        'refresher-refreshing': this.state === 8 /* Refreshing */,\n        'refresher-cancelling': this.state === 16 /* Cancelling */,\n        'refresher-completing': this.state === 32 /* Completing */,\n      } }));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n};\nRefresher.style = {\n  ios: refresherIosCss,\n  md: refresherMdCss\n};\n\nconst RefresherContent = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  componentWillLoad() {\n    if (this.pullingIcon === undefined) {\n      const mode = getIonMode(this);\n      const overflowRefresher = this.el.style.webkitOverflowScrolling !== undefined ? 'lines' : 'arrow-down';\n      this.pullingIcon = config.get('refreshingIcon', mode === 'ios' && isPlatform('mobile') ? config.get('spinner', overflowRefresher) : 'circular');\n    }\n    if (this.refreshingSpinner === undefined) {\n      const mode = getIonMode(this);\n      this.refreshingSpinner = config.get('refreshingSpinner', config.get('spinner', mode === 'ios' ? 'lines' : 'circular'));\n    }\n  }\n  render() {\n    const pullingIcon = this.pullingIcon;\n    const hasSpinner = pullingIcon != null && SPINNERS[pullingIcon] !== undefined;\n    const mode = getIonMode(this);\n    return (h(Host, { class: mode }, h(\"div\", { class: \"refresher-pulling\" }, this.pullingIcon && hasSpinner &&\n      h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"div\", { class: \"spinner-arrow-container\" }, h(\"ion-spinner\", { name: this.pullingIcon, paused: true }), mode === 'md' && this.pullingIcon === 'circular' &&\n        h(\"div\", { class: \"arrow-container\" }, h(\"ion-icon\", { name: \"caret-back-sharp\" })))), this.pullingIcon && !hasSpinner &&\n      h(\"div\", { class: \"refresher-pulling-icon\" }, h(\"ion-icon\", { icon: this.pullingIcon, lazy: false })), this.pullingText &&\n      h(\"div\", { class: \"refresher-pulling-text\", innerHTML: sanitizeDOMString(this.pullingText) })), h(\"div\", { class: \"refresher-refreshing\" }, this.refreshingSpinner &&\n      h(\"div\", { class: \"refresher-refreshing-icon\" }, h(\"ion-spinner\", { name: this.refreshingSpinner })), this.refreshingText &&\n      h(\"div\", { class: \"refresher-refreshing-text\", innerHTML: sanitizeDOMString(this.refreshingText) }))));\n  }\n  get el() { return getElement(this); }\n};\n\nexport { Refresher as ion_refresher, RefresherContent as ion_refresher_content };\n"]},"metadata":{},"sourceType":"module"}