{"ast":null,"code":"import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-e806d1f6.js';\nimport { b as getIonMode } from './ionic-global-9d5c8ee3.js';\nimport { f as findItemLabel, c as renderHiddenInput } from './helpers-002e4980.js';\nimport { c as createColorClasses, h as hostContext } from './theme-ff3fc52f.js';\nconst checkboxIosCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:50%;--border-width:1px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.23);--background:var(--ion-item-background, var(--ion-background-color, #fff));--size:26px;width:var(--size);height:var(--size)}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:8px;margin-top:10px;margin-bottom:9px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.in-item[slot=start]){margin-left:2px;margin-right:20px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:20px;margin-inline-end:20px}}\";\nconst checkboxMdCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:calc(var(--size) * .125);--border-width:2px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.51);--checkmark-width:3;--background:var(--ion-item-background, var(--ion-background-color, #fff));--transition:background 180ms cubic-bezier(0.4, 0, 0.2, 1);--size:18px;width:var(--size);height:var(--size)}.checkbox-icon path{stroke-dasharray:30;stroke-dashoffset:30}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{stroke-dashoffset:0;-webkit-transition:stroke-dashoffset 90ms linear 90ms;transition:stroke-dashoffset 90ms linear 90ms}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:0;margin-top:18px;margin-bottom:18px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:18px;margin-bottom:18px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\nconst Checkbox = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.inputId = `ion-cb-${checkboxIds++}`;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n\n    this.name = this.inputId;\n    /**\n     * If `true`, the checkbox is selected.\n     */\n\n    this.checked = false;\n    /**\n     * If `true`, the checkbox will visually appear as indeterminate.\n     */\n\n    this.indeterminate = false;\n    /**\n     * If `true`, the user cannot interact with the checkbox.\n     */\n\n    this.disabled = false;\n    /**\n     * The value of the toggle does not mean if it's checked or not, use the `checked`\n     * property for that.\n     *\n     * The value of a toggle is analogous to the value of a `<input type=\"checkbox\">`,\n     * it's only used when the toggle participates in a native `<form>`.\n     */\n\n    this.value = 'on';\n\n    this.onClick = () => {\n      this.setFocus();\n      this.checked = !this.checked;\n      this.indeterminate = false;\n    };\n\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n  }\n\n  componentWillLoad() {\n    this.emitStyle();\n  }\n\n  checkedChanged(isChecked) {\n    this.ionChange.emit({\n      checked: isChecked,\n      value: this.value\n    });\n    this.emitStyle();\n  }\n\n  disabledChanged() {\n    this.emitStyle();\n  }\n\n  emitStyle() {\n    this.ionStyle.emit({\n      'checkbox-checked': this.checked,\n      'interactive-disabled': this.disabled\n    });\n  }\n\n  setFocus() {\n    if (this.buttonEl) {\n      this.buttonEl.focus();\n    }\n  }\n\n  render() {\n    const {\n      inputId,\n      indeterminate,\n      disabled,\n      checked,\n      value,\n      color,\n      el\n    } = this;\n    const labelId = inputId + '-lbl';\n    const mode = getIonMode(this);\n    const label = findItemLabel(el);\n\n    if (label) {\n      label.id = labelId;\n    }\n\n    renderHiddenInput(true, el, this.name, checked ? value : '', disabled);\n    let path = indeterminate ? h(\"path\", {\n      d: \"M6 12L18 12\",\n      part: \"mark\"\n    }) : h(\"path\", {\n      d: \"M5.9,12.5l3.8,3.8l8.8-8.8\",\n      part: \"mark\"\n    });\n\n    if (mode === 'md') {\n      path = indeterminate ? h(\"path\", {\n        d: \"M2 12H22\",\n        part: \"mark\"\n      }) : h(\"path\", {\n        d: \"M1.73,12.91 8.1,19.28 22.79,4.59\",\n        part: \"mark\"\n      });\n    }\n\n    return h(Host, {\n      onClick: this.onClick,\n      role: \"checkbox\",\n      \"aria-disabled\": disabled ? 'true' : null,\n      \"aria-checked\": `${checked}`,\n      \"aria-labelledby\": labelId,\n      class: createColorClasses(color, {\n        [mode]: true,\n        'in-item': hostContext('ion-item', el),\n        'checkbox-checked': checked,\n        'checkbox-disabled': disabled,\n        'checkbox-indeterminate': indeterminate,\n        'interactive': true\n      })\n    }, h(\"svg\", {\n      class: \"checkbox-icon\",\n      viewBox: \"0 0 24 24\",\n      part: \"container\"\n    }, path), h(\"button\", {\n      type: \"button\",\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      disabled: this.disabled,\n      ref: btnEl => this.buttonEl = btnEl\n    }));\n  }\n\n  get el() {\n    return getElement(this);\n  }\n\n  static get watchers() {\n    return {\n      \"checked\": [\"checkedChanged\"],\n      \"disabled\": [\"disabledChanged\"]\n    };\n  }\n\n};\nlet checkboxIds = 0;\nCheckbox.style = {\n  ios: checkboxIosCss,\n  md: checkboxMdCss\n};\nexport { Checkbox as ion_checkbox };","map":{"version":3,"sources":["/workspace/LawsForPaws/LawsForPawsApp/node_modules/@ionic/core/dist/esm/ion-checkbox.entry.js"],"names":["r","registerInstance","e","createEvent","h","H","Host","i","getElement","b","getIonMode","f","findItemLabel","c","renderHiddenInput","createColorClasses","hostContext","checkboxIosCss","checkboxMdCss","Checkbox","constructor","hostRef","ionChange","ionFocus","ionBlur","ionStyle","inputId","checkboxIds","name","checked","indeterminate","disabled","value","onClick","setFocus","onFocus","emit","onBlur","componentWillLoad","emitStyle","checkedChanged","isChecked","disabledChanged","buttonEl","focus","render","color","el","labelId","mode","label","id","path","d","part","role","class","viewBox","type","ref","btnEl","watchers","style","ios","md","ion_checkbox"],"mappings":"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","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-e806d1f6.js';\nimport { b as getIonMode } from './ionic-global-9d5c8ee3.js';\nimport { f as findItemLabel, c as renderHiddenInput } from './helpers-002e4980.js';\nimport { c as createColorClasses, h as hostContext } from './theme-ff3fc52f.js';\n\nconst checkboxIosCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:50%;--border-width:1px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.23);--background:var(--ion-item-background, var(--ion-background-color, #fff));--size:26px;width:var(--size);height:var(--size)}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:8px;margin-top:10px;margin-bottom:9px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.in-item[slot=start]){margin-left:2px;margin-right:20px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:20px;margin-inline-end:20px}}\";\n\nconst checkboxMdCss = \":host{--background-checked:var(--ion-color-primary, #3880ff);--border-color-checked:var(--ion-color-primary, #3880ff);--checkmark-color:var(--ion-color-primary-contrast, #fff);--checkmark-width:1;--transition:none;display:inline-block;position:relative;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.ion-color){--background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}button{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none}[dir=rtl] button,:host-context([dir=rtl]) button{left:unset;right:unset;right:0}button::-moz-focus-inner{border:0}.checkbox-icon{border-radius:var(--border-radius);display:block;position:relative;width:100%;height:100%;-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:calc(var(--size) * .125);--border-width:2px;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.51);--checkmark-width:3;--background:var(--ion-item-background, var(--ion-background-color, #fff));--transition:background 180ms cubic-bezier(0.4, 0, 0.2, 1);--size:18px;width:var(--size);height:var(--size)}.checkbox-icon path{stroke-dasharray:30;stroke-dashoffset:30}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{stroke-dashoffset:0;-webkit-transition:stroke-dashoffset 90ms linear 90ms;transition:stroke-dashoffset 90ms linear 90ms}:host(.checkbox-disabled){opacity:0.3}:host(.in-item){margin-left:0;margin-right:0;margin-top:18px;margin-bottom:18px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:18px;margin-bottom:18px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\n\nconst Checkbox = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.inputId = `ion-cb-${checkboxIds++}`;\n    /**\n     * The name of the control, which is submitted with the form data.\n     */\n    this.name = this.inputId;\n    /**\n     * If `true`, the checkbox is selected.\n     */\n    this.checked = false;\n    /**\n     * If `true`, the checkbox will visually appear as indeterminate.\n     */\n    this.indeterminate = false;\n    /**\n     * If `true`, the user cannot interact with the checkbox.\n     */\n    this.disabled = false;\n    /**\n     * The value of the toggle does not mean if it's checked or not, use the `checked`\n     * property for that.\n     *\n     * The value of a toggle is analogous to the value of a `<input type=\"checkbox\">`,\n     * it's only used when the toggle participates in a native `<form>`.\n     */\n    this.value = 'on';\n    this.onClick = () => {\n      this.setFocus();\n      this.checked = !this.checked;\n      this.indeterminate = false;\n    };\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n  }\n  componentWillLoad() {\n    this.emitStyle();\n  }\n  checkedChanged(isChecked) {\n    this.ionChange.emit({\n      checked: isChecked,\n      value: this.value\n    });\n    this.emitStyle();\n  }\n  disabledChanged() {\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      'checkbox-checked': this.checked,\n      'interactive-disabled': this.disabled,\n    });\n  }\n  setFocus() {\n    if (this.buttonEl) {\n      this.buttonEl.focus();\n    }\n  }\n  render() {\n    const { inputId, indeterminate, disabled, checked, value, color, el } = this;\n    const labelId = inputId + '-lbl';\n    const mode = getIonMode(this);\n    const label = findItemLabel(el);\n    if (label) {\n      label.id = labelId;\n    }\n    renderHiddenInput(true, el, this.name, (checked ? value : ''), disabled);\n    let path = indeterminate\n      ? h(\"path\", { d: \"M6 12L18 12\", part: \"mark\" })\n      : h(\"path\", { d: \"M5.9,12.5l3.8,3.8l8.8-8.8\", part: \"mark\" });\n    if (mode === 'md') {\n      path = indeterminate\n        ? h(\"path\", { d: \"M2 12H22\", part: \"mark\" })\n        : h(\"path\", { d: \"M1.73,12.91 8.1,19.28 22.79,4.59\", part: \"mark\" });\n    }\n    return (h(Host, { onClick: this.onClick, role: \"checkbox\", \"aria-disabled\": disabled ? 'true' : null, \"aria-checked\": `${checked}`, \"aria-labelledby\": labelId, class: createColorClasses(color, {\n        [mode]: true,\n        'in-item': hostContext('ion-item', el),\n        'checkbox-checked': checked,\n        'checkbox-disabled': disabled,\n        'checkbox-indeterminate': indeterminate,\n        'interactive': true\n      }) }, h(\"svg\", { class: \"checkbox-icon\", viewBox: \"0 0 24 24\", part: \"container\" }, path), h(\"button\", { type: \"button\", onFocus: this.onFocus, onBlur: this.onBlur, disabled: this.disabled, ref: btnEl => this.buttonEl = btnEl })));\n  }\n  get el() { return getElement(this); }\n  static get watchers() { return {\n    \"checked\": [\"checkedChanged\"],\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n};\nlet checkboxIds = 0;\nCheckbox.style = {\n  ios: checkboxIosCss,\n  md: checkboxMdCss\n};\n\nexport { Checkbox as ion_checkbox };\n"]},"metadata":{},"sourceType":"module"}